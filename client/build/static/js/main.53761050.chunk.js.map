{"version":3,"sources":["assets/error.svg","assets/complete.svg","assets/no-data.svg","components/app/baseURL.tsx","components/Context.tsx","components/Modal.tsx","components/login/ReducerLogin.tsx","pages/Login.tsx","components/Navbar.tsx","components/home/tiendasData.tsx","pages/Home.tsx","components/dressmaking/SuccessfulModalDressMaking.tsx","components/dressmaking/ReducerDressMaking.tsx","components/dressmaking/ModalAreYouSureDressmaking.tsx","components/FilterDropdown.tsx","pages/DressMaking.tsx","components/warehouse/ModalInventoryWareHouse.tsx","components/warehouse/ModalinsufficientSupplies.tsx","components/warehouse/ModalDecisionSupplies.tsx","components/warehouse/ReducerWarehouse.tsx","pages/WareHouse.tsx","components/design/ReducerDesign.tsx","components/design/ModalInformationDesign.tsx","components/design/ModalDesignInventory.tsx","components/design/ModalDesign.tsx","components/design/ModalDesignAddSupplies.tsx","pages/Design.tsx","components/register/ReducerRegister.tsx","pages/Register.tsx","pages/Logout.tsx","components/warehouseProducts/ModalWarehouseProductsReq.tsx","pages/WareHouseProducts.tsx","components/shops/InfoShopsInventory.tsx","components/shops/ModalShopsReq.tsx","pages/Shops.tsx","components/login/LoginRedirect.tsx","pages/Error.tsx","components/app/ProtectedRoute.tsx","components/RoutesComponent.tsx","App.tsx","index.tsx","assets/Not Found.svg","assets/Loading.svg","assets/Securelogin.svg","assets/shop.png","assets/notify.svg","assets/register.svg"],"names":["module","exports","__webpack_require__","p","baseURL","myContext","createContext","Context","props","_useState","useState","_useState2","Object","slicedToArray","user","setUser","isAuthAPIURL","useEffect","Axios","get","then","response","data","react_default","a","createElement","Provider","value","children","modalID","document","getElementById","Modal","isOpen","ReactDOM","createPortal","className","onClick","closeModal","reducer","state","action","type","objectSpread","isModalOpen","modalContent","Error","defaultState","Login","username","setUsername","_useState3","_useState4","password","setPassword","_useReducer","useReducer","_useReducer2","dispatch","loginAPIURL","name","placeholder","id","autoComplete","onChange","e","target","preventDefault","post","usernameInput","passwordInput","window","location","href","components_Modal","src","errorImage","alt","loginIMG","NavbarContainer","Navbar_Brand","Navbar_NavbarOption","classIcon","title","url","Navbar_UserSection","Brand","NavbarOption","react_router_dom","exact","to","activeClassName","UserSection","withRouter","_ref","switchActive","enable","setEnable","userInfo","Navbar_NavbarContainer","Fragment","tiendasData","latitude","longitude","isShopClicked","setIsShopClicked","infoShopClicked","setInfoShopClicked","_useState5","_useState6","startDate","setStartDate","_useState7","_useState8","endDate","setEndDate","_useState9","_useState10","dataDatesFilter","setDataDatesFilter","_useState11","_useState12","setIsModalOpen","_useState13","_useState14","setModalContent","_useState15","_useState16","percentageSales","setPercentageSales","dashboardPieUrl","dashboardDateFilterURL","mes","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","map","tienda","Marker","key","position","icon","L","iconUrl","iconShopImg","iconSize","eventHandlers","click","startDateRef","endDateRef","react_select_esm","options","monthsData","optionSelected","monthValue","index_esm","width","height","chartType","loader","is3D","rootProps","data-testid","loadingImg","react_datepicker_min_default","selected","date","selectsStart","dateFormat","placeholderText","selectsEnd","minDate","fecha_inicial","fecha_final","idTienda","length","chart","notifyImg","NotSuccessfulRequest","codigo","descripcion","metros","remainingAmount","nombre_imagen","SuccessfulModalDressMaking","checkNumber","setTimeout","SuccessfulModalDressMaking_NotSuccessfulRequest","warningMissingSupplies","payload","isInsufficientModalOpen","imgCheckNumber","idModalAreYouSureDressmaking","ModalAreYouSureDressmaking","handleClose","subAmountFunction","Dropdown","label","prompt","open","setOpen","inputOpen","query","setQuery","ref","useRef","addEventListener","close","removeEventListener","current","prev","concat","filter","option","toString","toLowerCase","indexOf","DressMaking","references","setReferences","amount","setAmount","approvedRequests","setApprovedRequests","requestsHistory","setRequestsHistory","refContainer","isOpenARYModal","setIsOpenARYModal","infoProcess","setInfoProcess","_useState17","_useState18","valueReferenceSelect","setValueReferenceSelect","_useState19","_useState20","toggleState","setToggleState","dbReferencesURL","dbWareHouseRequest","dbApprovedRequests","dbUpdateDressMakingProcess","dbRequestHistoryDressmaking","handleNavbarClick","getAttribute","querySelector","offsetTop","scrollTo","toggleTab","index","components_FilterDropdown","val","ReferenceSelected","isReferenceExist","correctAmount","parseFloat","referencia","enableInput","Number","isInteger","actualAmount","referenceSelection","noDataImage","item","cantidad","timestamp","replace","slice","HTMLElement","valueInput","reference","verificationARYModal","request","numero_de_orden","decision","dressmaking_SuccessfulModalDressMaking","completeImage","dressmaking_ModalAreYouSureDressmaking","diff","ModalInvetoryBodega","searchTerm","setSearchTerm","iterator","enableEmpty","showEmptySearch","handlerSearch","includes","notFoundImage","insufficientSuppliesID","ModalinsufficientSupplies","console","log","arrayNoSupplies","handlerReject","infoRequest","idModalDecisionSupplies","ModalDecisionSupplies","informationSuppliesURL","informationSupplies","setInformationSupplies","color","handlerAccept","modalFormContent","isFormModalOpen","modalUpdateContent","isModalUpdateOpen","isOpenNoSupplies","isModalSuppliesOpen","code","setCode","setColor","description","setDescription","img","setImg","queryData","setQueryData","updateAmount","setUpdateAmount","dressMakingReq","setDressMakingReq","_useState21","_useState22","suppliesData","setSuppliesData","_useState23","_useState24","_useState25","_useState26","setInfoRequest","_useState27","_useState28","isOpenDecision","setIsOpenDecision","_useState29","_useState30","valueCode","setValueCode","_useState31","_useState32","valueSupplieDropdown","setValueSupplieDropdown","_useState33","_useState34","_useState35","_useState36","switchUseEffect","setSwitchUseEffect","saveClothAPIURL","invetoryBodegaAPIURL","invetoryWareHouseAPIURL","updateInventoryWareHouseURL","getDressMakingRequest","dbSuppliesURL","dbSaveDecision","catch","error","handlerRefuse","idDecision","filterResult","tpye","supplieSelected","newCloth","parseInt","codigoInput","colorInput","amountInput","descripcionInput","imgInput","warehouse_ModalInventoryWareHouse","codeSelected","isCodeExist","inputUpdateAmount","enableAmount","payloadUpdate","req","checkAccept","handlerDecision","warehouse_ModalinsufficientSupplies","warehouse_ModalDecisionSupplies","sampleInventory","isInventoryModalOpen","modalInventoryContent","informationModalID","ModalInformationDesign","referenceArray","consumptionAmount","ModalDesignInventory","referenceNumber","setReferenceNumber","setReferenceArray","getreferenceconsumptionURL","talla","valor_unidad","handlerInfoModal","design_ModalInformationDesign","ModalDesign","addSuppliesID","ModalDesignAddSupplies","valueSelect","setValueSelect","dBWareHouseSupplies","setdBWareHouseSupplies","addedInformation","setAddedInformation","dbWareHouseCodesURL","inputAmount","setInputAmount","valueSelectComp","inputSelectIterator","inputSelectAddedInfo","style","amountHTML","supplyCode","enableSelector","informationObject","supplyAmount","toConsumableArray","design_ModalDesign","newAddedInformation","removeItem","suppliesFromDesign","dbSaveNewReference","productionAPIURL","switchReRender","setSwitchReRender","addReference","setAddReference","addDescription","setAddDescription","addColor","setAddColor","addImageName","setAddImageName","addValuePerUnit","setAddValuePerUnit","valueSizeSelect","setValueSizeSelect","sizesArray","addSize","addedInformationFromModal","setAddedInformationFromModal","modalAddSupplies","setModalAddSupplies","setEmptyValues","addReferenceOption","addDescriptionOption","addColorOption","addImageNameOption","requestPayload","valuePerUnit","design_ModalDesignInventory","design_ModalDesignAddSupplies","msg","Register","passwordForm","setPasswordForm","validatePasswordForm","setValidatePasswordForm","idRol","setIdRol","postRegisterURL","validatePasswordInput","idRolInput","newUser","validationUsername","registerImg","logoutAPIURL","err","IDWarehouseProductsReq","ModalWarehouseProductsReq","checkReqNumber","infoReq","info","numero_lote","handlerPartialDelivery","errorIMG","WareHouseProducts","wareHouseProducts","setWareHouseProducts","shopRequestInfo","setShopRequestInfo","actualShopRequests","setActualShopRequest","isOpenModalReq","setIsOpenModalReq","setCheckReqNumber","indexModal","setIndexModal","dbWareHouseProducts","dbShopsRequestProducts","dbActualShopsRequests","dbPartialDelivery","shop","nombre_tienda","direccion","data-index","faltante","handlerShowInfo","warehouseProducts_ModalWarehouseProductsReq","neededStock","InfoShopsInventory","handleSearch","handlerReceived","receivedFunction","arrayInformation","modalShopsReqId","ModalShopsReq","requiredStock","requiredStockOrdered","setRequiredStockOrdered","handleDecision","decisionNumber","cantidadTotal","stockMissingAmount","stockAvailableAmount","Shops","shops","setShops","shopsOrigin","setShopsOrigin","shopsDestination","setShopsDestination","valueShopSelect","setValueShopSelect","infoDeliveryState","setInfoDeliveryState","infoActualInventory","setInfoActualInventory","setRequiredStock","infoRequestsBetweenShops","setInfoRequestsBetweenShops","isShopOriginSelected","setIsShopOriginSelected","_useState37","_useState38","_useState39","_useState40","setStockMissingAmount","_useState41","_useState42","setStockAvailableAmount","_useState43","_useState44","auxiliar","setAuxiliar","refInputBetweenShops","refInputReqToWarehouseProducts","_useState45","_useState46","_useState47","_useState48","value_reference_request","set_value_reference_request","_useState49","_useState50","amount_request","set_amount_request","_useState51","_useState52","value_origin_shop","set_value_origin_shop","_useState53","_useState54","value_destination_shop","set_value_destination_shop","_useState55","_useState56","dbShopsInfoURL","dbProductsRequestURL","dbDeliveryState","dbActualInventory","dbActualRequestsBetweenShops","dbUpdateReceivedState","dbRequestBetweenShops","dbDecisionBetweenShops","dbSaveNewShopRequest","check_existing_value","asyncToGenerator","regenerator_default","mark","_callee","check_case","wrap","_context","next","sent","abrupt","t0","stop","_x","_x2","apply","this","arguments","check_type_case","case_parameter","case_attribute","result","productsRequest","_ref2","_callee2","valueReferenceSelected","valueShopSelected","isShopExist","enableInput2","_context2","idShop","query_post","_ref3","_callee3","_context3","_x3","_x4","request_betweenshops_handler","_ref4","_callee4","valueOriginShopSelected","valueDestinationShopSelected","isOShopExist","isDShopExist","enableInput3","_context4","tienda_origen","tienda_destino","handler_required_stock","_ref5","_callee5","actualTarget","required_stock_size","amount_number","_context5","numero_peticion","undefined","_x5","handler_final_decision","_ref6","_callee6","id_decision","_context6","numeros_de_entrada","envio_real","_x6","shops_InfoShopsInventory","nameShopSelected","JSON","stringify","shopsNamesFiltered","handleDropdownChange","tienda_origen_nombre","tienda_destino_nombre","shops_ModalShopsReq","indexReq","LoginRedirect","isAuth","Component","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","ProtectedRoute","Routes","rol","enableRoutes","app_ProtectedRoute","path","Home","WareHouse","Diseño","Logout","defaults","withCredentials","App","setIsAuth","setEnableRoutes","ctx","useContext","components_Navbar","RoutesComponent","login_LoginRedirect","components_Context","src_App"],"mappings":"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","file":"static/js/main.53761050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.2fc8b26b.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete.c8683c24.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-data.c2258281.svg\";","// DEV\r\n//  export const baseURL: string = 'http://localhost:52000/';\r\n\r\n// PRODUCTION\r\nexport const baseURL: string = 'http://gestion-inventarios.ddns.net:52000/';\r\n","import React, {\r\n  createContext,\r\n  Props,\r\n  PropsWithChildren,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n} from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport {baseURL} from './app/baseURL';\r\n\r\nexport const myContext = createContext<any>({});\r\nfunction Context(props: PropsWithChildren<any>) {\r\n  const [user, setUser] = useState<any>();\r\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\r\n\r\n  useEffect(() => {\r\n    Axios.get(isAuthAPIURL)\r\n      .then((response) => {\r\n        setUser(response.data);\r\n      })\r\n  }, []);\r\n\r\n  return <myContext.Provider value={user}>{props.children}</myContext.Provider>;\r\n}\r\n\r\nexport default Context;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/Modal.css';\r\n\r\nconst modalID: any = document.getElementById('modal');\r\n\r\nconst Modal = (props: any) => {\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n  if (!props.isOpen) {\r\n    return null;\r\n  }\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalComponent\">\r\n      <div className=\"ModalComponent__container\">\r\n        <button onClick={handleClose} className=\"ModalComponent__close-button\">\r\n          X\r\n        </button>\r\n        {props.children}\r\n      </div>\r\n    </div>,\r\n    modalID\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","interface IState {\r\n  isModalOpen: boolean;\r\n  modalContent: string;\r\n}\r\n\r\ninterface IActions {\r\n  type: string;\r\n}\r\n\r\nexport const reducer = (state: IState, action: IActions) => {\r\n  if (action.type === 'LOGIN_INFORMATION_INCOMPLETE') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: 'Error: No ha digitado todos los campos',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'ERROR_AUTH') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: 'Error: El Usuario y/o la contraseña son incorrectos',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return {...state, isModalOpen: false};\r\n  }\r\n  throw new Error('No matching action Type');\r\n};\r\n","import React, {useState, useReducer} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n//CSS:\r\nimport './style/Login.css';\r\n\r\n//My_modules:\r\nimport {baseURL} from '../components/app/baseURL';\r\nimport loginIMG from '../assets/Securelogin.svg';\r\nimport Modal from '../components/Modal';\r\nimport errorImage from '../assets/error.svg';\r\n\r\n//Assets:\r\n\r\n//Reducer\r\nimport {reducer} from '../components/login/ReducerLogin';\r\n\r\ninterface IDefaultState {\r\n  isModalOpen: boolean;\r\n  modalContent: string;\r\n}\r\n\r\nconst defaultState: IDefaultState = {\r\n  isModalOpen: false,\r\n  modalContent: '',\r\n};\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const loginAPIURL: string = baseURL + 'api/login';\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (username && password) {\r\n      Axios.post(loginAPIURL, {\r\n        username,\r\n        password,\r\n      })\r\n        .then((response) => {\r\n          const isAuth: string = response.data;\r\n          if (isAuth === 'ERROR') {\r\n            dispatch({type: 'ERROR_AUTH'});\r\n            const usernameInput = document.getElementById(\r\n              'username'\r\n            ) as HTMLInputElement;\r\n            const passwordInput = document.getElementById(\r\n              'password'\r\n            ) as HTMLInputElement;\r\n            usernameInput.value = '';\r\n            passwordInput.value = '';\r\n          } else {\r\n            window.location.href = '/';\r\n          }\r\n        })\r\n    } else {\r\n      dispatch({type: 'LOGIN_INFORMATION_INCOMPLETE'});\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({type: 'CLOSE_MODAL'});\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-login-container\">\r\n      <form className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <div className=\"border-div\"></div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Usuario\"\r\n          id=\"username\"\r\n          autoComplete=\"off\"\r\n          onChange={(e: any) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          autoComplete=\"off\"\r\n          id=\"password\"\r\n          onChange={(e: any) => setPassword(e.target.value)}\r\n        />\r\n        <button onClick={handleSubmit} className=\"btn\">\r\n          Iniciar sesión\r\n        </button>\r\n      </form>\r\n      {state.isModalOpen && (\r\n        <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\r\n          <h1 className=\"modalLoginh1\">{state.modalContent}</h1>\r\n          <img className=\"modalLoginImg\" src={errorImage} alt=\"modalImg\" />\r\n        </Modal>\r\n      )}\r\n      <div className=\"img-login-container\">\r\n        <img src={loginIMG} alt=\"login\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport './style/Navbar.css';\r\nimport {withRouter, Link, NavLink} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport App from '../App';\r\nimport {baseURL} from './app/baseURL';\r\n\r\nfunction Navbar({switchActive}: any) {\r\n  const [enable, setEnable] = useState<boolean>(false);\r\n  const [user, setUser] = useState<string>('');\r\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\r\n\r\n  useEffect(() => {\r\n    Axios.get(isAuthAPIURL)\r\n      .then((response) => {\r\n        const userInfo: any = response.data;\r\n        setUser(userInfo.user);\r\n        setEnable(true);\r\n      })\r\n  }, [enable]);\r\n\r\n  if (enable) {\r\n    switchActive();\r\n    return (\r\n      <div className=\"navbar-user-container\">\r\n        <NavbarContainer user={user} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <></>;\r\n}\r\n\r\nconst NavbarContainer = (props: any) => {\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <Brand />\r\n      <NavbarOption classIcon=\"gg-chart\" title=\"Dashboard\" url=\"/\" />\r\n      <NavbarOption classIcon=\"gg-pen\" title=\"Taller Diseño\" url=\"/diseño\" />\r\n      <NavbarOption classIcon=\"gg-box\" title=\"Bodega Insumo\" url=\"/warehouse\" />\r\n      <NavbarOption\r\n        classIcon=\"gg-shape-half-circle\"\r\n        title=\"Confección\"\r\n        url=\"/dressmaking\"\r\n      />\r\n      <NavbarOption\r\n        classIcon=\"gg-browse\"\r\n        title=\"Bodega Producto\"\r\n        url=\"/warehouseproducts\"\r\n      />\r\n      <NavbarOption classIcon=\"gg-home-alt\" title=\"Tiendas\" url=\"/shops\" />\r\n      <NavbarOption classIcon=\"gg-add-r\" title=\"Registrar\" url=\"/register\" />\r\n      <NavbarOption\r\n        classIcon=\"gg-log-out\"\r\n        title=\"Cerrar Sesion\"\r\n        url=\"/logout\"\r\n      />\r\n      <UserSection user={props.user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Brand = () => {\r\n  return (\r\n    <div className=\"navbar-brand\">\r\n      <div className=\"navbar-brand__icon\">\r\n        <i className=\"gg-read\"></i>\r\n      </div>\r\n      <h5 className=\"navbar-brand__h5\">Rutnev</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface INavbarOption {\r\n  classIcon: string;\r\n  title: string;\r\n  url: string;\r\n}\r\n\r\nconst NavbarOption = (props: INavbarOption) => {\r\n  const {classIcon, title, url} = props;\r\n  return (\r\n    <NavLink\r\n      exact\r\n      to={url}\r\n      className=\"click_navbar-option\"\r\n      activeClassName=\"clicked_navbar-option\"\r\n    >\r\n      <div className=\"navbar-option\">\r\n        <div className=\"navbar-option__icon\">\r\n          <i className={classIcon}></i>\r\n        </div>\r\n        <h5 className=\"navbar-option__h5\">{title}</h5>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nconst UserSection = (props: any) => {\r\n  return(\r\n    <div className=\"user-section\">\r\n      <div className=\"user-section__icon\">\r\n          <i className=\"gg-user\"></i>\r\n        </div>\r\n      <h4>{props.user}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","interface ITiendas {\r\n  id: number;\r\n  name: string;\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\nexport const tiendasData: ITiendas[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Tienda Sur',\r\n    latitude: 11.001643604812687,\r\n    longitude: -74.81665954890138,\r\n  },\r\n  {\r\n    id: 0,\r\n    name: 'Tienda Norte',\r\n    latitude: 11.009774250972912,\r\n    longitude: -74.81215193217375,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MapContainer, Marker, TileLayer } from \"react-leaflet\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport L from \"leaflet\";\r\nimport Select from \"react-select\";\r\nimport Axios from \"axios\";\r\n\r\nimport { baseURL } from \"../components/app/baseURL\";\r\nimport iconShopImg from \"../assets/shop.png\";\r\nimport loadingImg from \"../assets/Loading.svg\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\r\nimport monthsData from \"../components/home/months.json\";\r\nimport Modal from \"../components/Modal\";\r\nimport notifyImg from \"../assets/notify.svg\";\r\n\r\nimport \"./style/Home.css\";\r\nimport { tiendasData } from \"../components/home/tiendasData\";\r\n\r\nconst Home = () => {\r\n  const [isShopClicked, setIsShopClicked] = useState<boolean>(false);\r\n  const [infoShopClicked, setInfoShopClicked] = useState({ id: \"\", name: \"\" });\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [dataDatesFilter, setDataDatesFilter] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [modalContent, setModalContent] = useState<string>(\"\");\r\n  const [percentageSales, setPercentageSales] = useState([[\"Shop\", \"Ventas\"]]);\r\n  const dashboardPieUrl: string = baseURL + \"api/dashboard_pie\";\r\n  const dashboardDateFilterURL: string = baseURL + \"api/dashboard_date_filter\";\r\n\r\n  useEffect(() => {\r\n    Axios.post(dashboardPieUrl, {\r\n      mes: \"05\",\r\n    }).then((response: any) => {\r\n      setPercentageSales(response.data);\r\n    });\r\n  }, []);\r\n\r\n  function getIcon() {\r\n    return L.icon({\r\n      iconUrl: iconShopImg,\r\n      iconSize: [30, 30],\r\n    });\r\n  }\r\n\r\n  const handleChange = (optionSelected: any) => {\r\n    const monthValue = optionSelected.value;\r\n    Axios.post(dashboardPieUrl, {\r\n      mes: monthValue,\r\n    }).then((response: any) => {\r\n      setPercentageSales(response.data);\r\n    });\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    const startDateRef = document.getElementById(\r\n      \"start-date-picker\"\r\n    ) as HTMLInputElement;\r\n    const endDateRef = document.getElementById(\r\n      \"end-date-picker\"\r\n    ) as HTMLInputElement;\r\n\r\n    if (startDateRef.value !== \"\" || endDateRef.value !== \"\") {\r\n      Axios.post(dashboardDateFilterURL, {\r\n        fecha_inicial: startDateRef.value,\r\n        fecha_final: endDateRef.value,\r\n        idTienda: infoShopClicked.id,\r\n      }).then((response: any) => {\r\n        const dataDates = response.data;\r\n        if (dataDates.length > 1) {\r\n          setDataDatesFilter(response.data);\r\n        } else {\r\n          setDataDatesFilter([]);\r\n          setModalContent(\"No hay ventas en ese rango de fecha\");\r\n          setIsModalOpen(true);\r\n        }\r\n      });\r\n    } else {\r\n      setModalContent(\"Por favor, digite las fechas bien\");\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-container-home\">\r\n      <div className=\"navbar-home\">\r\n        <h2 className=\"navbar-home__h2\">Dashboard</h2>\r\n      </div>\r\n      <div className=\"map-section\">\r\n        <div className=\"map-home-container\">\r\n          <h3>Mapa</h3>\r\n          <p>\r\n            En este apartado puedes puedes ver las tiendas en el mapa. Si das\r\n            click en una de las tiendas, en la esquina inferior derecha\r\n            aparecerá información de las ventas de esta.\r\n          </p>\r\n          <MapContainer\r\n            center={[11.004462, -74.814401]}\r\n            zoom={15}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {tiendasData.map((tienda: any) => (\r\n              <Marker\r\n                key={tienda.id}\r\n                position={[tienda.latitude, tienda.longitude]}\r\n                icon={getIcon()}\r\n                eventHandlers={{\r\n                  click: () => {\r\n                    setInfoShopClicked(tienda);\r\n                    setDataDatesFilter([]);\r\n                    setIsShopClicked(true);\r\n                    const startDateRef = document.getElementById(\r\n                      \"start-date-picker\"\r\n                    ) as HTMLInputElement;\r\n                    const endDateRef = document.getElementById(\r\n                      \"end-date-picker\"\r\n                    ) as HTMLInputElement;\r\n                    startDateRef.value = \"\";\r\n                    endDateRef.value = \"\";\r\n                  },\r\n                }}\r\n              />\r\n            ))}\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"stats-home-container\">\r\n          <h3>Estadísticas</h3>\r\n          <p>\r\n            En este apartado puedes ver el porcentaje de ventas correspondiente\r\n            a cada tienda. Además, puedes filtrar por mes.\r\n          </p>\r\n          <div className=\"month-filter-pie-chart-container\">\r\n            <div className=\"month-select-container\">\r\n              <Select\r\n                options={monthsData}\r\n                placeholder=\"Filtrar por mes\"\r\n                className=\"month-select-container__select\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"pie-chart-container\">\r\n              <Chart\r\n                width={\"100%\"}\r\n                height={\"100%\"}\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={percentageSales}\r\n                options={{\r\n                  title: \"Total ventas\",\r\n                  is3D: true,\r\n                }}\r\n                rootProps={{ \"data-testid\": \"1\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"specific-stats-for-shops-container\">\r\n            {!isShopClicked && (\r\n              <>\r\n                <h3>Estadisticas especificas de la tienda</h3>\r\n                <p>\r\n                  Si haces click en uno de los iconos de tiendas que se\r\n                  encuentran en el mapa, se desplegará aquí un diagrama de\r\n                  barras sobre las ventas de la tienda en específico.\r\n                </p>\r\n                <div className=\"pie-chart-img-container\">\r\n                  <img src={loadingImg} alt=\"loading\" />\r\n                </div>\r\n              </>\r\n            )}\r\n            {isShopClicked && (\r\n              <>\r\n                <h3>Ventas de la {infoShopClicked.name}</h3>\r\n                <p>\r\n                  En este apartado se muestra las ventas de la{\" \"}\r\n                  {infoShopClicked.name}. Para ver el gráfico de barras, utiliza\r\n                  el filtro.\r\n                </p>\r\n                <div className=\"filter-date-container\">\r\n                  <DatePicker\r\n                    selected={startDate}\r\n                    onChange={(date: any) => {\r\n                      setStartDate(date);\r\n                    }}\r\n                    selectsStart\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    dateFormat=\"yyyy-MM-dd\"\r\n                    placeholderText=\"Selecciona la fecha inicial\"\r\n                    className=\"start-date-picker\"\r\n                    id=\"start-date-picker\"\r\n                  />\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={(date: any) => setEndDate(date)}\r\n                    selectsEnd\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    minDate={startDate}\r\n                    dateFormat=\"yyyy-MM-dd\"\r\n                    placeholderText=\"Selecciona la fecha final\"\r\n                    className=\"end-date-picker\"\r\n                    id=\"end-date-picker\"\r\n                  />\r\n                  <button\r\n                    className=\"btn\"\r\n                    id=\"filter-button\"\r\n                    onClick={handleFilter}\r\n                  >\r\n                    Filtrar por fecha\r\n                  </button>\r\n                </div>\r\n                {dataDatesFilter.length === 0 && (\r\n                  <div className=\"bar-chart-img-container\">\r\n                    <img src={loadingImg} alt=\"loading\" />\r\n                  </div>\r\n                )}\r\n                {dataDatesFilter.length !== 0 && (\r\n                  <div className=\"bar-chart-container\">\r\n                    <Chart\r\n                      width={\"500px\"}\r\n                      height={\"300px\"}\r\n                      chartType=\"Bar\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={dataDatesFilter}\r\n                      options={{\r\n                        chart: {\r\n                          title:\r\n                            \"Gráfico de barras de las ventas de la tienda \",\r\n                        },\r\n                      }}\r\n                      rootProps={{ \"data-testid\": \"2\" }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={isModalOpen} closeModal={closeModal}>\r\n        <h1 className=\"modalHome\">{modalContent}</h1>\r\n        <img className=\"modalHomeImg\" src={notifyImg} alt=\"modalImg\" />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, {useEffect} from 'react';\r\nimport './style/SuccessfulModalDressMaking.css';\r\n\r\n// INTERFACES\r\ninterface IWareHouseElements {\r\n  codigo: number;\r\n  color: string;\r\n  metros?: number;\r\n  cantidad?: number;\r\n  descripcion: string;\r\n  nombre_imagen: string;\r\n  timestamp: string;\r\n  remainingAmount: string;\r\n}\r\n\r\nconst SuccessfulModalDressMaking = ({\r\n  modalContent,\r\n  checkNumber,\r\n  closeModal,\r\n}: any) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeModal();\r\n    }, 40000);\r\n  });\r\n\r\n  return <NotSuccessfulRequest modalContent={modalContent} />;\r\n};\r\n\r\nconst NotSuccessfulRequest = (modalContent: any) => {\r\n  const showAmount = (props: IWareHouseElements): number | undefined => {\r\n    if (props.metros == null) {\r\n      return props.cantidad;\r\n    }\r\n    return props.metros;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container_table\">\r\n        <div className=\"table_title\">Información</div>\r\n        <div className=\"table_header\">Insumo insuficiente</div>\r\n        <div className=\"table_header\">Imagen</div>\r\n        {modalContent.modalContent.map((props: IWareHouseElements) => {\r\n          return (\r\n            <div className=\"items_container\" key={props.codigo}>\r\n              <div className=\"sub_items_container\">\r\n                <div className=\"sub_sub_items_container\">\r\n                  <div className=\"table_item\">Item: {props.codigo}</div>\r\n                  <div className=\"table_item\">\r\n                    Descripción: {props.descripcion}\r\n                  </div>\r\n                  <div className=\"table_item\">Existencias: {props.metros}</div>\r\n                  <div className=\"table_item\">\r\n                    Remanente: {props.remainingAmount}\r\n                  </div>\r\n                </div>\r\n                <div className=\"table_item\">\r\n                  <img className=\"table_img\" src={props.nombre_imagen} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuccessfulModalDressMaking;\r\n","export const reducer = (state: any, action: any) => {\r\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\r\n    const warningMissingSupplies = action.payload;\r\n    return {\r\n      ...state,\r\n      modalContent: warningMissingSupplies,\r\n      isInsufficientModalOpen: true,\r\n      checkNumber: 0,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === 'SUCCESSFUL_REQUEST') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['Petición realizada con exito'],\r\n      isModalOpen: true,\r\n      isInsufficientModalOpen: false,\r\n      checkNumber: 1,\r\n      imgCheckNumber: 1,\r\n    };\r\n  }\r\n  if (action.type === 'WRONG_INPUT') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['Por favor: Ingrese correctamente los campos.'],\r\n      isModalOpen: true,\r\n      isInsufficientModalOpen: false,\r\n      checkNumber: 2,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === 'WRONG_INPUT_PROCESS') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['Por favor: Ingrese correctamente los campos.'],\r\n      isModalOpen: true,\r\n      isInsufficientModalOpen: false,\r\n      checkNumber: 2,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === 'DIFF_NEGATIVE') {\r\n    return {\r\n      ...state,\r\n      modalContent: [\r\n        'Error: Digite una cantidad menor o igual a la cantidad en proceso.',\r\n      ],\r\n      isModalOpen: true,\r\n      isInsufficientModalOpen: false,\r\n      checkNumber: 2,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'REFERENCE_DOES_NOT_EXIST') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['Error: Esta referencia no existe.'],\r\n      isModalOpen: true,\r\n      isInsufficientModalOpen: false,\r\n      checkNumber: 2,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: false,\r\n      isInsufficientModalOpen: false,\r\n      imgCheckNumber: 0,\r\n    };\r\n  }\r\n\r\n  return {...state, isModalOpen: false, imgCheckNumber: 0};\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/ModalAreYouSureDressmaking.css';\r\n\r\nconst idModalAreYouSureDressmaking: any = document.getElementById(\r\n  'ModalAreYouSureDressmaking'\r\n);\r\n\r\nconst ModalAreYouSureDressmaking = (props: any) => {\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n\r\n  const handleAccept = () => {\r\n    props.subAmountFunction();\r\n    props.closeModal();\r\n  };\r\n\r\n  if (!props.isOpen) return null;\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalAYSDressmakingComponent\">\r\n      <div className=\"ModalAYSDressmakingComponent__container\">\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"ModalAYSDressmakingComponent__close-button\"\r\n        >\r\n          X\r\n        </button>\r\n        <h3 className=\"ModalAYSDressmakingComponent__h3\">¿Estás seguro?</h3>\r\n        <p className=\"ModalAYSDressmakingComponent__p\">\r\n          Ten cuidado. Solo presiona el botón de aceptar si estás completamente\r\n          seguro porque no hay vuelta atrás.\r\n        </p>\r\n        <div className=\"ARYDressmakingButtonsContainer\">\r\n          <button\r\n            className=\"btn ARYDressmakingButtonsContainer__accept\"\r\n            onClick={handleAccept}\r\n          >\r\n            Aceptar\r\n          </button>\r\n          <button\r\n            className=\"btn ARYDressmakingButtonsContainer__cancel\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    idModalAreYouSureDressmaking\r\n  );\r\n};\r\n\r\nexport default ModalAreYouSureDressmaking;\r\n","import React, {useState, useRef, useEffect} from 'react';\r\n\r\nimport './style/FilterDropdown.css';\r\n\r\nconst Dropdown = ({options, id, label, prompt, value, onChange}: any) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inputOpen, setInputOpen] = useState(false);\r\n  const [query, setQuery] = useState<string>('');\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', close);\r\n    return () => document.removeEventListener('click', close);\r\n  }, []);\r\n\r\n  const close = (e: any) => {\r\n    setOpen(e && e.target === ref.current);\r\n  };\r\n\r\n  const filter = (options: any) => {\r\n    return options.filter(\r\n      (option: any) =>\r\n        option[label].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\r\n    );\r\n  };\r\n\r\n  const displayValue = () => {\r\n    if (query.length > 0) return query;\r\n    if (value) return value[label];\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div\r\n        className=\"control\"\r\n        onClick={() => {\r\n          setOpen((prev) => !prev);\r\n          if (inputOpen) setOpen(false);\r\n        }}\r\n      >\r\n        <div className=\"selected-value\">\r\n          <input\r\n            type=\"number\"\r\n            id=\"valueInput\"\r\n            ref={ref}\r\n            placeholder={value ? value[label] : prompt}\r\n            value={displayValue()}\r\n            onChange={(e: any) => {\r\n              setQuery(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            onClick={() => setOpen((prev) => !prev)}\r\n          />\r\n        </div>\r\n        <div className={`arrow ${open ? 'open' : null}`} />\r\n      </div>\r\n      <div className={`options ${open ? 'open' : null}`}>\r\n        {filter(options).map((option: any) => {\r\n          return (\r\n            <div\r\n              key={option[id]}\r\n              className={`option ${value === option ? 'selected' : null}`}\r\n              onClick={() => {\r\n                setQuery('');\r\n                onChange(option);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              {option[label]}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\r\n// REDUCER\r\nimport { reducer } from \"../components/dressmaking/ReducerDressMaking\";\r\nimport \"./style/DressMaking.css\";\r\nimport \"../components/dressmaking/style/buttonStyle.css\";\r\nimport { baseURL } from \"../components/app/baseURL\";\r\nimport Modal from \"../components/Modal\";\r\nimport completeImage from \"../assets/complete.svg\";\r\nimport errorImage from \"../assets/error.svg\";\r\nimport noDataImage from \"../assets/no-data.svg\";\r\nimport { updateSourceFile } from \"typescript\";\r\nimport ModalAreYouSureDressmaking from \"../components/dressmaking/ModalAreYouSureDressmaking\";\r\nimport FilterDropdown from \"../components/FilterDropdown\";\r\n\r\n// INTERFACES\r\ninterface IReference {\r\n  referencia: number;\r\n  id_talla: number;\r\n  descripcion: string;\r\n  color: string;\r\n  nombre_imagen: string;\r\n  codigoycantidad: string;\r\n}\r\n\r\nconst defaultState: any = {\r\n  modalContent: [],\r\n  isModalOpen: false,\r\n  isInsufficientModalOpen: false,\r\n  checkNumber: 0,\r\n  imgCheckNumber: 0,\r\n};\r\n\r\nconst DressMaking: React.FC = () => {\r\n  const [references, setReferences] = useState<IReference[]>([]);\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  const [selectedReference, setSelectedReference] = useState<string>(\"\");\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const [approvedRequests, setApprovedRequests] = useState<any>([]);\r\n  const [requestsHistory, setRequestsHistory] = useState<any>([]);\r\n  const [numberInput, setNumberInput] = useState<string>(\"\");\r\n  const refContainer: any = useRef(null);\r\n  const [isOpenARYModal, setIsOpenARYModal] = useState<boolean>(false);\r\n  const [infoProcess, setInfoProcess] = useState<any>({});\r\n  const [valueReferenceSelect, setValueReferenceSelect] = useState<any>(null);\r\n  const [toggleState, setToggleState] = useState(1);\r\n  const dbReferencesURL: string = baseURL + \"api/references\";\r\n  const dbSuppliesURL: string = baseURL + \"api/suppliesrequest\";\r\n  const dbWareHouseRequest: string = baseURL + \"api/requesttowarehouse\";\r\n  const dbApprovedRequests: string = baseURL + \"api/getapprovedrequests\";\r\n  const dbUpdateDressMakingProcess: string =\r\n    baseURL + \"api/updatedressmakingprocess\";\r\n  const dbRequestHistoryDressmaking: string =\r\n    baseURL + \"api/getRequestHistoryDressmaking\";\r\n\r\n  // HANDLE AMOUNT INPUT\r\n  const handleInput = (input: any) => {\r\n    setAmount(input);\r\n    if (input.includes(\".\") || input.includes(\"-\") || input.includes(\"!\")) {\r\n      const amountInputHTML: any = document.getElementById(\"amountInput\");\r\n      amountInputHTML.value = \"\";\r\n      setAmount(\"\");\r\n    }\r\n  };\r\n\r\n  // GET REFERENCES\r\n  useEffect(() => {\r\n    Axios.get(dbReferencesURL).then((response: AxiosResponse) => {\r\n      setReferences(response.data);\r\n    });\r\n\r\n    Axios.get(dbApprovedRequests).then((response: AxiosResponse) => {\r\n      setApprovedRequests(response.data);\r\n    });\r\n\r\n    Axios.get(dbRequestHistoryDressmaking).then((response: AxiosResponse) => {\r\n      setRequestsHistory(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const suppliesRequest = () => {\r\n    let ReferenceSelected = \"\";\r\n    let isReferenceExist = 0;\r\n    const correctAmount = parseFloat(amount);\r\n\r\n    if (valueReferenceSelect === null) {\r\n      ReferenceSelected = \"\";\r\n    } else if (typeof valueReferenceSelect === \"object\") {\r\n      ReferenceSelected = valueReferenceSelect.referencia.toString();\r\n    } else if (typeof valueReferenceSelect === \"string\") {\r\n      ReferenceSelected = valueReferenceSelect;\r\n    }\r\n\r\n    references.map((val: any) => {\r\n      if (val.referencia === ReferenceSelected) {\r\n        isReferenceExist += 1;\r\n        return isReferenceExist;\r\n      } else {\r\n        return isReferenceExist;\r\n      }\r\n    });\r\n\r\n    let enableInput = ReferenceSelected !== \"\";\r\n    if (Number.isInteger(correctAmount) && correctAmount > 0 && enableInput) {\r\n      if (isReferenceExist === 1) {\r\n        Axios.post(dbWareHouseRequest, {\r\n          actualAmount: amount,\r\n          referenceSelection: ReferenceSelected,\r\n        }).then((response: AxiosResponse): void => {\r\n          if (response.data === \"SUCCESSFUL_REQUEST\") {\r\n            setAmount(\"\");\r\n            setValueReferenceSelect(null);\r\n            refContainer.current.value = \"\";\r\n            dispatch({ type: \"SUCCESSFUL_REQUEST\" });\r\n          } else {\r\n            dispatch({ type: \"INSUFFICIENT_SUPPLIES\", payload: response.data });\r\n          }\r\n        });\r\n      } else {\r\n        dispatch({ type: \"REFERENCE_DOES_NOT_EXIST\" });\r\n      }\r\n    } else {\r\n      dispatch({ type: \"WRONG_INPUT\" });\r\n      refContainer.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const verificationARYModal = (\r\n    referencia: any,\r\n    id: any,\r\n    amount: any,\r\n    HTMLElement: any\r\n  ) => {\r\n    const valueInput = parseFloat(HTMLElement.value);\r\n    const inputCondition = valueInput > 0 && Number.isInteger(valueInput);\r\n    if (inputCondition) {\r\n      let diff = parseFloat(amount) - valueInput;\r\n      if (diff >= 0) {\r\n        setIsOpenARYModal(true);\r\n        setInfoProcess({\r\n          reference: referencia,\r\n          id,\r\n          amount,\r\n          valueInput,\r\n          HTMLElement,\r\n        });\r\n      } else {\r\n        dispatch({ type: \"DIFF_NEGATIVE\" });\r\n      }\r\n    } else {\r\n      setIsOpenARYModal(false);\r\n      dispatch({ type: \"WRONG_INPUT_PROCESS\" });\r\n    }\r\n  };\r\n\r\n  const handlerSubtract = () => {\r\n    let diff = infoProcess.amount - infoProcess.valueInput;\r\n    infoProcess.HTMLElement.value = \"\";\r\n    Axios.post(dbUpdateDressMakingProcess, {\r\n      referencia: infoProcess.reference,\r\n      id: infoProcess.id,\r\n      diff,\r\n      amount: infoProcess.valueInput,\r\n    }).then((response: AxiosResponse) => {\r\n\r\n      infoProcess.valueInput = null;\r\n      Axios.get(dbApprovedRequests).then((response: AxiosResponse) => {\r\n        setApprovedRequests(response.data);\r\n      });\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpenARYModal(false);\r\n    dispatch({ type: \"CLOSE_MODAL\" });\r\n  };\r\n\r\n  const handleNavbarClick = (e: any) => {\r\n    e.preventDefault();\r\n    const target = e.target.getAttribute(\"href\");\r\n    const location = document.querySelector(target).offsetTop;\r\n    const scrollDiv = document.getElementById(\r\n      \"scroll-dressmaking\"\r\n    ) as HTMLDivElement;\r\n\r\n    scrollDiv.scrollTo(0, location - 55);\r\n  };\r\n\r\n  const toggleTab = (index: number) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-container-dressmaking\">\r\n      <div className=\"navbar-dressmaking\">\r\n        <h2 className=\"navbar-dressmaking__h2\">Taller confección</h2>\r\n        <div className=\"navbar-dressmaking-otpions\">\r\n          <div\r\n            className={\r\n              toggleState === 1\r\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\r\n                : \"tabs-dressmaking\"\r\n            }\r\n            onClick={() => toggleTab(1)}\r\n          >\r\n            <a href=\"#ressmaking-request-container\" onClick={handleNavbarClick}>\r\n              Enviar petición\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 2\r\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\r\n                : \"tabs-dressmaking\"\r\n            }\r\n            onClick={() => toggleTab(2)}\r\n          >\r\n            <a\r\n              href=\"#dressmaking-process-container\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Artículos en proceso\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 3\r\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\r\n                : \"tabs-dressmaking\"\r\n            }\r\n            onClick={() => toggleTab(3)}\r\n          >\r\n            <a href=\"#requests-history-section\" onClick={handleNavbarClick}>\r\n              Historial de peticiones\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll-dressmaking-section\" id=\"scroll-dressmaking\">\r\n        <div\r\n          className=\"dressmaking-request-container\"\r\n          id=\"ressmaking-request-container\"\r\n        >\r\n          <div className=\"dressmaking-request-card\">\r\n            <div className=\"dressmaking-request-card__h2\">\r\n              Enviar petición a Bodega Insumos\r\n            </div>\r\n            <div className=\"dressmaking-request-form\">\r\n              <div className=\"filter-dropdown-request-dressmaking\">\r\n                <FilterDropdown\r\n                  options={references}\r\n                  id=\"referencia\"\r\n                  label=\"referencia\"\r\n                  prompt=\"Seleccionar referencia\"\r\n                  value={valueReferenceSelect}\r\n                  onChange={(val: any) => setValueReferenceSelect(val)}\r\n                />\r\n              </div>\r\n              <input\r\n                ref={refContainer}\r\n                id=\"actualAmount\"\r\n                name=\"actualAmount\"\r\n                className=\"actualAmount\"\r\n                placeholder=\"cantidad\"\r\n                type=\"number\"\r\n                value={amount}\r\n                autoComplete=\"off\"\r\n                onChange={(e) => {\r\n                  setAmount(e.target.value);\r\n                }}\r\n              />\r\n              <button className=\"btn\" type=\"button\" onClick={suppliesRequest}>\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"information-dressmaking-request-container\">\r\n            <h2 className=\"information-dressmaking-request-container__h2\">\r\n              Enviar petición a Bodega Insumos\r\n            </h2>\r\n            <p className=\"information-dressmaking-request-container__p\">\r\n              ¿Necesitas confeccionar un nuevo artículo? Entonces envía una\r\n              petición a Bodega Insumos para obtener los insumos necesarios para\r\n              confeccionar este artículo. Para esto solo escoge la referencia\r\n              del artículo que quieres hacer, cuantos artículos quieres realizar\r\n              y preciona el botón enviar. Así de fácil :)\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"dressmaking-process-container\"\r\n          id=\"dressmaking-process-container\"\r\n        >\r\n          <h3>Artículos en proceso</h3>\r\n          <p>\r\n            En este apartado se muestra los artículos que se están produciendo.\r\n            Puedes ir descontando la cantidad en proceso de los artículos a\r\n            medida que los vas produciendo. Solo digita la cantidad producida y\r\n            presiona aceptar.{\" \"}\r\n          </p>\r\n          {approvedRequests.length == 0 && (\r\n            <>\r\n              <div className=\"no-data-image-approved-req-dressmaking-container\">\r\n                <img\r\n                  src={noDataImage}\r\n                  alt=\"no-data\"\r\n                  className=\"no-data-image-approved-req-dressmaking-container__img\"\r\n                />\r\n              </div>\r\n              <p className=\"no-data-image-approved-req-dressmaking-paragraph\">\r\n                Aún no hay artículos en proceso\r\n              </p>\r\n            </>\r\n          )}\r\n          {approvedRequests.length !== 0 && (\r\n            <div className=\"approved-requests-dressmaking-container\">\r\n              {approvedRequests.map((item: any) => {\r\n                return (\r\n                  <div className=\"requestDressmakingContainer\">\r\n                    <h4 className=\"requestDressmakingContainer__h4\">\r\n                      Referencia en proceso\r\n                    </h4>\r\n                    <div className=\"requestDressmakingContainer__reference\">\r\n                      Petición: #{item.id}\r\n                    </div>\r\n                    <div className=\"requestDressmakingContainer__reference\">\r\n                      Referencia: {item.referencia}\r\n                    </div>\r\n                    <div className=\"requestDressmakingContainer__amount\">\r\n                      Cantidad en proceso: {item.cantidad}\r\n                    </div>\r\n                    <div className=\"requestDressmakingContainer__timestamp\">\r\n                      Fecha: {item.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                    </div>\r\n                    <input\r\n                      className={\"h\" + item.id}\r\n                      id=\"requestDressmakingContainer__amountInput\"\r\n                      type=\"number\"\r\n                      placeholder=\"Digite la cantidad terminada\"\r\n                    />\r\n                    <button\r\n                      className=\"btn requestDressmakingContainer__accept\"\r\n                      onClick={() => {\r\n                        verificationARYModal(\r\n                          item.referencia,\r\n                          item.id,\r\n                          item.cantidad,\r\n                          document.querySelector(\".h\" + item.id)\r\n                        );\r\n                      }}\r\n                    >\r\n                      Aceptar\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"requests-history-section\" id=\"requests-history-section\">\r\n          <h3>Historial de peticiones</h3>\r\n          <p>\r\n            Aquí se despliega el historial de peticiones realizadas de taller\r\n            confección a bodega insumos.\r\n          </p>\r\n          <div className=\"requets-history-dressmaking-container\">\r\n            <div className=\"label-history-request-dressmanking\">\r\n              <div className=\"label-history-request-dressmanking__number-of-order\">\r\n                Número de orden\r\n              </div>\r\n              <div className=\"label-history-request-dressmanking__reference\">\r\n                Referencia\r\n              </div>\r\n              <div className=\"label-history-request-dressmanking__amount\">\r\n                Cantidad\r\n              </div>\r\n              <div className=\"label-history-request-dressmanking__decision\">\r\n                Decisión\r\n              </div>\r\n              <div className=\"label-history-request-dressmanking__timestamp\">\r\n                Fecha\r\n              </div>\r\n            </div>\r\n            {requestsHistory.map((request: any) => {\r\n              return (\r\n                <div className=\"request-card-container\">\r\n                  <div className=\"request-card-container__order\">\r\n                    {request.numero_de_orden}\r\n                  </div>\r\n                  <div className=\"request-card-container__reference\">\r\n                    {request.referencia}\r\n                  </div>\r\n                  <div className=\"request-card-container__amount\">\r\n                    {request.cantidad}\r\n                  </div>\r\n                  <div className=\"request-card-container__decision\">\r\n                    {request.decision}\r\n                  </div>\r\n                  <div className=\"request-card-container__date\">\r\n                    {\" \"}\r\n                    {request.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {state.isInsufficientModalOpen && (\r\n        <SuccessfulModalDressMaking\r\n          modalContent={state.modalContent}\r\n          closeModal={closeModal}\r\n          checkNumber={state.checkNumber}\r\n        />\r\n      )}\r\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\r\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\r\n        {state.imgCheckNumber === 1 && (\r\n          <img\r\n            className=\"modalWarehouseImg\"\r\n            src={completeImage}\r\n            alt=\"modalImg\"\r\n          />\r\n        )}\r\n        {state.imgCheckNumber === 2 && (\r\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\r\n        )}\r\n      </Modal>\r\n      <ModalAreYouSureDressmaking\r\n        isOpen={isOpenARYModal}\r\n        closeModal={closeModal}\r\n        subAmountFunction={handlerSubtract}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DressMaking;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport notFoundImage from '../../assets/Not Found.svg';\r\nimport './style/ModalInventoryWareHouse.css';\r\n\r\nconst ModalInvetoryBodega = ({modalContent, closeModal}: any) => {\r\n  const handleClose = () => {\r\n    closeModal();\r\n  };\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  let iterator = 0;\r\n  let enableEmpty = true;\r\n  let showEmptySearch = false;\r\n\r\n  const handlerSearch = (e: any) => {\r\n    setSearchTerm(e);\r\n    iterator = 0;\r\n    enableEmpty = true;\r\n    showEmptySearch = false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container_table-bodega\">\r\n      <div className=\"table_title-bodega\">Información</div>\r\n      <div className=\"search-warehouse-container\">\r\n        <i className=\"gg-search\"></i>\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Buscar por código...\"\r\n          className=\"search-filter-design-warehouse\"\r\n          onChange={(e: any) => handlerSearch(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"table-header-container-warehouse\">\r\n        <div className=\"table_header-bodega\">Insumo</div>\r\n        <div className=\"table_header-bodega\">Imagen</div>\r\n      </div>\r\n      <div className=\"scroll-modal-inventory\">\r\n        {modalContent\r\n          .filter((val: any) => {\r\n            iterator += 1;\r\n            if (searchTerm === '') {\r\n              return val;\r\n            } else if (\r\n              val.codigo\r\n                .toString()\r\n                .slice(0, searchTerm.length)\r\n                .includes(searchTerm)\r\n            ) {\r\n              enableEmpty = false;\r\n              return val;\r\n            } else if (iterator == modalContent.length && enableEmpty == true) {\r\n              showEmptySearch = true;\r\n            }\r\n          })\r\n          .map((props: any) => {\r\n            return (\r\n              <div className=\"items_container-bodega\" key={props.codigo}>\r\n                <div className=\"sub_items_container-bodega\">\r\n                  <div className=\"sub_sub_items_container-bodega\">\r\n                    <div className=\"table_item-bodega\">\r\n                      Código: {props.codigo}\r\n                    </div>\r\n                    <div className=\"table_item-bodega\">\r\n                      Descripción: {props.descripcion}\r\n                    </div>\r\n                    <div className=\"table_item-bodega\">\r\n                      Cantidad: {props.metros != null ? props.metros : props.cantidad}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"table_item-bodega\">\r\n                    <img\r\n                      className=\"table_img-bodega\"\r\n                      src={props.nombre_imagen}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        {showEmptySearch && (\r\n          <img\r\n            className=\"notFoundImgWarehouse\"\r\n            src={notFoundImage}\r\n            alt=\"Not found\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalInvetoryBodega;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/ModalinsufficientSupplies.css';\r\n\r\nconst insufficientSuppliesID: any = document.getElementById(\r\n  'insufficientSuppliesModal'\r\n);\r\n\r\nconst ModalinsufficientSupplies = (props: any) => {\r\n  const handlerButtonReject = () => {\r\n    props.handlerReject(props.infoRequest.index);\r\n    props.closeModal();\r\n  };\r\n  console.log(props.arrayNoSupplies);\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n  if (!props.isOpen) return null;\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalNoSuppliesComponent\">\r\n      <div className=\"ModalNoSuppliesComponent__container\">\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"ModalNoSuppliesComponent__close-button\"\r\n        >\r\n          X\r\n        </button>\r\n        <h4>\r\n          Error: En el inventario no se encuentran los insumos suficientes\r\n        </h4>\r\n        <p>\r\n          No se puede aceptar esta petición debido a que en Bodega no hay los\r\n          insumos suficientes para cumplir con la producción. Por favor, rechace\r\n          esta petición.\r\n        </p>\r\n        <div className=\"containerNoSupplies_table\">\r\n          <div className=\"tableNoSupplies_title\">Insumos insuficientes</div>\r\n          <div className=\"tableNoSupplies_header\">Insumo insuficiente</div>\r\n          <div className=\"tableNoSupplies_header\">Imagen</div>\r\n          {props.arrayNoSupplies.map((val: any) => {\r\n            return (\r\n              <div className=\"itemsNoSupplies_container\" key={val.codigo}>\r\n                <div className=\"sub_itemsNoSupplies_container\">\r\n                  <div className=\"sub_sub_itemsNoSupplies_container\">\r\n                    <div className=\"tableNoSupplies_item\">\r\n                      Item: {val.codigo}\r\n                    </div>\r\n                    <div className=\"tableNoSupplies_item\">\r\n                      Descripción: {val.descripcion}\r\n                    </div>\r\n                    <div className=\"tableNoSupplies_item\">\r\n                      Existencias: {val.cantidad != null ? val.cantidad : val.metros}\r\n                    </div>\r\n                    <div className=\"tableNoSupplies_item\">\r\n                      Faltante: {val.remainingAmount}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tableNoSupplies_item\">\r\n                    <img\r\n                      className=\"tableNoSupplies_img\"\r\n                      src={val.nombre_imagen}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div\r\n          className=\"InsuficcientButtonRejectContainer\"\r\n          onClick={handlerButtonReject}\r\n        >\r\n          <button className=\"btn\">Rechazar petición</button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    insufficientSuppliesID\r\n  );\r\n};\r\n\r\nexport default ModalinsufficientSupplies;\r\n","import React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Axios from 'axios';\r\n\r\nimport './style/ModalDecisionSupplies.css';\r\nimport {baseURL} from '../app/baseURL';\r\n\r\nconst idModalDecisionSupplies: any = document.getElementById(\r\n  'ModalDecisionSupplies'\r\n);\r\n\r\nconst ModalDecisionSupplies = (props: any) => {\r\n  const informationSuppliesURL: string = baseURL + 'api/temporal';\r\n  const [informationSupplies, setInformationSupplies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.isOpen) {\r\n      Axios.post(informationSuppliesURL, {\r\n        referenceSelection: props.infoRequest.reference,\r\n        actualAmount: props.infoRequest.amount,\r\n      })\r\n        .then((response: any) => {\r\n          setInformationSupplies(response.data);\r\n        })\r\n    }\r\n  }, [props.isOpen]);\r\n\r\n  const handlerButtonReject = () => {\r\n    props.handlerReject(props.infoRequest.index);\r\n    props.closeModal();\r\n  };\r\n\r\n  const handlerButtonAccept = () => {\r\n    props.handlerAccept(props.infoRequest.index);\r\n    props.closeModal();\r\n  };\r\n\r\n  const handlerClose = () => {\r\n    props.closeModal();\r\n  };\r\n\r\n  if (!props.isOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalDecisionSuppliesComponent\">\r\n      <div className=\"ModalDecisionSuppliesComponent__container\">\r\n        <button\r\n          onClick={handlerClose}\r\n          className=\"ModalDecisionSuppliesComponent__close-button\"\r\n        >\r\n          X\r\n        </button>\r\n        <h4>Información de los insumos</h4>\r\n        <p>\r\n          Si aceptas esta decisión, estos serán los insumos que se verán\r\n          afectados.\r\n        </p>\r\n        <div className=\"containerDecisionSupplies_table\">\r\n          <div className=\"tableDecisionSupplies_title\">Insumos Necesarios</div>\r\n          <div className=\"tableDecisionSupplies_header\">\r\n            Información del insumo\r\n          </div>\r\n          <div className=\"tableDecisionSupplies_header\">Imagen</div>\r\n          {informationSupplies.map((props: any) => {\r\n            return (\r\n              <div\r\n                className=\"itemsDecisionSupplies_container\"\r\n                key={props.codigo}\r\n              >\r\n                <div className=\"sub_itemsDecisionSupplies_container\">\r\n                  <div className=\"sub_sub_itemsDecisionSupplies_container\">\r\n                    <div className=\"tableDecisionSupplies_item\">\r\n                      Item: {props.codigo}\r\n                    </div>\r\n                    <div className=\"tableDecisionSupplies_item\">\r\n                      Color: {props.color}\r\n                    </div>\r\n                    <div className=\"tableDecisionSupplies_item\">\r\n                      Descripción: {props.descripcion}\r\n                    </div>\r\n                    <div className=\"tableDecisionSupplies_item\">\r\n                      Consumo: {props.amount}\r\n                      {props.metros ? ' metros' : ''}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tableDecisionSupplies_item\">\r\n                    <img\r\n                      className=\"tableDecisionSupplies_img\"\r\n                      src={props.nombre_imagen}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"DecisionButtonsContainer\">\r\n          <button\r\n            className=\"btn DecisionButtonsContainer__accept\"\r\n            onClick={handlerButtonAccept}\r\n          >\r\n            Aceptar\r\n          </button>\r\n          <button\r\n            className=\"btn DecisionButtonsContainer__reject\"\r\n            onClick={handlerButtonReject}\r\n          >\r\n            Rechazar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    idModalDecisionSupplies\r\n  );\r\n};\r\n\r\nexport default ModalDecisionSupplies;\r\n","export const reducer = (state: any, action: any) => {\r\n\r\n  if (action.type === 'SUCCESSFUL_FORM') {\r\n    return {\r\n      ...state,\r\n      modalFormContent:\r\n        '¡Felicitaciones! Se ha agregado un nuevo insumo correctamente',\r\n      isFormModalOpen: true,\r\n      isModalOpen: false,\r\n      imgCheckNumber: 1,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESSFUL_UPDATE') {\r\n    return {\r\n      ...state,\r\n      modalUpdateContent: 'Inventario añadido exitosamente',\r\n      isModalUpdateOpen: true,\r\n      isModalOpen: false,\r\n      imgCheckNumber: 1,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'EXISTING_CODE') {\r\n    return {\r\n      ...state,\r\n      modalFormContent:\r\n        'Este codigo ya existe en el inventario. Por favor dirigirse a la sección Añadir a Insumo registrado',\r\n      isFormModalOpen: true,\r\n      isModalOpen: false,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESSFUL_ADDING') {\r\n    return {\r\n      ...state,\r\n      modalFormContent: 'Insumo añadido correctamente',\r\n      isModalOpen: false,\r\n      isFormModalOpen: true,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'WRONG_INPUT') {\r\n    return {\r\n      ...state,\r\n      modalUpdateContent:\r\n        'OJO: Por favor ingrese correctamente todos los campos',\r\n      isModalUpdateOpen: true,\r\n      isModalOpen: false,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\r\n    return {\r\n      ...state,\r\n      modalUpdateContent: 'Error: Este código no existe',\r\n      isModalUpdateOpen: true,\r\n      isModalOpen: false,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\r\n    return {\r\n      ...state,\r\n      isOpenNoSupplies: true,\r\n      modalContent: action.payload,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: false,\r\n      isOpenNoSupplies: false,\r\n      imgCheckNumber: 0,\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    isModalOpen: false,\r\n    isFormModalOpen: false,\r\n    isModalUpdateOpen: false,\r\n    isOpenNoSupplies: false,\r\n    isModalSuppliesOpen: false\r\n  };\r\n};\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport \"./style/Warehouse.css\";\r\nimport ModalInvetoryWareHouse from \"../components/warehouse/ModalInventoryWareHouse\";\r\nimport { baseURL } from \"../components/app/baseURL\";\r\nimport Modal from \"../components/Modal\";\r\nimport completeImage from \"../assets/complete.svg\";\r\nimport errorImage from \"../assets/error.svg\";\r\nimport noDataImage from \"../assets/no-data.svg\";\r\nimport ModalinsufficientSupplies from \"../components/warehouse/ModalinsufficientSupplies\";\r\nimport ModalDecisionSupplies from \"../components/warehouse/ModalDecisionSupplies\";\r\nimport { reducer } from \"../components/warehouse/ReducerWarehouse\";\r\nimport FilterDropdown from \"../components/FilterDropdown\";\r\n\r\nconst defaultState: any = {\r\n  isModalOpen: false,\r\n  isFormModalOpen: false,\r\n  isModalUpdateOpen: false,\r\n  isOpenNoSupplies: false,\r\n  modalContent: [],\r\n  modalFormContent: \"\",\r\n  modalUpdateContent: \"\",\r\n  checkNumber: 0,\r\n  imgCheckNumber: 0,\r\n};\r\n\r\nfunction WareHouse() {\r\n  const [code, setCode] = useState<string>(\"\");\r\n  const [color, setColor] = useState<string>(\"\");\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [img, setImg] = useState<string>(\"\");\r\n  const [type, setType] = useState<string>(\"\");\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const [queryData, setQueryData] = useState<any>([]);\r\n  const [updateCode, setUpdateCode] = useState<string>(\"\");\r\n  const [updateAmount, setUpdateAmount] = useState<string>(\"\");\r\n  const [dressMakingReq, setDressMakingReq] = useState<any>([]);\r\n  const [suppliesData, setSuppliesData] = useState<any>([]);\r\n  const [reRenderUpdate, setReRenderUpdate] = useState<boolean>(false);\r\n  const [infoRequest, setInfoRequest] = useState({});\r\n  const [isOpenDecision, setIsOpenDecision] = useState<boolean>(false);\r\n  const [valueCode, setValueCode] = useState<any>(null);\r\n  const [valueSupplieDropdown, setValueSupplieDropdown] = useState<any>(null)\r\n  const [toggleState, setToggleState] = useState(1);\r\n  const [switchUseEffect, setSwitchUseEffect] = useState<boolean>(false);\r\n  const saveClothAPIURL: string = baseURL + \"api/savecloth\";\r\n  const invetoryBodegaAPIURL: string = baseURL + \"api/invetorywarehouse\";\r\n  const invetoryWareHouseAPIURL: string = baseURL + \"api/invetorywarehouse\";\r\n  const updateInventoryWareHouseURL: string =\r\n    baseURL + \"api/updatewarehouseinventory\";\r\n  const getDressMakingRequest: string = baseURL + \"api/dressmakingrequest\";\r\n  const dbSuppliesURL: string = baseURL + \"api/suppliesrequest\";\r\n  const dbSaveDecision: string = baseURL + \"api/savewarehousedecision\";\r\n  const suppliesDataDropdown = [\r\n    {\r\n      id: \"1\",\r\n      value: \"Tela\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      value: \"Insumo\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    Axios.get(invetoryWareHouseAPIURL).then((response: AxiosResponse) => {\r\n      setQueryData(response.data);\r\n      console.log(response.data);\r\n      // triggerListeners(setType, setUpdateCode);\r\n    });\r\n\r\n    Axios.get(getDressMakingRequest).then((response: AxiosResponse) => {\r\n      setDressMakingReq(response.data);\r\n    });\r\n\r\n    Axios.get(invetoryBodegaAPIURL)\r\n      .then((response: AxiosResponse) => {\r\n        setSuppliesData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error) throw error;\r\n      });\r\n  }, [switchUseEffect]);\r\n\r\n  interface ICloth {\r\n    code: string;\r\n    color: string;\r\n    amount: string;\r\n    description: string;\r\n    img: string;\r\n    type: string;\r\n  }\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    let enableAmount = false;\r\n    let supplieSelected = \"\";\r\n    let isCodeExist = 0;\r\n\r\n    if (valueSupplieDropdown === null) {\r\n      supplieSelected = \"\";\r\n    } else if (typeof valueSupplieDropdown === \"object\") {\r\n      supplieSelected = valueSupplieDropdown.value.toString();\r\n    } else if (typeof valueSupplieDropdown === \"string\") {\r\n      supplieSelected = valueSupplieDropdown;\r\n    }\r\n\r\n    const newCloth: ICloth = {\r\n      code,\r\n      color,\r\n      amount,\r\n      description,\r\n      img,\r\n      type: supplieSelected,\r\n    };\r\n\r\n    if (type == \"Tela\") {\r\n      enableAmount = parseFloat(amount) > 0;\r\n    } else {\r\n      enableAmount = Number.isInteger(parseInt(amount)) && parseInt(amount) > 0;\r\n    }\r\n    let enableItems =\r\n      code !== \"\" &&\r\n      color !== \"\" &&\r\n      description !== \"\" &&\r\n      img !== \"\" &&\r\n      supplieSelected !== \"\";\r\n    if (enableAmount && enableItems) {\r\n      let codigoInput = document.getElementById(\"codigo\") as HTMLInputElement;\r\n      let colorInput = document.getElementById(\"color\") as HTMLInputElement;\r\n      let amountInput = document.getElementById(\"amount\") as HTMLInputElement;\r\n      let descripcionInput = document.getElementById(\r\n        \"descripcion\"\r\n      ) as HTMLInputElement;\r\n      let imgInput = document.getElementById(\"url-img\") as HTMLInputElement;\r\n      let selectedOption: any = document.querySelector(\r\n        \".selected-option-bodega\"\r\n      );\r\n      Axios.post(saveClothAPIURL, {\r\n        newCloth,\r\n      })\r\n        .then((response: AxiosResponse) => {\r\n          if (response.data == \"SUCCESSFUL_ADDING\") {\r\n            dispatch({ type: \"SUCCESSFUL_FORM\" });\r\n            codigoInput.value = \"\";\r\n            colorInput.value = \"\";\r\n            amountInput.value = \"\";\r\n            descripcionInput.value = \"\";\r\n            imgInput.value = \"\";\r\n            setValueSupplieDropdown(null);\r\n            Axios.get(invetoryWareHouseAPIURL).then(\r\n              (response: AxiosResponse) => {\r\n                setQueryData(response.data);\r\n              }\r\n            );\r\n            setSwitchUseEffect(!switchUseEffect);\r\n          }\r\n          if (response.data == \"EXISTING_CODE\") {\r\n            dispatch({ type: \"EXISTING_CODE\" });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      dispatch({ type: \"WRONG_INPUT\" });\r\n    }\r\n  };\r\n\r\n  // UPDATE INVENTORY\r\n  const handleUpdateInventory = () => {\r\n    let codeSelected = \"\";\r\n    let isCodeExist = 0;\r\n    let inputUpdateAmount = document.getElementById(\r\n      \"amount-update-inventory\"\r\n    ) as HTMLInputElement;\r\n\r\n    if (valueCode === null) {\r\n      codeSelected = \"\";\r\n    } else if (typeof valueCode === \"object\") {\r\n      codeSelected = valueCode.codigo.toString();\r\n    } else if (typeof valueCode === \"string\") {\r\n      codeSelected = valueCode;\r\n    }\r\n\r\n    queryData.map((val: any) => {\r\n      if (val.codigo === codeSelected) {\r\n        isCodeExist += 1;\r\n        return isCodeExist;\r\n      } else {\r\n        return isCodeExist;\r\n      }\r\n    });\r\n\r\n    let enableAmount =\r\n      Number.isInteger(parseInt(updateAmount)) && parseInt(updateAmount) > 0;\r\n      console.log(enableAmount);\r\n    let enableCode = codeSelected !== \"\";\r\n\r\n    if (enableAmount && enableCode) {\r\n      if (isCodeExist === 1) {\r\n        let payloadUpdate = {\r\n          code: codeSelected,\r\n          amount: updateAmount,\r\n        };\r\n        setValueCode(null);\r\n        inputUpdateAmount.value = \"\";\r\n        setUpdateAmount(\"0\");\r\n        Axios.post(updateInventoryWareHouseURL, payloadUpdate).then(\r\n          (response: any) => {\r\n            if (response.data == \"SUCCESSFUL_UPDATE\") {\r\n              dispatch({ type: \"SUCCESSFUL_UPDATE\" });\r\n              setSwitchUseEffect(!switchUseEffect);\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        dispatch({ type: \"CODE_DOES_NOT_EXIST\" });\r\n      }\r\n    } else {\r\n      dispatch({ type: \"WRONG_INPUT\" });\r\n    }\r\n  };\r\n\r\n  const handlerApprove = (payload: any) => {\r\n    let index = payload;\r\n    Axios.post(dbSuppliesURL, {\r\n      actualAmount: dressMakingReq[index].cantidad,\r\n      referenceSelection: dressMakingReq[index].referencia,\r\n      checkAccept: true,\r\n    }).then((response: AxiosResponse): void => {\r\n      if (response.data === \"SUCCESSFUL_REQUEST\") {\r\n        Axios.post(dbSaveDecision, {\r\n          ...dressMakingReq[index],\r\n          idDecision: 1,\r\n        }).then((response: AxiosResponse): void => {});\r\n        let filterResult = dressMakingReq.filter(\r\n          (item: any) => item.id != dressMakingReq[index].id\r\n        );\r\n        setDressMakingReq(filterResult);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlerRefuse = (payload: any) => {\r\n    let index = payload;\r\n    Axios.post(dbSaveDecision, {\r\n      ...dressMakingReq[index],\r\n      idDecision: 0,\r\n    }).then((response: AxiosResponse): void => {\r\n      if (response.data === \"SUCCESSFUL_SAVING\") {\r\n        let filterResult = dressMakingReq.filter(\r\n          (item: any) => item.id != dressMakingReq[index].id\r\n        );\r\n        setDressMakingReq(filterResult);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlerDecision = (index: any) => {\r\n    setInfoRequest({\r\n      index,\r\n      amount: dressMakingReq[index].cantidad,\r\n      reference: dressMakingReq[index].referencia,\r\n    });\r\n    Axios.post(dbSuppliesURL, {\r\n      actualAmount: dressMakingReq[index].cantidad,\r\n      referenceSelection: dressMakingReq[index].referencia,\r\n      checkAccept: false,\r\n    }).then((response: AxiosResponse): void => {\r\n      if (response.data === \"SUCCESSFUL_REQUEST\") {\r\n        setIsOpenDecision(true);\r\n      } else {\r\n        dispatch({ type: \"INSUFFICIENT_SUPPLIES\", payload: response.data });\r\n      }\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpenDecision(false);\r\n    dispatch({ tpye: \"CLOSE_MODAL\" });\r\n  };\r\n\r\n  const handleNavbarClick = (e: any) => {\r\n    e.preventDefault();\r\n    const target = e.target.getAttribute(\"href\");\r\n    const location = document.querySelector(target).offsetTop;\r\n    const scrollDiv = document.getElementById(\r\n      \"scroll-warehouse\"\r\n    ) as HTMLDivElement;\r\n\r\n    scrollDiv.scrollTo(0, location - 55);\r\n  };\r\n\r\n  const toggleTab = (index: number) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-container-warehouse\">\r\n      <div className=\"navbar-warehouse\">\r\n        <h2 className=\"navbar-warehouse__h2\">Bodega Insumos</h2>\r\n        <div className=\"navbar-warehouse-otpions\">\r\n          <div\r\n            className={\r\n              toggleState === 1\r\n                ? \"tabs-warehouse active-tabs-warehouse\"\r\n                : \"tabs-warehouse\"\r\n            }\r\n            onClick={() => toggleTab(1)}\r\n          >\r\n            <a href=\"#new-supplies-section\" onClick={handleNavbarClick}>\r\n              Registrar nuevos insumos\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 2\r\n                ? \"tabs-warehouse active-tabs-warehouse\"\r\n                : \"tabs-warehouse\"\r\n            }\r\n            onClick={() => toggleTab(2)}\r\n          >\r\n            <a\r\n              href=\"#inventory-warehouse-modal-section\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Inventario\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 3\r\n                ? \"tabs-warehouse active-tabs-warehouse\"\r\n                : \"tabs-warehouse\"\r\n            }\r\n            onClick={() => toggleTab(3)}\r\n          >\r\n            <a href=\"#update-section\" onClick={handleNavbarClick}>\r\n              Actualizar insumos existentes\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 4\r\n                ? \"tabs-warehouse active-tabs-warehouse\"\r\n                : \"tabs-warehouse\"\r\n            }\r\n            onClick={() => toggleTab(4)}\r\n          >\r\n            <a href=\"#request-section\" onClick={handleNavbarClick}>\r\n              Peticiones\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll-warehouse\" id=\"scroll-warehouse\">\r\n        <div className=\"body-warehouse-information\" id=\"new-supplies-section\">\r\n          <div className=\"warehouse-form-container\">\r\n            <form className=\"warehouse-form\">\r\n              <h2>Registrar nuevos insumos</h2>\r\n              <div className=\"border-div\"></div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"codigo\"\r\n                placeholder=\"Código\"\r\n                onChange={(e: any) => setCode(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                id=\"color\"\r\n                placeholder=\"Color\"\r\n                onChange={(e: any) => setColor(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                placeholder=\"Metros/Cantidad\"\r\n                onChange={(e: any) => setAmount(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                id=\"descripcion\"\r\n                placeholder=\"Descripción\"\r\n                className=\"descriptionInput\"\r\n                onChange={(e: any) => setDescription(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                id=\"url-img\"\r\n                placeholder=\"URL de la imágen\"\r\n                onChange={(e: any) => setImg(e.target.value)}\r\n              />\r\n              <div className=\"filterDropdownSupplieWarehouse\">\r\n                <FilterDropdown\r\n                  options={suppliesDataDropdown}\r\n                  id=\"id\"\r\n                  label=\"value\"\r\n                  prompt=\"Seleccionar tela o insumo\"\r\n                  value={valueSupplieDropdown}\r\n                  onChange={(val: any) => setValueSupplieDropdown(val)}\r\n                />\r\n              </div>\r\n              <button className=\"btn\" onClick={handleSubmit}>\r\n                Enviar\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"information-add-supplies-container\">\r\n            <h2 className=\"information-add-supplies-container__h2\">\r\n              Registrar nuevos insumos\r\n            </h2>\r\n            <p className=\"information-add-supplies-container__p\">\r\n              ¿Has recibido stock de insumos nuevos? En este apartado puedes\r\n              agregar estos insumos nuevos al inventario. Sólo digita el código\r\n              con el cual identificarás el insumo, el color, metros o cantidad\r\n              dependiendo si es tela o otro elemento (botones, correderas, etc),\r\n              una descripción, el URL de la imágen y selecciona si es tela o\r\n              insumo (si es un botón, corredera, etc). Por último, presiona el\r\n              botón de enviar y listo :)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"inventory-warehouse-modal-section\"\r\n          id=\"inventory-warehouse-modal-section\"\r\n        >\r\n          <h3>Inventario de los insumos</h3>\r\n          <p>\r\n            En este apartado se despliega el inventario de los insumos (telas,\r\n            botones, correderas, etcétera).\r\n          </p>\r\n          <ModalInvetoryWareHouse\r\n            modalContent={suppliesData}\r\n            closeModal={closeModal}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"update-container\" id=\"update-section\">\r\n          <div className=\"update-container-card\">\r\n            <div className=\"update-container__h2\">\r\n              Actualizar insumos registrados\r\n            </div>\r\n            <div className=\"update-container-form\">\r\n              <div className=\"filterDropdownUpdateWarehouse\">\r\n                <FilterDropdown\r\n                  options={queryData}\r\n                  id=\"codigo\"\r\n                  label=\"codigo\"\r\n                  prompt=\"Seleccionar código\"\r\n                  value={valueCode}\r\n                  onChange={(val: any) => setValueCode(val)}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount-update-inventory\"\r\n                placeholder=\"Cantidad\"\r\n                className=\"amount-update-inventory\"\r\n                onChange={(e: any) => setUpdateAmount(e.target.value)}\r\n              />\r\n              <button className=\"btn\" onClick={handleUpdateInventory}>\r\n                {\" \"}\r\n                Actualizar\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"information-update-container\">\r\n            <h2 className=\"information-update-container__h2\">\r\n              Actualizar cantidad a un insumo registrado\r\n            </h2>\r\n            <p className=\"information-update-container__p\">\r\n              ¿Has recibido más stock de insumos ya registrados en tu\r\n              inventario? En este apartado puedes actualizar estos insumos\r\n              existentes. Solo escoge el codigo, digita la cantidad y presiona\r\n              el botón actualizar. Así de sencillo :)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"warehouseReqSection\" id=\"request-section\">\r\n          <h3>Peticiones</h3>\r\n          <p>\r\n            En este apartado se muestran las peticiones realizadas por taller\r\n            confección. Recuerda presionar el botón 'Tomar decisión' para\r\n            aceptar o rechazar las peticiones.\r\n          </p>\r\n          {dressMakingReq.length == 0 && (\r\n            <>\r\n              <div className=\"no-data-image-warehouse-container\">\r\n                <img\r\n                  src={noDataImage}\r\n                  alt=\"no-data\"\r\n                  className=\"no-data-image-warehouse-container__img\"\r\n                />\r\n              </div>\r\n              <p className=\"no-data-image-warehouse-paragraph\">\r\n                Aún no hay peticiones\r\n              </p>\r\n            </>\r\n          )}\r\n          {dressMakingReq.length !== 0 && (\r\n            <div className=\"dressmakingReqContainer\">\r\n              {dressMakingReq.map((req: any, index: any) => {\r\n                return (\r\n                  <div key={index} className=\"requestWarehouseContainer\">\r\n                    <h4 className=\"requestWarehouseContainer__h4\">\r\n                      Petición de taller confección\r\n                    </h4>\r\n                    <div className=\"requestWarehouseContainer__reference\">\r\n                      Referencia: {req.referencia}\r\n                    </div>\r\n                    <div className=\"requestWarehouseContainer__reference\">\r\n                      Cantidad: {req.cantidad}\r\n                    </div>\r\n                    <div className=\"requestWarehouseDecisionBTNContainer\">\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                          handlerDecision(index);\r\n                        }}\r\n                      >\r\n                        Tomar decisión\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <ModalinsufficientSupplies\r\n          isOpen={state.isOpenNoSupplies}\r\n          closeModal={closeModal}\r\n          arrayNoSupplies={state.modalContent}\r\n          infoRequest={infoRequest}\r\n          handlerReject={handlerRefuse}\r\n        />\r\n        <ModalDecisionSupplies\r\n          isOpen={isOpenDecision}\r\n          closeModal={closeModal}\r\n          infoRequest={infoRequest}\r\n          handlerReject={handlerRefuse}\r\n          handlerAccept={handlerApprove}\r\n        />\r\n        <Modal isOpen={state.isFormModalOpen} closeModal={closeModal}>\r\n          <h1 className=\"modalWarehouseh1\">{state.modalFormContent}</h1>\r\n          {state.imgCheckNumber === 1 && (\r\n            <img\r\n              className=\"modalWarehouseImg\"\r\n              src={completeImage}\r\n              alt=\"modalImg\"\r\n            />\r\n          )}\r\n          {state.imgCheckNumber === 2 && (\r\n            <img\r\n              className=\"modalWarehouseImg\"\r\n              src={errorImage}\r\n              alt=\"modalImg\"\r\n            />\r\n          )}\r\n        </Modal>\r\n        <Modal isOpen={state.isModalUpdateOpen} closeModal={closeModal}>\r\n          <h1 className=\"modalWarehouseh1\">{state.modalUpdateContent}</h1>\r\n          {state.imgCheckNumber === 1 && (\r\n            <img\r\n              className=\"modalWarehouseImg\"\r\n              src={completeImage}\r\n              alt=\"modalImg\"\r\n            />\r\n          )}\r\n          {state.imgCheckNumber === 2 && (\r\n            <img\r\n              className=\"modalWarehouseImg\"\r\n              src={errorImage}\r\n              alt=\"modalImg\"\r\n            />\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst triggerListeners = (setType: any, setUpdateCode: any) => {\r\n  var selectedOption: any = document.querySelector(\".selected-option-bodega\");\r\n  var options: any = document.querySelectorAll(\".option-bodega\");\r\n\r\n  selectedOption.addEventListener(\"click\", () => {\r\n    selectedOption.parentElement.classList.toggle(\"active-bodega\");\r\n  });\r\n\r\n  options.forEach((option: any) => {\r\n    option.addEventListener(\"click\", () => {\r\n      setTimeout(() => {\r\n        selectedOption.innerHTML = option.innerHTML;\r\n        // SET CURRENT REFERENCE VALUE\r\n        setType(option.innerHTML);\r\n      }, 300);\r\n\r\n      selectedOption.parentElement.classList.remove(\"active-bodega\");\r\n    });\r\n  });\r\n};\r\n\r\nexport default withRouter(WareHouse);\r\n","export const reducer = (state: any, action: any) => {\r\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\r\n    const warningMissingSupplies = action.payload;\r\n    return {\r\n      ...state,\r\n      modalContent: warningMissingSupplies,\r\n      isModalOpen: true,\r\n      checkNumber: 0,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === 'SUCCESSFUL_REQUEST') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['La referencia se ha guardado correctamente'],\r\n      isModalOpen: true,\r\n      checkNumber: 1,\r\n      imgCheckNumber: 1,\r\n    };\r\n  }\r\n  if (action.type === 'FAILED_REQUEST') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['La petición no ha tenido exito'],\r\n      isModalOpen: true,\r\n      checkNumber: 2,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === 'INVALID_REFERENCE') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['Ya existe la referencia que desea ingresar'],\r\n      isModalOpen: true,\r\n      checkNumber: 3,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === 'WRONG_INPUT') {\r\n    return {\r\n      ...state,\r\n      modalContent: ['Ingrese correctamente los campos'],\r\n      isModalOpen: true,\r\n      checkNumber: 4,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      modalContent: ['El codigo talla no existe'],\r\n      checkNumber: 5,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESSFUL_SAMPLE_INVENTORY') {\r\n    const sampleInventory = action.payload;\r\n    return {\r\n      ...state,\r\n      isInventoryModalOpen: true,\r\n      modalInventoryContent: sampleInventory,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: false,\r\n      isInventoryModalOpen: false,\r\n      imgCheckNumber: 0,\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isModalOpen: false,\r\n    isInventoryModalOpen: false,\r\n    imgCheckNumber: 0,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/ModalInformationDesign.css';\r\n\r\nconst informationModalID: any = document.getElementById('informationModal');\r\n\r\nconst ModalInformationDesign = (props: any) => {\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n  if (!props.isOpen) {\r\n    return null;\r\n  }\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalInfoComponent\">\r\n      <div className=\"ModalInfoComponent__container\">\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"ModalInfoComponent__close-button\"\r\n        >\r\n          X\r\n        </button>\r\n        <h4>Referencia: {props.reference}</h4>\r\n        <p>Estos son los insumos que consume la referencia {props.reference}</p>\r\n        <div className=\"ModalInfoComponent__titleInformation\">\r\n          <div>Insumo</div>\r\n          <div>Imagen</div>\r\n        </div>\r\n        <div className=\"scroll-design-information-modal\">\r\n          {props.referenceArray.map((props: any) => {\r\n            return (\r\n              <div className=\"items_container-design\" key={props.codigo}>\r\n                <div className=\"items-information-design\">\r\n                  <div className=\"item-information-design__ref\">\r\n                    Referencia: {props.codigo}\r\n                  </div>\r\n                  <div className=\"item-information-design__amount\">\r\n                    Consumo: {props.consumptionAmount}\r\n                  </div>\r\n                  <div className=\"item-information-design__description\">\r\n                    Descripción: {props.descripcion}\r\n                  </div>\r\n                  <div className=\"item-information-design__color\">\r\n                    Color: {props.color}\r\n                  </div>\r\n                </div>\r\n                <div className=\"item-information-design\">\r\n                  <img\r\n                    className=\"item-information-image\"\r\n                    src={props.nombre_imagen}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    informationModalID\r\n  );\r\n};\r\n\r\nexport default ModalInformationDesign;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { baseURL } from \"../app/baseURL\";\r\n\r\nimport notFoundImage from \"../../assets/Not Found.svg\";\r\nimport ModalInformationDesign from \"./ModalInformationDesign\";\r\nimport \"./style/ModalDesignInventory.css\";\r\n\r\nconst ModalDesignInventory = ({ modalContent, closeModal }: any) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeModal();\r\n    }, 40000);\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [referenceNumber, setReferenceNumber] = useState<string>(\"\");\r\n  const [referenceArray, setReferenceArray] = useState([]);\r\n  const getreferenceconsumptionURL = baseURL + \"api/getreferenceconsumption\";\r\n  let iterator = 0;\r\n  let enableEmpty = true;\r\n  let showEmptySearch = false;\r\n\r\n  const handlerSearch = (e: any) => {\r\n    setSearchTerm(e);\r\n    iterator = 0;\r\n    enableEmpty = true;\r\n    showEmptySearch = false;\r\n  };\r\n\r\n  const handlerInfoModal = (payload: any) => {\r\n    setIsModalOpen(true);\r\n    setReferenceNumber(payload);\r\n    const referenceSelection = payload;\r\n    Axios.post(getreferenceconsumptionURL, { referenceSelection })\r\n      .then((response) => {\r\n        setReferenceArray(response.data);\r\n      })\r\n  };\r\n\r\n  const closeModalInfo = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container_table-design\">\r\n      <div className=\"table_title-design\">Información</div>\r\n      <div className=\"search-design-container\">\r\n        <i className=\"gg-search\"></i>\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Buscar...\"\r\n          className=\"search-filter-design\"\r\n          onChange={(e: any) => handlerSearch(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"sample-image-container\">\r\n        <div className=\"table_header-design-sample\">Muestra</div>\r\n        <div className=\"table_header-design-img\">Imagen</div>\r\n      </div>\r\n      <div className=\"scroll-modal-design\">\r\n        {modalContent\r\n          .filter((val: any) => {\r\n            iterator += 1;\r\n            if (searchTerm === \"\") {\r\n              return val;\r\n            } else if (\r\n              val.referencia\r\n                .toString()\r\n                .slice(0, searchTerm.length)\r\n                .includes(searchTerm)\r\n            ) {\r\n              enableEmpty = false;\r\n              return val;\r\n            } else if (iterator == modalContent.length && enableEmpty == true) {\r\n              showEmptySearch = true;\r\n            }\r\n          })\r\n          .map((props: any) => {\r\n            return (\r\n              <div className=\"items_container-design\" key={props.referencia}>\r\n                <div className=\"items-information-container\">\r\n                  <div className=\"items-information-ref\">\r\n                    Referencia: {props.referencia}\r\n                  </div>\r\n                  <div className=\"items-information-size\">\r\n                    Talla: {props.talla}\r\n                  </div>\r\n                  <div className=\"items-information-description\">\r\n                    Descripción: {props.descripcion}\r\n                  </div>\r\n                  <div className=\"items-information-color\">\r\n                    Color: {props.color}\r\n                  </div>\r\n                  <div className=\"items-information-valuePerUnit\">\r\n                    Valor de la unidad: {props.valor_unidad}\r\n                  </div>\r\n                  <button\r\n                    className=\"btn\"\r\n                    id=\"handleInfoModal\"\r\n                    onClick={() => handlerInfoModal(props.referencia)}\r\n                  >\r\n                    Información de consumo\r\n                  </button>\r\n                </div>\r\n                <div className=\"table_item-design\">\r\n                  <img className=\"table_img-design\" src={props.nombre_imagen} />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        {showEmptySearch && (\r\n          <img className=\"notfoundImg\" src={notFoundImage} alt=\"Not Found\" />\r\n        )}\r\n      </div>\r\n      <ModalInformationDesign\r\n        isOpen={isModalOpen}\r\n        closeModal={closeModalInfo}\r\n        reference={referenceNumber}\r\n        referenceArray={referenceArray}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDesignInventory;\r\n","import React from 'react';\r\n\r\nimport './style/ModalDesign.css';\r\n\r\nconst ModalDesign = ({modalContent, closeModal}: any) => {\r\n  setTimeout(() => {\r\n    closeModal();\r\n  }, 5000);\r\n  return (\r\n    <div className=\"ModalDesignContainer\">\r\n      <h4>{modalContent}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDesign;\r\n","import React, {useEffect, useState, useReducer} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Axios from 'axios';\r\n\r\nimport './style/ModalDesignAddSupplies.css';\r\nimport {baseURL} from '../app/baseURL';\r\nimport ModalDesign from './ModalDesign';\r\nimport ModalDesignInventory from './ModalDesignInventory';\r\nimport FilterDropdown from '../FilterDropdown';\r\nimport {type} from 'node:os';\r\n\r\nconst addSuppliesID: any = document.getElementById('addSupplies');\r\n\r\nconst reducer = (state: any, action: any) => {\r\n  if (action.type === 'WRONG_INFORMATION') {\r\n    return {\r\n      ...state,\r\n      isOpen: true,\r\n      modalContent: 'Por favor digite bien todos los campos',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\r\n    return {\r\n      ...state,\r\n      isOpen: true,\r\n      modalContent: 'Esté código no existe. Por favor digitar otro',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CODE_EXIST') {\r\n    return {\r\n      ...state,\r\n      isOpen: true,\r\n      modalContent: 'Error: Este código ya está agregado',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return {\r\n      ...state,\r\n      isOpen: false,\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isOpen: false,\r\n  };\r\n};\r\n\r\ninterface IWareHouseSupplies {\r\n  codigo: number;\r\n  color: string;\r\n  metros: number;\r\n  cantidad: number;\r\n  descripcion: string;\r\n  nombre_imagen: string;\r\n  timestamp: string;\r\n}\r\n\r\ninterface ISupplyInformation {\r\n  supplyCode: string;\r\n  supplyAmount: string;\r\n}\r\n\r\ninterface IDefaultState {\r\n  isModalOpen: boolean;\r\n  modalContent: string;\r\n}\r\n\r\nconst defaultState: IDefaultState = {\r\n  isModalOpen: false,\r\n  modalContent: '',\r\n};\r\n\r\nconst ModalDesignAddSupplies = (props: any) => {\r\n  const [valueSelect, setValueSelect] = useState<any>(null);\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const [dBWareHouseSupplies, setdBWareHouseSupplies] = useState<\r\n    IWareHouseSupplies[]\r\n  >([]);\r\n  const [addedInformation, setAddedInformation] = useState<\r\n    ISupplyInformation[]\r\n  >([]);\r\n  const dbWareHouseCodesURL: string = baseURL + 'api/warehousecodes';\r\n  const [inputAmount, setInputAmount] = useState<string>('');\r\n  const [selectedOption, setSelectedOption] = useState<any>(\r\n    'Seleccionar insumo'\r\n  );\r\n  let optionSelectCode: any = [];\r\n  let valueSelectComp: any = '';\r\n  let inputSelectIterator = 0;\r\n  let inputSelectAddedInfo = 0;\r\n\r\n  useEffect(() => {\r\n    Axios.get(dbWareHouseCodesURL).then((response: any) => {\r\n      setdBWareHouseSupplies(response.data);\r\n      if (props.isOpen) {\r\n      }\r\n    });\r\n  }, [props.isOpen]);\r\n\r\n  const handlerAddSupplies = () => {\r\n    var amountHTML: any = document.querySelector('.amountSuppliesInput');\r\n\r\n    //SELECT COMPROBATION\r\n    if (valueSelect === null) {\r\n      valueSelectComp = {\r\n        codigo: '',\r\n      };\r\n    } else if (typeof valueSelect === 'object') {\r\n      valueSelectComp = valueSelect.codigo.toString();\r\n    } else if (typeof valueSelect === 'string') {\r\n      valueSelectComp = valueSelect;\r\n    }\r\n\r\n    dBWareHouseSupplies.map((val: any) => {\r\n      if (val.codigo === valueSelectComp) {\r\n        inputSelectIterator += 1;\r\n        return inputSelectIterator;\r\n      } else {\r\n        return inputSelectIterator;\r\n      }\r\n    });\r\n\r\n    addedInformation.map((val: any) => {\r\n      if (val.supplyCode === valueSelectComp) {\r\n        inputSelectAddedInfo += 1;\r\n        return inputSelectAddedInfo;\r\n      } else {\r\n        return inputSelectAddedInfo;\r\n      }\r\n    });\r\n\r\n    let enableSelector = valueSelectComp !== '' || valueSelectComp !== null;\r\n    let enableAmount =\r\n      Number.isInteger(parseInt(amountHTML.value)) &&\r\n      parseInt(amountHTML.value) > 0;\r\n    if (enableSelector && enableAmount) {\r\n      if (inputSelectIterator === 1) {\r\n        if (inputSelectAddedInfo === 0) {\r\n          let informationObject: ISupplyInformation = {\r\n            supplyCode: valueSelectComp,\r\n            supplyAmount: inputAmount,\r\n          };\r\n          setAddedInformation([...addedInformation, informationObject]);\r\n\r\n          // SET EMPTY VALUES\r\n          amountHTML.value = null;\r\n          setValueSelect(null);\r\n        } else {\r\n          dispatch({type: 'CODE_EXIST'});\r\n        }\r\n      } else {\r\n        dispatch({type: 'CODE_DOES_NOT_EXIST'});\r\n      }\r\n    } else {\r\n      dispatch({type: 'WRONG_INFORMATION'});\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n\r\n  const removeItem = (code: any) => {\r\n    let newAddedInformation = addedInformation.filter(\r\n      (item) => item.supplyCode !== code\r\n    );\r\n    setAddedInformation(newAddedInformation);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({type: 'CLOSE_MODAL'});\r\n  };\r\n\r\n  if (!props.isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalAddSuppliesComponent\">\r\n      <div className=\"ModalAddSuppliesComponent__container\">\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"ModalAddSuppliesComponent__close-button\"\r\n        >\r\n          X\r\n        </button>\r\n        <h4>Añadir telas o insumos</h4>\r\n        <p className=\"ModalAddSuppliesComponent__p\">\r\n          Aquí puedes añadir las telas y/o insumos que consume esta referencia.\r\n        </p>\r\n        <div className=\"addSuppliesZone\">\r\n          <div style={{width: 250}}>\r\n            <FilterDropdown\r\n              options={dBWareHouseSupplies}\r\n              id=\"codigo\"\r\n              label=\"codigo\"\r\n              prompt={'Seleccionar insumo'}\r\n              value={valueSelect}\r\n              onChange={(val: any) => setValueSelect(val)}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            className=\"amountSuppliesInput\"\r\n            placeholder=\"Digite la cantidad\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setInputAmount(e.target.value)}\r\n          />\r\n          <button className=\"btn\" onClick={handlerAddSupplies}>\r\n            Añadir\r\n          </button>\r\n        </div>\r\n        {state.isOpen && (\r\n          <ModalDesign\r\n            modalContent={state.modalContent}\r\n            closeModal={closeModal}\r\n          />\r\n        )}\r\n        <div className=\"added-container-supplies\">\r\n          {addedInformation.map((item) => {\r\n            return (\r\n              <div key={item.supplyCode} className=\"supplie-add\">\r\n                <h2>Item agregado: </h2>\r\n                Codigo: {item.supplyCode} - Cantidad: {item.supplyAmount}\r\n                <button\r\n                  className=\"removeItemAddSupplies\"\r\n                  onClick={() => removeItem(item.supplyCode)}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"buttonAddSuppliesContainer\">\r\n          <button\r\n            className=\"buttonAddSuppliesContainer__ready\"\r\n            onClick={() => {\r\n              props.suppliesFromDesign(addedInformation);\r\n              props.closeModal();\r\n            }}\r\n          >\r\n            Listo\r\n          </button>\r\n          <button\r\n            className=\"buttonAddSuppliesContainer__cancel\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    addSuppliesID\r\n  );\r\n};\r\n\r\nexport default ModalDesignAddSupplies;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { reducer } from \"../components/design/ReducerDesign\";\r\nimport \"./style/Design.css\";\r\nimport ModalDesignInventory from \"../components/design/ModalDesignInventory\";\r\nimport { baseURL } from \"../components/app/baseURL\";\r\nimport Modal from \"../components/Modal\";\r\nimport completeImage from \"../assets/complete.svg\";\r\nimport errorImage from \"../assets/error.svg\";\r\nimport noDataImage from \"../assets/no-data.svg\";\r\nimport ModalAddSupplies from \"../components/design/ModalDesignAddSupplies\";\r\nimport FilterDropdown from \"../components/FilterDropdown\";\r\n\r\ninterface ISupplyInformation {\r\n  supplyCode: string;\r\n  supplyAmount: string;\r\n}\r\n\r\ninterface IWareHouseSupplies {\r\n  codigo: number;\r\n  color: string;\r\n  metros: number;\r\n  cantidad: number;\r\n  descripcion: string;\r\n  nombre_imagen: string;\r\n  timestamp: string;\r\n}\r\n\r\nconst defaultState: any = {\r\n  modalContent: [],\r\n  isModalOpen: false,\r\n  isInventoryModalOpen: false,\r\n  modalInventoryContent: [],\r\n  checkNumber: 0,\r\n  imgCheckNumber: 0,\r\n};\r\n\r\nconst Design = () => {\r\n  const dbWareHouseCodesURL: string = baseURL + \"api/warehousecodes\";\r\n  const dbSaveNewReference: string = baseURL + \"api/savenewreference\";\r\n  const productionAPIURL: string = baseURL + \"api/production\";\r\n  const [switchReRender, setSwitchReRender] = useState<boolean>(false);\r\n  const [addReference, setAddReference] = useState<string>(\"\");\r\n  const [addDescription, setAddDescription] = useState<string>(\"\");\r\n  const [addColor, setAddColor] = useState<string>(\"\");\r\n  const [addImageName, setAddImageName] = useState<string>(\"\");\r\n  const [addValuePerUnit, setAddValuePerUnit] = useState<string>(\"\");\r\n  const [valueSizeSelect, setValueSizeSelect] = useState<any>(null);\r\n  const sizesArray: any = [\r\n    { codigo: \"1\", label: \"1\" },\r\n    { codigo: \"2\", label: \"2\" },\r\n    { codigo: \"3\", label: \"3\" },\r\n    { codigo: \"4\", label: \"4\" },\r\n  ];\r\n  let addSize: any = \"\";\r\n  const [addedInformationFromModal, setAddedInformationFromModal] =\r\n    useState<any>([]);\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const [modalAddSupplies, setModalAddSupplies] = useState<boolean>(false);\r\n  const [toggleState, setToggleState] = useState(1);\r\n\r\n  useEffect(() => {\r\n    Axios.get(dbWareHouseCodesURL).then((response: AxiosResponse) => {});\r\n    Axios.get(productionAPIURL)\r\n      .then((response: any) => {\r\n        dispatch({\r\n          type: \"SUCCESSFUL_SAMPLE_INVENTORY\",\r\n          payload: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  }, [switchReRender]);\r\n\r\n  const handlerAddSupplies = () => {\r\n    setModalAddSupplies(true);\r\n  };\r\n\r\n  const handlerSaveNewReference = () => {\r\n    let selectedOptionSize: any = document.querySelector(\r\n      \".selected-option-size\"\r\n    );\r\n    let isCodeExist = 0;\r\n\r\n    if (valueSizeSelect === null) {\r\n      addSize = \"\";\r\n    } else if (typeof valueSizeSelect === \"object\") {\r\n      addSize = valueSizeSelect.codigo.toString();\r\n    } else if (typeof valueSizeSelect === \"string\") {\r\n      addSize = valueSizeSelect;\r\n    }\r\n\r\n    sizesArray.map((val: any) => {\r\n      if (val.codigo === addSize) {\r\n        isCodeExist += 1;\r\n        return isCodeExist;\r\n      } else {\r\n        return isCodeExist;\r\n      }\r\n    });\r\n\r\n    const requestPayload = {\r\n      addReference: addReference,\r\n      addSize: addSize,\r\n      addDescription: addDescription,\r\n      addColor: addColor,\r\n      addImageName: addImageName,\r\n      valuePerUnit: addValuePerUnit,\r\n      addedInformationFromModal,\r\n    };\r\n\r\n    let enable =\r\n      addReference != \"\" &&\r\n      addSize != \"\" &&\r\n      addDescription != \"\" &&\r\n      addColor != \"\" &&\r\n      addImageName != \"\" &&\r\n      addValuePerUnit != \"\" &&\r\n      addedInformationFromModal.length != 0;\r\n    if (enable) {\r\n      if (isCodeExist === 1) {\r\n        Axios.post(dbSaveNewReference, requestPayload).then(\r\n          (response: AxiosResponse): void => {\r\n            if (response.data === \"SUCCESSFUL_REQUEST\") {\r\n              setEmptyValues();\r\n              dispatch({ type: \"SUCCESSFUL_REQUEST\" });\r\n              setSwitchReRender(!switchReRender);\r\n            }\r\n            if (response.data === \"FAILED_REQUEST\") {\r\n              dispatch({ type: \"FAILED_REQUEST\" });\r\n            }\r\n            if (response.data === \"INVALID_REFERENCE\") {\r\n              dispatch({ type: \"INVALID_REFERENCE\" });\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        dispatch({ type: \"CODE_DOES_NOT_EXIST\" });\r\n      }\r\n    } else {\r\n      dispatch({ type: \"WRONG_INPUT\" });\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({ tpye: \"CLOSE_MODAL\" });\r\n  };\r\n\r\n  const setEmptyValues = () => {\r\n    let addReferenceOption: any = document.querySelector(\r\n      \".add-reference-input\"\r\n    );\r\n    let addDescriptionOption: any = document.querySelector(\r\n      \".add-description-input\"\r\n    );\r\n    let addColorOption: any = document.querySelector(\".add-color-input\");\r\n    let addImageNameOption: any = document.querySelector(\r\n      \".add-imagename-input\"\r\n    );\r\n\r\n    let addValuePerUnit: any = document.getElementById(\"value-per-unit-input\");\r\n\r\n    addReferenceOption.value = \"\";\r\n    setValueSizeSelect(null);\r\n    addDescriptionOption.value = \"\";\r\n    addColorOption.value = \"\";\r\n    addImageNameOption.value = \"\";\r\n    addValuePerUnit.value= \"\";\r\n    setAddedInformationFromModal([]);\r\n    setAddReference(\"\");\r\n    setAddDescription(\"\");\r\n    setAddColor(\"\");\r\n    setAddImageName(\"\");\r\n    setAddValuePerUnit(\"\");\r\n  };\r\n\r\n  const handleInventory = () => {\r\n    Axios.get(productionAPIURL)\r\n      .then((response: any) => {\r\n        dispatch({\r\n          type: \"SUCCESSFUL_SAMPLE_INVENTORY\",\r\n          payload: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const closeModalAddSupplies = () => {\r\n    setModalAddSupplies(false);\r\n  };\r\n\r\n  const handleNavbarClick = (e: any) => {\r\n    e.preventDefault();\r\n    const target = e.target.getAttribute(\"href\");\r\n    const location = document.querySelector(target).offsetTop;\r\n    const scrollDiv = document.getElementById(\r\n      \"scroll-design-section\"\r\n    ) as HTMLDivElement;\r\n\r\n    scrollDiv.scrollTo(0, location - 55);\r\n  };\r\n\r\n  const toggleTab = (index: number) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-container-design\">\r\n      <div className=\"navbar-design\">\r\n        <h2 className=\"navbar-design__h2\">Taller diseño</h2>\r\n        <div className=\"navbar-design-options\">\r\n          <div\r\n            className={\r\n              toggleState === 1\r\n                ? \"tabs-design active-tabs-design\"\r\n                : \"tabs-design\"\r\n            }\r\n            onClick={() => toggleTab(1)}\r\n          >\r\n            <a\r\n              href=\"#add-reference-design-container\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Agregar una nueva muestra\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 2\r\n                ? \"tabs-design active-tabs-design\"\r\n                : \"tabs-design\"\r\n            }\r\n            onClick={() => toggleTab(2)}\r\n          >\r\n            <a\r\n              href=\"#inventory-design-modal-section\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Inventario de las muestras\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll-design-section\" id=\"scroll-design-section\">\r\n        <div\r\n          className=\"add-reference-design-container\"\r\n          id=\"add-reference-design-container\"\r\n        >\r\n          <form className=\"design-form\">\r\n            <h2>Agregar muestra</h2>\r\n            <div className=\"border-design-div\"></div>\r\n            <p className=\"design-form__information\">\r\n              En este formulario puedes asociar insumos a una nueva muestra.\r\n              Digita la referencia, selecciona la talla, agrega una descripcion,\r\n              digita el color y la URL de la imágen. Luego, presiona el botón\r\n              'Añadir/Eliminar Insumos' para agregar o eliminar los insumos que\r\n              consume esta nueva muestra. Por ultimo, presiona el botón de\r\n              'Guardar'.\r\n            </p>\r\n            <input\r\n              className=\"add-reference-input\"\r\n              type=\"number\"\r\n              placeholder=\"Referencia\"\r\n              onChange={(e) => setAddReference(e.target.value)}\r\n            />\r\n            <div className=\"dropdownDesign\">\r\n              <FilterDropdown\r\n                options={sizesArray}\r\n                id=\"codigo\"\r\n                label=\"codigo\"\r\n                prompt=\"Seleccionar el codigo de talla\"\r\n                value={valueSizeSelect}\r\n                onChange={(val: any) => setValueSizeSelect(val)}\r\n              />\r\n            </div>\r\n            <input\r\n              className=\"add-description-input\"\r\n              type=\"text\"\r\n              placeholder=\"Descripción\"\r\n              onChange={(e) => setAddDescription(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"add-color-input\"\r\n              type=\"text\"\r\n              placeholder=\"Color\"\r\n              onChange={(e) => setAddColor(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"add-imagename-input\"\r\n              type=\"text\"\r\n              placeholder=\"URL de la imágen\"\r\n              onChange={(e) => setAddImageName(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"value-per-unit-input\"\r\n              id=\"value-per-unit-input\"\r\n              type=\"number\"\r\n              placeholder=\"Valor de la unidad\"\r\n              onChange={(e) => setAddValuePerUnit(e.target.value)}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn\"\r\n              id=\"insumoBTN\"\r\n              onClick={handlerAddSupplies}\r\n            >\r\n              Añadir/Eliminar Insumos\r\n            </button>\r\n            {addedInformationFromModal.length !== 0 && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                id=\"saveBTN\"\r\n                onClick={handlerSaveNewReference}\r\n              >\r\n                Guardar\r\n              </button>\r\n            )}\r\n          </form>\r\n          <div className=\"supplies-added-design\">\r\n            <h3>Insumos agregados</h3>\r\n            {addedInformationFromModal.length == 0 && (\r\n              <>\r\n                <div className=\"no-data-image-container\">\r\n                  <img\r\n                    src={noDataImage}\r\n                    alt=\"no-data\"\r\n                    className=\"no-data-image-container__img\"\r\n                  />\r\n                </div>\r\n                <p className=\"no-data-paragraph\">\r\n                  Aún no se han añadido insumos\r\n                </p>\r\n              </>\r\n            )}\r\n            {addedInformationFromModal.map((item: any) => {\r\n              return (\r\n                <div key={item.supplyCode} className=\"insumo-add\">\r\n                  <h2>Item agregado: </h2>\r\n                  Codigo: {item.supplyCode} - Cantidad: {item.supplyAmount}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"inventory-design-modal-section\"\r\n          id=\"inventory-design-modal-section\"\r\n        >\r\n          <h3>Inventario de las muestras</h3>\r\n          <p>\r\n            En este apartado se despliega el inventario de las muestras. Si\r\n            quieres saber que telas e insumos consume una muestra en especifico,\r\n            presiona el botón 'Información de consumo'.\r\n          </p>\r\n          <ModalDesignInventory\r\n            closeModal={closeModal}\r\n            modalContent={state.modalInventoryContent}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\r\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\r\n        {state.imgCheckNumber === 1 && (\r\n          <img\r\n            className=\"modalWarehouseImg\"\r\n            src={completeImage}\r\n            alt=\"modalImg\"\r\n          />\r\n        )}\r\n        {state.imgCheckNumber === 2 && (\r\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\r\n        )}\r\n      </Modal>\r\n      <ModalAddSupplies\r\n        isOpen={modalAddSupplies}\r\n        // isOpen={true}\r\n        closeModal={closeModalAddSupplies}\r\n        suppliesFromDesign={(msg: any) => setAddedInformationFromModal(msg)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Design);\r\n","interface IState {\r\n  isModalOpen: boolean;\r\n  modalContent: string;\r\n  imgCheckNumber: number;\r\n}\r\n\r\ninterface IActions {\r\n  type: string;\r\n}\r\n\r\nexport const reducer = (state: IState, action: IActions) => {\r\n  if (action.type === 'ERROR_REGISTER') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      imgCheckNumber: 2,\r\n      modalContent: 'Error: no ha digitado todos los campos',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'ERROR_ROL') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      imgCheckNumber: 2,\r\n      modalContent: 'Error: No ha escogido un ROL',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'INVALID PASSWORD') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      imgCheckNumber: 2,\r\n      modalContent: 'Error: Digite una contraseña mayor o igual a 8 caracteres',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'PASSWORDS_DO_NOT_MATCH') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      imgCheckNumber: 2,\r\n      modalContent: 'Error: las contraseñas NO coinciden',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'USERNAME_EXIST') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      imgCheckNumber: 2,\r\n      modalContent: 'Error: el usuario ya existe',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESFUL_POST') {\r\n    return {\r\n      ...state,\r\n      isModalOpen: true,\r\n      imgCheckNumber: 1,\r\n      modalContent: '¡Genial! ¡Se ha registrado correctamente!',\r\n    };\r\n  }\r\n\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return {...state, isModalOpen: false};\r\n  }\r\n\r\n  return {...state, isModalOpen: false, modalContent: ''};\r\n};\r\n","import React, {useState, useReducer} from 'react';\r\nimport Axios from 'axios';\r\n\r\n//CSS:\r\nimport './style/Register.css';\r\n\r\n//MyModuls:\r\nimport {baseURL} from '../components/app/baseURL';\r\nimport Modal from '../components/Modal';\r\nimport completeImage from '../assets/complete.svg';\r\nimport errorImage from '../assets/error.svg';\r\n\r\n//Assets:\r\nimport registerImg from '../assets/register.svg';\r\n\r\n//Reducer:\r\n\r\nimport {reducer} from '../components/register/ReducerRegister';\r\n\r\ninterface IDefaultState {\r\n  isModalOpen: boolean;\r\n  modalContent: string;\r\n  imgCheckNumber: number;\r\n}\r\n\r\ninterface IUser {\r\n  username: string;\r\n  password: string;\r\n  idRol: string;\r\n}\r\n\r\nconst defaultState: IDefaultState = {\r\n  isModalOpen: false,\r\n  modalContent: '',\r\n  imgCheckNumber: 0,\r\n};\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState<string>('');\r\n  const [passwordForm, setPasswordForm] = useState<string>('');\r\n  const [validatePasswordForm, setValidatePasswordForm] = useState<string>('');\r\n  const [idRol, setIdRol] = useState<string>('');\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const postRegisterURL: string = baseURL + 'api/register';\r\n\r\n  //DOM:\r\n  const usernameInput = document.getElementById('username') as HTMLInputElement;\r\n  const passwordInput = document.getElementById('password') as HTMLInputElement;\r\n  const validatePasswordInput = document.getElementById(\r\n    'validPassword'\r\n  ) as HTMLInputElement;\r\n  const idRolInput = document.getElementById('idRol') as HTMLSelectElement;\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    //VALIDATION THE DATA OF THE FORM:\r\n    if (username && passwordForm && validatePasswordForm && idRol) {\r\n      if (idRol !== '0') {\r\n        if (passwordForm.length >= 7) {\r\n          if (passwordForm === validatePasswordForm) {\r\n            const newUser: IUser = {username, password: passwordForm, idRol};\r\n            Axios.post(postRegisterURL, {\r\n              user: newUser,\r\n            })\r\n              .then((response) => {\r\n                const validationUsername: string = response.data;\r\n                //VALIDATION IF THE USER EXIST OR NOT:\r\n                if (validationUsername === '1') {\r\n                  //THE USERNAME EXIST\r\n                  dispatch({type: 'USERNAME_EXIST'});\r\n                } else if (validationUsername === '2') {\r\n                  //THE USERNAME DOESN'T EXIST\r\n                  setUsername('');\r\n                  setPasswordForm('');\r\n                  setValidatePasswordForm('');\r\n                  setIdRol('');\r\n                  usernameInput.value = '';\r\n                  passwordInput.value = '';\r\n                  validatePasswordInput.value = '';\r\n                  idRolInput.value = '0';\r\n                  dispatch({type: 'SUCCESFUL_POST'});\r\n                }\r\n              })\r\n          } else {\r\n            dispatch({type: 'PASSWORDS_DO_NOT_MATCH'});\r\n          }\r\n        } else {\r\n          dispatch({type: 'INVALID PASSWORD'});\r\n        }\r\n      } else {\r\n        dispatch({type: 'ERROR_ROL'});\r\n      }\r\n    } else {\r\n      dispatch({type: 'ERROR_REGISTER'});\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({type: 'CLOSE_MODAL'});\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-register-container\">\r\n      <form className=\"register-form\">\r\n        <h2>Registrar usuario</h2>\r\n        <div className=\"border-div\"></div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Usuario\"\r\n          autoComplete=\"off\"\r\n          id=\"username\"\r\n          onChange={(e: any) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          autoComplete=\"off\"\r\n          id=\"password\"\r\n          onChange={(e: any) => setPasswordForm(e.target.value)}\r\n        />\r\n        <p className=\"passwordInfo\">\r\n          Ingrese una contraseña de al menos 8 caracteres\r\n        </p>\r\n        <input\r\n          type=\"password\"\r\n          name=\"validPassword\"\r\n          id=\"validPassword\"\r\n          placeholder=\"Contraseña nuevamente\"\r\n          autoComplete=\"off\"\r\n          onChange={(e: any) => setValidatePasswordForm(e.target.value)}\r\n        />\r\n        <select id=\"idRol\" onChange={(e: any) => setIdRol(e.target.value)}>\r\n          <option value=\"0\">Seleccionar rol</option>\r\n          <option value=\"1\">Administrador</option>\r\n          <option value=\"2\">Diseñador</option>\r\n          <option value=\"3\">Encargado Bodega</option>\r\n          <option value=\"4\">Cortador</option>\r\n          <option value=\"5\">Vendedor</option>\r\n        </select>\r\n        <button onClick={handleSubmit} className=\"btn\">\r\n          Registrarse\r\n        </button>\r\n        {state.isModalOpen && (\r\n          <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\r\n            <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\r\n            {state.imgCheckNumber === 1 && (\r\n              <img\r\n                className=\"modalWarehouseImg\"\r\n                src={completeImage}\r\n                alt=\"modalImg\"\r\n              />\r\n            )}\r\n            {state.imgCheckNumber === 2 && (\r\n              <img\r\n                className=\"modalWarehouseImg\"\r\n                src={errorImage}\r\n                alt=\"modalImg\"\r\n              />\r\n            )}\r\n          </Modal>\r\n        )}\r\n      </form>\r\n      <div className=\"img-register-container\">\r\n        <img src={registerImg} alt=\"register\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, {useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport {baseURL} from '../components/app/baseURL';\r\n\r\nconst Logout = () => {\r\n  const logoutAPIURL: string = baseURL + 'api/logout';\r\n\r\n  useEffect(() => {\r\n    Axios.post(logoutAPIURL)\r\n      .then(() => {\r\n        window.location.href = '/login';\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return <>{/* <h1>Loading...</h1> */}</>;\r\n};\r\n\r\nexport default withRouter(Logout);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./style/ModalWarehouseProductsReq.css\";\r\nimport errorIMG from \"../../assets/error.svg\";\r\n\r\nconst IDWarehouseProductsReq: any = document.getElementById(\r\n  \"warehouseProductsReq\"\r\n);\r\n\r\nconst ModalWarehouseProductsReq = (props: any) => {\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n\r\n  const handlerReject = () => {\r\n    props.handlerRefuse(props.index);\r\n    props.closeModal();\r\n  };\r\n\r\n  const handlerPartialDelivery = () => {\r\n    props.handlerPartialDelivery(props.index);\r\n    props.closeModal();\r\n  };\r\n\r\n  const handlerApprove = () => {\r\n    props.handlerAccept(props.index);\r\n    props.closeModal();\r\n  };\r\n\r\n  if (!props.isOpen) return null;\r\n  if (props.checkReqNumber === 1) {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"ModalWarehouseProductsComponent\">\r\n        <div className=\"ModalWarehouseProductsComponent__container\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"ModalWarehouseProductsComponent__close-button\"\r\n          >\r\n            X\r\n          </button>\r\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\r\n            Lotes necesarios para cumplir con el pedido\r\n          </h2>\r\n          <p>First in, first out (FIFO)</p>\r\n          {props.infoReq.map((info: any) => {\r\n            return (\r\n              <div className=\"successModalCard\">\r\n                <h4 className=\"successModalCard__h4\">\r\n                  Información del producto\r\n                </h4>\r\n                <div className=\"successModalCard__lot\">\r\n                  Numero lote: {info.numero_lote}\r\n                </div>\r\n                <div className=\"successModalCard__reference\">\r\n                  Referencia: {info.referencia}\r\n                </div>\r\n                <div className=\"successModalCard__order\">\r\n                  # de orden: {info.numero_de_orden}\r\n                </div>\r\n                <div className=\"successModalCard__amount\">\r\n                  Cantidad: {info.cantidad}\r\n                </div>\r\n                <div className=\"successModalCard__date\">\r\n                  Fecha: {info.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"buttonssuccessModalContiner\">\r\n            <button\r\n              className=\"btn buttonsSuccessModalContiner__approve\"\r\n              onClick={handlerApprove}\r\n            >\r\n              Aceptar\r\n            </button>\r\n            <button\r\n              className=\"btn buttonsSuccessModalContiner__reject\"\r\n              onClick={handlerReject}\r\n            >\r\n              Rechazar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      IDWarehouseProductsReq\r\n    );\r\n  } else if (props.checkReqNumber === 2) {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"ModalWarehouseProductsComponent\">\r\n        <div className=\"ModalWarehouseProductsComponent__container\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"ModalWarehouseProductsComponent__close-button\"\r\n          >\r\n            X\r\n          </button>\r\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\r\n            Cantidad insuficiente\r\n          </h2>\r\n          <p>\r\n            No se puede aceptar esta petición debido a que no hay cantidad\r\n            suficiente del siguiente producto.\r\n          </p>\r\n          {props.infoReq.map((info: any) => {\r\n            return (\r\n              <div className=\"successModalCard\">\r\n                <h4 className=\"successModalCard__h4\">\r\n                  Información del producto\r\n                </h4>\r\n                <div className=\"successModalCard__lot\">\r\n                  Numero lote: {info.numero_lote}\r\n                </div>\r\n                <div className=\"successModalCard__reference\">\r\n                  Referencia: {info.referencia}\r\n                </div>\r\n                <div className=\"successModalCard__order\">\r\n                  # de orden: {info.numero_de_orden}\r\n                </div>\r\n                <div className=\"successModalCard__amount\">\r\n                  Cantidad: {info.cantidad}\r\n                </div>\r\n                <div className=\"successModalCard__date\">\r\n                  Fecha: {info.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"buttonRejectContainer\">\r\n            <button\r\n              className=\"btn buttonRejectContainer__Reject\"\r\n              onClick={handlerPartialDelivery}\r\n            >\r\n              PET PARCIAL\r\n            </button>\r\n            <button\r\n              className=\"btn buttonRejectContainer__Reject\"\r\n              onClick={handlerReject}\r\n            >\r\n              Rechazar petición\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      IDWarehouseProductsReq\r\n    );\r\n  } else {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"ModalWarehouseProductsComponent\">\r\n        <div className=\"ModalWarehouseProductsComponent__container\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"ModalWarehouseProductsComponent__close-button\"\r\n          >\r\n            X\r\n          </button>\r\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\r\n            Aviso: No hay existencias.\r\n          </h2>\r\n          <div className=\"imgErrorWarehouseProductContainer\">\r\n            <img\r\n              src={errorIMG}\r\n              alt=\"error image\"\r\n              className=\"imgErrorWarehouseProductContainer__img\"\r\n            />\r\n          </div>\r\n          <div className=\"buttonssuccessModalContiner\">\r\n            <button\r\n              className=\"btn buttonsSuccessModalContiner__reject\"\r\n              onClick={handlerReject}\r\n            >\r\n              Rechazar Petición\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      IDWarehouseProductsReq\r\n    );\r\n  }\r\n};\r\n\r\nexport default ModalWarehouseProductsReq;\r\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\r\n// REDUCER\r\nimport { reducer } from \"../components/dressmaking/ReducerDressMaking\";\r\n// import './style/DressMaking.css';\r\n// import '../components/dressmaking/style/buttonStyle.css';\r\nimport { baseURL } from \"../components/app/baseURL\";\r\nimport notFoundImage from \"../assets/Not Found.svg\";\r\nimport Modal from \"../components/Modal\";\r\nimport completeImage from \"../assets/complete.svg\";\r\nimport errorImage from \"../assets/error.svg\";\r\nimport { StringLiteralLike, updateSourceFile } from \"typescript\";\r\nimport noDataImage from \"../assets/no-data.svg\";\r\nimport \"./style/WareHouseProducts.css\";\r\nimport ModalWarehouseProductsReq from \"../components/warehouseProducts/ModalWarehouseProductsReq\";\r\n\r\nconst WareHouseProducts = () => {\r\n  //INTERFACES\r\n  interface IWareHouseProducts {\r\n    numero_lote: string;\r\n    referencia: string;\r\n    numero_de_orden: string;\r\n    cantidad: string;\r\n    timestamp: string;\r\n    restante?: string;\r\n    faltante?: string;\r\n  }\r\n\r\n  interface IShopRequests {\r\n    numero_de_orden: number;\r\n    referencia: number;\r\n    cantidad: number;\r\n    idTienda: number;\r\n    timestamp: string;\r\n    nombre_tienda: string;\r\n    direccion: string;\r\n  }\r\n\r\n  // STATES STATEMENTS\r\n  const [wareHouseProducts, setWareHouseProducts] = useState<\r\n    IWareHouseProducts[]\r\n  >([]);\r\n  const [shopRequestInfo, setShopRequestInfo] = useState<any>([]);\r\n  const [actualShopRequests, setActualShopRequest] = useState<IShopRequests[]>(\r\n    []\r\n  );\r\n  const [reference, setReference] = useState<string>(\"\");\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  const [isOpenModalReq, setIsOpenModalReq] = useState<boolean>(false);\r\n  const [checkReqNumber, setCheckReqNumber] = useState<number>(0);\r\n  const [indexModal, setIndexModal] = useState<number>(0);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [toggleState, setToggleState] = useState(1);\r\n\r\n  const dbWareHouseProducts: string = baseURL + \"api/getwarehouseproducts\";\r\n  const dbShopsRequestProducts: string = baseURL + \"api/shoprequestproducts\";\r\n  const dbAcceptShopRequest: string = baseURL + \"api/acceptshoprequest\";\r\n  const dbActualShopsRequests: string = baseURL + \"api/getactualshoprequests\";\r\n  const dbSaveDecision: string = baseURL + \"api/savewarehouseproductsdecision\";\r\n  const dbPartialDelivery: string = baseURL + \"api/updatepartialdelivery\";\r\n\r\n  let iterator = 0;\r\n  let enableEmpty = true;\r\n  let showEmptySearch = false;\r\n\r\n  useEffect(() => {\r\n    Axios.get(dbWareHouseProducts).then((response: AxiosResponse) => {\r\n      setWareHouseProducts(response.data);\r\n    });\r\n\r\n    Axios.get(dbActualShopsRequests).then((response: AxiosResponse) => {\r\n      setActualShopRequest(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const handlerShowInfo = (index: number) => {\r\n    Axios.post(dbShopsRequestProducts, {\r\n      reference: actualShopRequests[index].referencia,\r\n      amount: actualShopRequests[index].cantidad,\r\n    }).then((response: AxiosResponse) => {\r\n      if (response.data[response.data.length - 1].faltante) {\r\n        setShopRequestInfo(response.data);\r\n        setCheckReqNumber(2);\r\n        setIndexModal(index);\r\n        setIsOpenModalReq(true);\r\n      } else if (response.data === \"NO EXISTE\") {\r\n        setCheckReqNumber(3);\r\n        setIndexModal(index);\r\n        setIsOpenModalReq(true);\r\n      } else {\r\n        setShopRequestInfo(response.data);\r\n        setCheckReqNumber(1);\r\n        setIndexModal(index);\r\n        setIsOpenModalReq(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlerApprove = (payload: any) => {\r\n    let index = payload;\r\n    Axios.post(dbSaveDecision, {\r\n      ...actualShopRequests[index],\r\n      neededStock: shopRequestInfo,\r\n      idDecision: 1,\r\n    }).then((response: AxiosResponse): void => {\r\n    });\r\n    let filterResult = actualShopRequests.filter(\r\n      (item: IShopRequests) =>\r\n        item.numero_de_orden != actualShopRequests[index].numero_de_orden\r\n    );\r\n    setActualShopRequest(filterResult);\r\n  };\r\n\r\n  const handlerRefuse = (payload: any) => {\r\n    let index = payload;\r\n    Axios.post(dbSaveDecision, {\r\n      ...actualShopRequests[index],\r\n      idDecision: 0,\r\n    }).then((response: AxiosResponse): void => {\r\n      if (response.data === \"SUCCESSFUL_SAVING\") {\r\n        let filterResult = actualShopRequests.filter(\r\n          (item: IShopRequests) =>\r\n            item.numero_de_orden !== actualShopRequests[index].numero_de_orden\r\n        );\r\n        setActualShopRequest(filterResult);\r\n      } \r\n    });\r\n\r\n  };\r\n\r\n  const handlerPartialDelivery = (index: number) => {\r\n    Axios.post(dbPartialDelivery, {\r\n      ...actualShopRequests[index],\r\n      neededStock: shopRequestInfo,\r\n      idDecision: 1,\r\n    }).then((response: AxiosResponse) => {\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpenModalReq(false);\r\n  };\r\n\r\n  const handleNavbarClick = (e: any) => {\r\n    e.preventDefault();\r\n    const target = e.target.getAttribute(\"href\");\r\n    const location = document.querySelector(target).offsetTop;\r\n    const scrollDiv = document.getElementById(\r\n      \"scroll-warehouseproducts\"\r\n    ) as HTMLDivElement;\r\n\r\n    scrollDiv.scrollTo(0, location - 55);\r\n  };\r\n\r\n  const toggleTab = (index: number) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  const handlerSearch = (e: any) => {\r\n    setSearchTerm(e);\r\n    iterator = 0;\r\n    enableEmpty = true;\r\n    showEmptySearch = false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-container-warehouseproducts\">\r\n      <div className=\"navbar-warehouseproducts\">\r\n        <h2 className=\"navbar-warehouseproducts__h2\">Bodega Productos</h2>\r\n        <div className=\"navbar-warehouseproducts-otpions\">\r\n          <div\r\n            className={\r\n              toggleState === 1\r\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\r\n                : \"tabs-warehouseproducts\"\r\n            }\r\n            onClick={() => toggleTab(1)}\r\n          >\r\n            <a\r\n              href=\"#products-warehouseproducts-section\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Productos terminados\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 2\r\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\r\n                : \"tabs-warehouseproducts\"\r\n            }\r\n            onClick={() => toggleTab(2)}\r\n          >\r\n            <a\r\n              href=\"#shops-request-warehouseproducts-section\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Peticiones\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll-warehouseproducts\" id=\"scroll-warehouseproducts\">\r\n        <div\r\n          className=\"products-warehouseproducts-section\"\r\n          id=\"products-warehouseproducts-section\"\r\n        >\r\n          <h3 className=\"products-finished-warehouseproducts-section__h3\">\r\n            Productos terminados\r\n          </h3>\r\n          <p className=\"products-finished-warehouseproducts-section__p\">\r\n            En este apartado se muestra el inventario de los productos\r\n            terminados listos para ser enviado a las tiendas.\r\n          </p>\r\n          <div className=\"container_table-warehouseproducts\">\r\n            <div className=\"table_title-warehouseproducts \">Información</div>\r\n            <div className=\"search-warehouseproducts-container\">\r\n              <i className=\"gg-search\"></i>\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"Buscar por referencia...\"\r\n                className=\"search-filter-warehouseproducts\"\r\n                onChange={(e: any) => handlerSearch(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div className=\"sample-image-warehouseproducts-container\">\r\n              <div className=\"table_header-warehouseproducts-sample\">\r\n                Producto\r\n              </div>\r\n              <div className=\"table_header-warehouseproducts-img\">Imagen</div>\r\n            </div>\r\n            <div className=\"scroll-modal-warehouseproducts\">\r\n              {wareHouseProducts\r\n                .filter((val: any) => {\r\n                  iterator += 1;\r\n                  if (searchTerm === \"\") {\r\n                    return val;\r\n                  } else if (\r\n                    val.referencia\r\n                      .toString()\r\n                      .slice(0, searchTerm.length)\r\n                      .includes(searchTerm)\r\n                  ) {\r\n                    enableEmpty = false;\r\n                    return val;\r\n                  } else if (iterator == wareHouseProducts.length && enableEmpty == true) {\r\n                    showEmptySearch = true;\r\n                  }\r\n                })\r\n                .map((props: any) => {\r\n                  return (\r\n                    <div\r\n                      className=\"items_container-warehouseproducts\"\r\n                      key={props.referencia}\r\n                    >\r\n                      <div className=\"items-information-wproducts-container\">\r\n                        <div className=\"items-information-wp-lot\">\r\n                          Numero de lote: {props.numero_lote}\r\n                        </div>\r\n                        <div className=\"items-information-wp-ref\">\r\n                          Referencia: {props.referencia}\r\n                        </div>\r\n                        <div className=\"items-information-wp-order\">\r\n                          Numero de orden: {props.numero_de_orden}\r\n                        </div>\r\n                        <div className=\"items-information-amount\">\r\n                          Cantidad: {props.cantidad}\r\n                        </div>\r\n                        <div className=\"items-information-timestamp\">\r\n                          Fecha:{\" \"}\r\n                          {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"table_item-warehouseproduct\">\r\n                        <img\r\n                          className=\"table_img-warehouseproduct\"\r\n                          src={props.nombre_imagen}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              {showEmptySearch && (\r\n                <img\r\n                  className=\"notfoundImg-warehouseproducts\"\r\n                  src={notFoundImage}\r\n                  alt=\"Not Found\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"shops-request-warehouseproducts-section\"\r\n          id=\"shops-request-warehouseproducts-section\"\r\n        >\r\n          <h3 className=\"shops-request-warehouseproducts-section__h3\">\r\n            Peticiones\r\n          </h3>\r\n          <p className=\"shops-request-warehouseproducts-section__p\">\r\n            En este apartado se encuentran la peticiones realizadas por las\r\n            tiendas que necesitan stock.\r\n          </p>\r\n          {actualShopRequests.length == 0 && (\r\n            <>\r\n              <div className=\"no-data-image-warehouseproducts-container\">\r\n                <img\r\n                  src={noDataImage}\r\n                  alt=\"no-data\"\r\n                  className=\"no-data-image-warehouseproducts-container__img\"\r\n                />\r\n              </div>\r\n              <p className=\"no-data-image-warehouseproducts-paragraph\">\r\n                Aún no hay peticiones\r\n              </p>\r\n            </>\r\n          )}\r\n          {actualShopRequests.length !== 0 && (\r\n            <div className=\"shopsRequestContainer\">\r\n              {actualShopRequests.map((shop, index) => {\r\n                return (\r\n                  <div className=\"shopRequestCard\">\r\n                    <h4 className=\"shopRequestCard__h4\">\r\n                      Información de la petición\r\n                    </h4>\r\n                    <div className=\"shopRequestCard__order\">\r\n                      # de orden: {shop.numero_de_orden}\r\n                    </div>\r\n                    <div className=\"shopRequestCard__reference\">\r\n                      Referencia: {shop.referencia}\r\n                    </div>\r\n                    <div className=\"shopRequestCard__amount\">\r\n                      Cantidad: {shop.cantidad}\r\n                    </div>\r\n                    <div className=\"shopRequestCard__shop\">\r\n                      Tienda: {shop.nombre_tienda}\r\n                    </div>\r\n                    <div className=\"shopRequestCard_date\">\r\n                      Fecha: {shop.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                    </div>\r\n                    <div className=\"shopRequestCard__address\">\r\n                      Dirección: {shop.direccion ? shop.direccion : \"0\"}\r\n                    </div>\r\n                    <button\r\n                      className=\"btn shopRequestCard__deploy\"\r\n                      key={index}\r\n                      data-index={index}\r\n                      onClick={() => handlerShowInfo(index)}\r\n                    >\r\n                      Desplegar requerimientos\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <ModalWarehouseProductsReq\r\n        isOpen={isOpenModalReq}\r\n        closeModal={closeModal}\r\n        infoReq={shopRequestInfo}\r\n        checkReqNumber={checkReqNumber}\r\n        handlerRefuse={handlerRefuse}\r\n        handlerAccept={handlerApprove}\r\n        handlerPartialDelivery={handlerPartialDelivery}\r\n        index={indexModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WareHouseProducts;\r\n","import React, { useState } from \"react\";\r\n\r\nimport notFoundImage from \"../../assets/Not Found.svg\";\r\nimport \"./style/InfoShopsInventory.css\";\r\n\r\nconst InfoShopsInventory = (props: any) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  let iterator = 0;\r\n  let enableEmpty = true;\r\n  let showEmptySearch = false;\r\n\r\n  const handleSearch = (e: any) => {\r\n    setSearchTerm(e);\r\n    iterator = 0;\r\n    enableEmpty = true;\r\n    showEmptySearch = false;\r\n  };\r\n\r\n  const handlerReceived = (index: number) => {\r\n    props.receivedFunction(index);\r\n  };\r\n\r\n  if (props.checkNumber === 1) {\r\n    return (\r\n      <div className=\"container_table-shops\">\r\n        <div className=\"table_title-shops\">Información</div>\r\n        <div className=\"search-shops-container\">\r\n          <i className=\"gg-search\"></i>\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Buscar por referencia...\"\r\n            className=\"search-filter-shops\"\r\n            onChange={(e: any) => handleSearch(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"sample-image-shops-container\">\r\n          <div className=\"table_header-shops-sample\">Producto</div>\r\n          <div className=\"table_header-shops-img\">Imagen</div>\r\n        </div>\r\n        <div className=\"scroll-modal-shops\">\r\n          {props.arrayInformation\r\n            .filter((val: any) => {\r\n              iterator += 1;\r\n              if (searchTerm === \"\") {\r\n                return val;\r\n              } else if (\r\n                val.referencia\r\n                  .toString()\r\n                  .slice(0, searchTerm.length)\r\n                  .includes(searchTerm)\r\n              ) {\r\n                enableEmpty = false;\r\n                return val;\r\n              } else if (\r\n                iterator == props.arrayInformation.length &&\r\n                enableEmpty == true\r\n              ) {\r\n                showEmptySearch = true;\r\n              }\r\n            })\r\n            .map((props: any, index: any) => {\r\n              return (\r\n                <div className=\"items_container-shops\" key={index}>\r\n                  <div className=\"items-information-shops-container\">\r\n                    <div className=\"items-information-shops__lot\">\r\n                      Numero de lote: {props.numero_lote}\r\n                    </div>\r\n                    <div className=\"items-information-shops__ref\">\r\n                      Referencia: {props.referencia}\r\n                    </div>\r\n                    <div className=\"items-information-shops__order\">\r\n                      Numero de orden: {props.numero_de_orden}\r\n                    </div>\r\n                    <div className=\"items-information-shops__shop\">\r\n                      Tienda destino: {props.nombre_tienda}\r\n                    </div>\r\n                    <div className=\"items-information-shops__amount\">\r\n                      Cantidad: {props.cantidad}\r\n                    </div>\r\n                    <div className=\"items-information-shops__timestamp\">\r\n                      Fecha: {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                    </div>\r\n                    <div className=\"items-information-shops-button-container\">\r\n                      <button\r\n                        className=\"btn items-information-shops__button\"\r\n                        onClick={() => handlerReceived(index)}\r\n                      >\r\n                        Confirmar Recibido\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"table_item-shops\">\r\n                    <img\r\n                      className=\"table_img-shops\"\r\n                      src={props.nombre_imagen}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          {showEmptySearch && (\r\n            <img\r\n              className=\"notfoundImg-shops\"\r\n              src={notFoundImage}\r\n              alt=\"Not Found\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container_table-shops\">\r\n        <div className=\"table_title-shops\">Información</div>\r\n        <div className=\"search-shops-container\">\r\n          <i className=\"gg-search\"></i>\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Buscar por referencia...\"\r\n            className=\"search-filter-shops\"\r\n            onChange={(e: any) => handleSearch(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"sample-image-shops-container\">\r\n          <div className=\"table_header-shops-sample\">Producto</div>\r\n          <div className=\"table_header-shops-img\">Imagen</div>\r\n        </div>\r\n        <div className=\"scroll-modal-shops\">\r\n          {props.arrayInformation\r\n            .filter((val: any) => {\r\n              iterator += 1;\r\n              if (searchTerm === \"\") {\r\n                return val;\r\n              } else if (\r\n                val.referencia\r\n                  .toString()\r\n                  .slice(0, searchTerm.length)\r\n                  .includes(searchTerm)\r\n              ) {\r\n                enableEmpty = false;\r\n                return val;\r\n              } else if (\r\n                iterator == props.arrayInformation.length &&\r\n                enableEmpty == true\r\n              ) {\r\n                showEmptySearch = true;\r\n              }\r\n            })\r\n            .map((props: any, index: any) => {\r\n              return (\r\n                <div className=\"items_container-shops\" key={index}>\r\n                  <div className=\"items-information-shops-container\">\r\n                    <div className=\"items-information-shops__lot\">\r\n                      Numero de lote: {props.numero_lote}\r\n                    </div>\r\n                    <div className=\"items-information-shops__ref\">\r\n                      Referencia: {props.referencia}\r\n                    </div>\r\n                    <div className=\"items-information-shops__order\">\r\n                      Numero de orden: {props.numero_de_orden}\r\n                    </div>\r\n                    <div className=\"items-information-shops__shop\">\r\n                      Tienda: {props.nombre_tienda}\r\n                    </div>\r\n                    <div className=\"items-information-shops__amount\">\r\n                      Cantidad: {props.cantidad}\r\n                    </div>\r\n                    <div className=\"items-information-shops__timestamp\">\r\n                      Fecha: {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"table_item-shops\">\r\n                    <img\r\n                      className=\"table_img-shops\"\r\n                      src={props.nombre_imagen}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          {showEmptySearch && (\r\n            <img\r\n              className=\"notfoundImg-shops\"\r\n              src={notFoundImage}\r\n              alt=\"Not Found\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default InfoShopsInventory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./style/ModalShopsReq.css\";\r\nimport errorIMG from \"../../assets/error.svg\";\r\nimport { baseURL } from \"../app/baseURL\";\r\n\r\nconst modalShopsReqId: any = document.getElementById(\"ModalShopsReq\");\r\n\r\nconst ModalShopsReq = (props: any) => {\r\n  const url = baseURL + \"api/modalrequiredstock\";\r\n  const requiredStock = props.requiredStock;\r\n  const [requiredStockOrdered, setRequiredStockOrdered] = useState<any>([]);\r\n\r\n  const handleClose = () => {\r\n    props.closeModal();\r\n  };\r\n\r\n  const handleDecision = (decisionNumber: number) => {\r\n    props.handleDecision(decisionNumber);\r\n    props.closeModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.checkReqNumber !== 3) {\r\n      Axios.post(url, requiredStock).then((response: any) => {\r\n        setRequiredStockOrdered(response.data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  if (!props.isOpen) return null;\r\n\r\n  if (props.checkReqNumber === 1) {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"ModalShopsComponent\">\r\n        <div className=\"ModalShopsComponent__container\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"ModalShopsComponent__close-button\"\r\n          >\r\n            X\r\n          </button>\r\n          <h2 className=\"ModalShopsComponent__h2\">\r\n            Lotes necesarios para cumplir con el pedido\r\n          </h2>\r\n          <p>First in, first out (FIFO)</p>\r\n          {requiredStockOrdered.map((info: any) => {\r\n            return (\r\n              <div className=\"ModalShopsCard\">\r\n                <h4 className=\"ModalShopsCard__h4\">Información del producto</h4>\r\n                <div className=\"ModalShopsCard__lot\">\r\n                  Numero lote: {info.numero_lote}\r\n                </div>\r\n                <div className=\"ModalShopsCard__reference\">\r\n                  Referencia: {info.referencia}\r\n                </div>\r\n                <div className=\"ModalShopsCard__amount\">\r\n                  Cantidad: {info.cantidadTotal}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"buttonsModalShopsContainer\">\r\n            <button\r\n              className=\"btn buttonsModalShopsContainer__approve\"\r\n              onClick={() => handleDecision(1)}\r\n            >\r\n              Aceptar\r\n            </button>\r\n            <button\r\n              className=\"btn buttonsModalShopsContainer__reject\"\r\n              onClick={() => handleDecision(0)}\r\n            >\r\n              Rechazar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      modalShopsReqId\r\n    );\r\n  } else if (props.checkReqNumber === 2) {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"ModalShopsComponent\">\r\n        <div className=\"ModalShopsComponent__container\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"ModalShopsComponent__close-button\"\r\n          >\r\n            X\r\n          </button>\r\n          <h2 className=\"ModalShopsComponent__h2\">\r\n            ATENCIÓN: No hay el stock exacto\r\n          </h2>\r\n          <p>\r\n            Para cumplir con este pedido faltarían {props.stockMissingAmount}{\" \"}\r\n            productos. Si así lo deseas pueden pedir la cantidad disponible:{\" \"}\r\n            {props.stockAvailableAmount} productos.\r\n          </p>\r\n          {requiredStockOrdered.map((info: any) => {\r\n            return (\r\n              <div className=\"ModalShopsCard\">\r\n                <h4 className=\"ModalShopsCard__h4\">Información del producto</h4>\r\n                <div className=\"ModalShopsCard__lot\">\r\n                  Numero lote: {info.numero_lote}\r\n                </div>\r\n                <div className=\"ModalShopsCard__reference\">\r\n                  Referencia: {info.referencia}\r\n                </div>\r\n                <div className=\"ModalShopsCard__amount\">\r\n                  Cantidad: {info.cantidadTotal}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"buttonsModalShopsContainer\">\r\n            <button\r\n              className=\"btn buttonsModalShopsContainer__approve\"\r\n              onClick={() => handleDecision(2)}\r\n            >\r\n              Aceptar\r\n            </button>\r\n            <button\r\n              className=\"btn buttonsModalShopsContainer__reject\"\r\n              onClick={() => handleDecision(0)}\r\n            >\r\n              Rechazar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      modalShopsReqId\r\n    );\r\n  } else {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"ModalShopsComponent\">\r\n        <div className=\"ModalShopsComponent__container\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"ModalShopsComponent__close-button\"\r\n          >\r\n            X\r\n          </button>\r\n          <h2 className=\"ModalShopsComponent__h2\">\r\n            No hay existencias de esta referencia en esta tienda\r\n          </h2>\r\n          <div className=\"imgErrorShopsContainer\">\r\n            <img\r\n              src={errorIMG}\r\n              alt=\"error image\"\r\n              className=\"imgErrorShopsContainer__img\"\r\n            />\r\n          </div>\r\n          <div className=\"buttonsRejectShopsModalContainer\">\r\n            <button\r\n              className=\"btn buttonsRejectShopsModalContainer__reject\"\r\n              onClick={() => handleDecision(0)}\r\n            >\r\n              Rechazar Petición\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      modalShopsReqId\r\n    );\r\n  }\r\n};\r\n\r\nexport default ModalShopsReq;\r\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport Axios, { AxiosResponse } from \"axios\";\r\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\r\n// REDUCER\r\nimport \"./style/Shops.css\";\r\nimport { baseURL } from \"../components/app/baseURL\";\r\nimport FilterDropdown from \"../components/FilterDropdown\";\r\nimport Modal from \"../components/Modal\";\r\nimport completeImage from \"../assets/complete.svg\";\r\nimport errorImage from \"../assets/error.svg\";\r\nimport noDataImage from \"../assets/no-data.svg\";\r\nimport InfoShopsInventory from \"../components/shops/InfoShopsInventory\";\r\nimport ModalShopsReq from \"../components/shops/ModalShopsReq\";\r\nimport { StringLiteralLike, updateSourceFile } from \"typescript\";\r\n\r\nconst reducer = (state: any, action: any) => {\r\n  if (action.type === \"SUCCESSFUL_REQUEST\") {\r\n    return {\r\n      ...state,\r\n      modalContent: \"Petición realizada\",\r\n      imgCheckNumber: 1,\r\n      isModalOpen: true,\r\n    };\r\n  }\r\n  if (action.type === \"WRONG_INPUT\") {\r\n    return {\r\n      ...state,\r\n      modalContent: \"Error: Digite los campos bien\",\r\n      isModalOpen: true,\r\n      imgCheckNumber: 2,\r\n    };\r\n  }\r\n  if (action.type === \"CLOSE_MODAL\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: false,\r\n      imgCheckNumber: 0,\r\n      modalContent: \"\",\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    isModalOpen: false,\r\n    modalContent: \"\",\r\n    imgCheckNumber: 0,\r\n  };\r\n};\r\n\r\nconst defaultState: any = {\r\n  isModalOpen: false,\r\n  modalContent: \"\",\r\n  imgCheckNumber: 0,\r\n};\r\n\r\nconst Shops = () => {\r\n  interface IReference {\r\n    referencia: number;\r\n    id_talla: number;\r\n    descripcion: string;\r\n    color: string;\r\n    nombre_imagen: string;\r\n    codigoycantidad: string;\r\n  }\r\n  interface IShops {\r\n    idTienda: number;\r\n    nombre_tienda: string;\r\n    direccion: string;\r\n  }\r\n\r\n  const [references, setReferences] = useState<IReference[]>([]);\r\n  const [shops, setShops] = useState<IShops[]>([]);\r\n  const [shopsOrigin, setShopsOrigin] = useState<IShops[]>([]);\r\n  const [shopsDestination, setShopsDestination] = useState<IShops[]>([]);\r\n  const [valueReferenceSelect, setValueReferenceSelect] = useState<any>(null);\r\n  const [valueShopSelect, setValueShopSelect] = useState<any>(null);\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  const [selectedReference, setSelectedReference] = useState<string>(\"\");\r\n  const [selectedShop, setSelectedShop] = useState<string>(\"\");\r\n  const [approvedRequests, setApprovedRequests] = useState<any>([]);\r\n  const [numberInput, setNumberInput] = useState<string>(\"\");\r\n  const [infoDeliveryState, setInfoDeliveryState] = useState<any>([]);\r\n  const [infoActualInventory, setInfoActualInventory] = useState<any>([]);\r\n  const [requiredStock, setRequiredStock] = useState<any>([]);\r\n  const [infoRequestsBetweenShops, setInfoRequestsBetweenShops] = useState<any>(\r\n    []\r\n  );\r\n  const [isShopOriginSelected, setIsShopOriginSelected] =\r\n    useState<boolean>(false);\r\n  const [checkReqNumber, setCheckReqNumber] = useState<number>(0);\r\n  const [indexModal, setIndexModal] = useState<number>(0);\r\n  const [isOpenModalReq, setIsOpenModalReq] = useState<boolean>(false);\r\n  const [stockMissingAmount, setStockMissingAmount] = useState<number>(0);\r\n  const [stockAvailableAmount, setStockAvailableAmount] = useState<number>(0);\r\n  const [auxiliar, setAuxiliar] = useState<any>([]);\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const refInputBetweenShops: any = useRef(null);\r\n  const refInputReqToWarehouseProducts: any = useRef(null);\r\n  const [switchUseEffect, setSwitchUseEffect] = useState<boolean>(false);\r\n\r\n  // REQUEST BETWEEN SHOPS useStates\r\n  const [value_reference_request, set_value_reference_request] =\r\n    useState<any>(null);\r\n  const [amount_request, set_amount_request] = useState<string>(\"\");\r\n  const [value_origin_shop, set_value_origin_shop] = useState<any>(null);\r\n  const [value_destination_shop, set_value_destination_shop] =\r\n    useState<any>(null);\r\n  const [toggleState, setToggleState] = useState(1);\r\n  // DATABASE URLS\r\n  const dbReferencesURL: string = baseURL + \"api/references\";\r\n  const dbShopsInfoURL: string = baseURL + \"api/shopsinformation\";\r\n  const dbProductsRequestURL: string =\r\n    baseURL + \"api/shopwarehouseproductsrequest\";\r\n  const dbDeliveryState: string = baseURL + \"api/deliverystate\";\r\n  const dbActualInventory: string = baseURL + \"api/getactualinventory\";\r\n  const dbActualRequestsBetweenShops: string =\r\n    baseURL + \"api/getactualrequestbetweenshops\";\r\n  const dbUpdateReceivedState: string = baseURL + \"api/updatereceivedstate\";\r\n  const dbRequestBetweenShops: string = baseURL + \"api/requestsbetweenshops\";\r\n  const dbDecisionBetweenShops: string = baseURL + \"api/decisionbetweenshops\";\r\n  const dbSaveNewShopRequest: string = baseURL + \"api/save_newshop_request\";\r\n\r\n  useEffect(() => {\r\n    Axios.get(dbReferencesURL).then((response: AxiosResponse) => {\r\n      setReferences(response.data);\r\n    });\r\n\r\n    Axios.get(dbShopsInfoURL).then((response: AxiosResponse) => {\r\n      setShops(response.data);\r\n      setShopsOrigin(response.data);\r\n      setShopsDestination(response.data);\r\n    });\r\n\r\n    Axios.get(dbActualInventory).then((response: AxiosResponse) => {\r\n      setInfoActualInventory(response.data);\r\n    });\r\n\r\n    Axios.get(dbDeliveryState).then((response: AxiosResponse) => {\r\n      setInfoDeliveryState(response.data);\r\n    });\r\n\r\n    Axios.get(dbActualRequestsBetweenShops).then((response: AxiosResponse) => {\r\n      setInfoRequestsBetweenShops(response.data);\r\n    });\r\n\r\n    const triggerListeners = (\r\n      class1: string,\r\n      class2: string,\r\n      setNumber: number\r\n    ) => {\r\n      var selectedOption: any = document.querySelector(class1);\r\n      var options: any = document.querySelectorAll(class2);\r\n\r\n      selectedOption.addEventListener(\"click\", () => {\r\n        selectedOption.parentElement.classList.toggle(\"active\");\r\n      });\r\n\r\n      options.forEach((option: any) => {\r\n        option.addEventListener(\"click\", () => {\r\n          setTimeout(() => {\r\n            selectedOption.innerHTML = option.innerHTML;\r\n            // SET CURRENT REFERENCE VALUE\r\n            // 0 ==> Reference\r\n            if (setNumber === 0) {\r\n              setSelectedReference(option.innerHTML);\r\n              // 1 ==> Shop id\r\n            } else if (setNumber === 1) {\r\n              setSelectedShop(option.getAttribute(\"data-id\"));\r\n            }\r\n          }, 300);\r\n\r\n          selectedOption.parentElement.classList.remove(\"active\");\r\n        });\r\n      });\r\n    };\r\n  }, [switchUseEffect]);\r\n\r\n  // GENERAL DATABASE CHECK\r\n  const check_existing_value = async (check_case: number, payload: string) => {\r\n    try {\r\n      const response = await Axios.post(baseURL + \"api/check_existing_value\", {\r\n        check_case,\r\n        payload,\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  // CHECK THE TYPE DUE TO THE SEARCH DROPDOWN\r\n  const check_type_case = (case_parameter: any, case_attribute: string) => {\r\n    let result = \"\";\r\n    if (typeof case_parameter === \"object\" && case_parameter !== null) {\r\n      result = case_parameter[case_attribute].toString();\r\n      return result;\r\n    } else if (typeof case_parameter === \"string\" && case_parameter !== null) {\r\n      result = case_parameter;\r\n      return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const productsRequest = async () => {\r\n    let valueReferenceSelected: string = check_type_case(\r\n      valueReferenceSelect,\r\n      \"referencia\"\r\n    );\r\n    let valueShopSelected: string = check_type_case(\r\n      valueShopSelect,\r\n      \"idTienda\"\r\n    );\r\n    let isReferenceExist: boolean = false;\r\n    let isShopExist: boolean = false;\r\n\r\n    const correctAmount = parseFloat(amount);\r\n\r\n    // CHECK IN DATABASE ==> return boolean\r\n    isReferenceExist = await check_existing_value(0, valueReferenceSelected); // O: referencia\r\n    isShopExist = await check_existing_value(1, valueShopSelected); // 1: idTienda\r\n\r\n    let enableInput = valueShopSelected !== \"\";\r\n    let enableInput2 = valueReferenceSelected !== \"\";\r\n    if (\r\n      Number.isInteger(correctAmount) &&\r\n      correctAmount > 0 &&\r\n      enableInput &&\r\n      enableInput2 &&\r\n      isShopExist &&\r\n      isReferenceExist\r\n    ) {\r\n      Axios.post(dbProductsRequestURL, {\r\n        actualAmount: amount,\r\n        referenceSelection: valueReferenceSelected,\r\n        idShop: valueShopSelected,\r\n      }).then((response: AxiosResponse): void => {\r\n        dispatch({ type: \"SUCCESSFUL_REQUEST\" });\r\n        setValueReferenceSelect(null);\r\n        setValueShopSelect(null);\r\n        refInputReqToWarehouseProducts.current.value = \"\";\r\n      });\r\n    } else {\r\n      dispatch({ type: \"WRONG_INPUT\" });\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpenModalReq(false);\r\n    dispatch({ type: \"CLOSE_MODAL\" });\r\n  };\r\n\r\n  const handlerReceived = (index: number) => {\r\n    Axios.post(dbUpdateReceivedState, infoDeliveryState[index]).then(\r\n      (response: AxiosResponse) => {\r\n        setInfoDeliveryState(response.data[0]);\r\n        setInfoActualInventory(response.data[1]);\r\n      }\r\n    );\r\n    setSwitchUseEffect(!switchUseEffect);\r\n  };\r\n\r\n  const query_post = async (url: string, payload: any) => {\r\n    try {\r\n      const response: AxiosResponse = await Axios.post(url, payload);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"There is an error\", err);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const request_betweenshops_handler = async () => {\r\n    let valueReferenceSelected: string = check_type_case(\r\n      value_reference_request,\r\n      \"referencia\"\r\n    );\r\n    let valueOriginShopSelected: string = check_type_case(\r\n      value_origin_shop,\r\n      \"idTienda\"\r\n    );\r\n    let valueDestinationShopSelected: string = check_type_case(\r\n      value_destination_shop,\r\n      \"idTienda\"\r\n    );\r\n    let isReferenceExist: boolean = false;\r\n    let isOShopExist: boolean = false; //Origin\r\n    let isDShopExist: boolean = false; //Destination\r\n    const correctAmount = parseFloat(amount_request);\r\n\r\n    // CHECK IN DATABASE ==> return boolean\r\n    isReferenceExist = await check_existing_value(0, valueReferenceSelected); // O: referencia\r\n    isOShopExist = await check_existing_value(1, valueOriginShopSelected); // 1: idTienda\r\n    isDShopExist = await check_existing_value(1, valueDestinationShopSelected); // 1: idTienda\r\n\r\n    let enableInput = valueReferenceSelected !== \"\" && isReferenceExist;\r\n    let enableInput2 = valueOriginShopSelected !== \"\" && isOShopExist;\r\n    let enableInput3 = valueDestinationShopSelected !== \"\" && isDShopExist;\r\n\r\n    if (\r\n      Number.isInteger(correctAmount) &&\r\n      correctAmount > 0 &&\r\n      enableInput &&\r\n      enableInput2 &&\r\n      enableInput3\r\n    ) {\r\n      const data = {\r\n        cantidad: amount_request,\r\n        referencia: valueReferenceSelected,\r\n        tienda_origen: valueOriginShopSelected,\r\n        tienda_destino: valueDestinationShopSelected,\r\n      };\r\n      const response: AxiosResponse[] = await query_post(\r\n        dbSaveNewShopRequest,\r\n        data\r\n      );\r\n      set_value_reference_request(null);\r\n      refInputBetweenShops.current.value = \"\";\r\n      set_value_origin_shop(null);\r\n      set_value_destination_shop(null);\r\n      setIsShopOriginSelected(false);\r\n      setSwitchUseEffect(!switchUseEffect);\r\n      dispatch({ type: \"SUCCESSFUL_REQUEST\" });\r\n    } else {\r\n      dispatch({ type: \"WRONG_INPUT\" });\r\n    }\r\n  };\r\n\r\n  const handler_required_stock = async (index: number) => {\r\n    const actualTarget = infoRequestsBetweenShops[index];\r\n    const response: AxiosResponse[] = await query_post(dbRequestBetweenShops, {\r\n      ...infoRequestsBetweenShops[index],\r\n    });\r\n    setAuxiliar([\r\n      actualTarget.cantidad,\r\n      actualTarget.tienda_destino,\r\n      actualTarget.numero_peticion,\r\n    ]);\r\n    setIndexModal(index);\r\n    if (response[0] !== undefined) {\r\n      const required_stock_size: number = response.length;\r\n      const amount_number: number = parseInt(actualTarget.cantidad);\r\n      if (required_stock_size < amount_number) {\r\n        setCheckReqNumber(2);\r\n        setStockMissingAmount(amount_number - required_stock_size);\r\n        setStockAvailableAmount(required_stock_size);\r\n        setRequiredStock(response);\r\n        setIsOpenModalReq(true);\r\n      } else {\r\n        setCheckReqNumber(1);\r\n        setRequiredStock(response);\r\n        setIsOpenModalReq(true);\r\n      }\r\n    } else {\r\n      setCheckReqNumber(3);\r\n      setIsOpenModalReq(true);\r\n    }\r\n  };\r\n\r\n  const handler_final_decision = async (id_decision: number) => {\r\n    if (id_decision === 1) {\r\n      // ACCEPT\r\n      const response_decision_state: AxiosResponse | undefined =\r\n        await query_post(dbDecisionBetweenShops, {\r\n          numeros_de_entrada: requiredStock,\r\n          data: {\r\n            tienda_destino: auxiliar[1],\r\n            numero_peticion: auxiliar[2],\r\n            id_decision,\r\n          },\r\n        });\r\n      setSwitchUseEffect(!switchUseEffect);\r\n    } else if (id_decision === 0) {\r\n      // REFUSE\r\n      const response_decision_state: AxiosResponse | undefined =\r\n        await query_post(dbDecisionBetweenShops, {\r\n          data: { numero_peticion: auxiliar[2], id_decision },\r\n        });\r\n      setSwitchUseEffect(!switchUseEffect);\r\n    } else if (id_decision === 2) {\r\n      // PARTIAL\r\n      const response_decision_state: AxiosResponse | undefined =\r\n        await query_post(dbDecisionBetweenShops, {\r\n          numeros_de_entrada: requiredStock,\r\n          data: {\r\n            tienda_destino: auxiliar[1],\r\n            numero_peticion: auxiliar[2],\r\n            id_decision,\r\n            envio_real: stockAvailableAmount,\r\n          },\r\n        });\r\n      setSwitchUseEffect(!switchUseEffect);\r\n    }\r\n  };\r\n\r\n  const handleDropdownChange = (val: any) => {\r\n    const nameShopSelected = JSON.stringify(val.nombre_tienda).replace(\r\n      /['\"]+/g,\r\n      \"\"\r\n    );\r\n    Axios.get(dbShopsInfoURL).then((response: AxiosResponse) => {\r\n      const shopsNames = response.data;\r\n      const shopsNamesFiltered = shopsNames.filter(\r\n        (shop: any) => shop.nombre_tienda !== nameShopSelected\r\n      );\r\n      setShopsDestination(shopsNamesFiltered);\r\n      set_value_destination_shop(null);\r\n      setIsShopOriginSelected(true);\r\n    });\r\n  };\r\n\r\n  const handleNavbarClick = (e: any) => {\r\n    e.preventDefault();\r\n    const target = e.target.getAttribute(\"href\");\r\n    const location = document.querySelector(target).offsetTop;\r\n    const scrollDiv = document.getElementById(\"scroll-shops\") as HTMLDivElement;\r\n\r\n    scrollDiv.scrollTo(0, location - 55);\r\n  };\r\n\r\n  const toggleTab = (index: number) => {\r\n    setToggleState(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"general-container-shops\">\r\n      <div className=\"navbar-shops\">\r\n        <h2 className=\"navbar-shops__h2\">Tiendas</h2>\r\n        <div className=\"navbar-shops-otpions\">\r\n          <div\r\n            className={\r\n              toggleState === 1 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\r\n            }\r\n            onClick={() => toggleTab(1)}\r\n          >\r\n            <a href=\"#shops-request-wp\" onClick={handleNavbarClick}>\r\n              Peticion a bodega productos\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 2 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\r\n            }\r\n            onClick={() => toggleTab(2)}\r\n          >\r\n            <a\r\n              href=\"#products-process-shops-section\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Inventario tiendas\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 3 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\r\n            }\r\n            onClick={() => toggleTab(3)}\r\n          >\r\n            <a href=\"#products-send-shops-section\" onClick={handleNavbarClick}>\r\n              Productos enviados\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 4 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\r\n            }\r\n            onClick={() => toggleTab(4)}\r\n          >\r\n            <a href=\"#reqs-between-shops-section\" onClick={handleNavbarClick}>\r\n              Petición entre tiendas\r\n            </a>\r\n          </div>\r\n          <div\r\n            className={\r\n              toggleState === 5 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\r\n            }\r\n            onClick={() => toggleTab(5)}\r\n          >\r\n            <a\r\n              href=\"#active-req-between-shops-section\"\r\n              onClick={handleNavbarClick}\r\n            >\r\n              Peticiones activas entre tiendas\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"scroll-shops-section\" id=\"scroll-shops\">\r\n        <div className=\"shops-request-wp\" id=\"shops-request-wp\">\r\n          <div className=\"makeReqShopsContainer\">\r\n            <h4>Enviar peticiones a Bodega Producto</h4>\r\n            <div className=\"makeReqShopsContainer__dropdownReference\">\r\n              <FilterDropdown\r\n                options={references}\r\n                id=\"referencia\"\r\n                label=\"referencia\"\r\n                prompt=\"Seleccionar referencia\"\r\n                value={valueReferenceSelect}\r\n                onChange={(val: any) => setValueReferenceSelect(val)}\r\n              />\r\n            </div>\r\n            <input\r\n              ref={refInputReqToWarehouseProducts}\r\n              id=\"makeReqShopsContainer__actualAmount\"\r\n              name=\"actualAmount\"\r\n              className=\"makeReqShopsContainer__actualAmount\"\r\n              placeholder=\"Digite la cantidad\"\r\n              type=\"number\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => {\r\n                setAmount(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"makeReqShopsContainer__dropdownShop\">\r\n              <FilterDropdown\r\n                options={shops}\r\n                id=\"idTienda\"\r\n                label=\"nombre_tienda\"\r\n                prompt=\"Seleccionar tienda\"\r\n                value={valueShopSelect}\r\n                onChange={(val: any) => setValueShopSelect(val)}\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"btn makeReqButtonContainer\"\r\n              type=\"button\"\r\n              onClick={productsRequest}\r\n            >\r\n              Enviar\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"information-shop-request-wp-container\">\r\n            <h2 className=\"information-shop-request-wp-container__h2\">\r\n              Enviar petición a Bodega Productos\r\n            </h2>\r\n            <p className=\"information-shop-request-wp-container__p\">\r\n              ¿Necesitas stock en alguna tienda? Entonces envía una petición a\r\n              Bodega Productos para enviar productos a una tienda en concreto.\r\n              Solo escoge la referencia del producto que necesitas, digita\r\n              cuantos deseas, selecciona la tienda de destino y preciona el\r\n              botón de enviar. Así de sencillo :)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"products-process-shops-section\"\r\n          id=\"products-process-shops-section\"\r\n        >\r\n          <h3 className=\"products-process-shops-section__h3\">\r\n            Inventario tiendas\r\n          </h3>\r\n          <p className=\"products-process-shops-section__p\">\r\n            En este apartado se encuentra el inventario de todas las tiendas.\r\n          </p>\r\n          <InfoShopsInventory\r\n            arrayInformation={infoActualInventory}\r\n            checkNumber={0}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"products-send-shops-section\"\r\n          id=\"products-send-shops-section\"\r\n        >\r\n          <h3 className=\"products-send-shops-section__h3\">\r\n            Productos en envio\r\n          </h3>\r\n          <p className=\"products-send-shops-section__p\">\r\n            Aquí se encuentran los productos que están en camino hacia una o\r\n            varias tiendas. Por favor, informe que ya ha llegado el pedido\r\n            presionando el botón 'Confirmar recibido'.\r\n          </p>\r\n          <InfoShopsInventory\r\n            arrayInformation={infoDeliveryState}\r\n            checkNumber={1}\r\n            receivedFunction={handlerReceived}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"reqs-between-shops-section\"\r\n          id=\"reqs-between-shops-section\"\r\n        >\r\n          <div className=\"reqs-between-shops\">\r\n            <h4>Enviar petición entre tiendas</h4>\r\n            <div className=\"reqs-between-shops__dropdownReference\">\r\n              <FilterDropdown\r\n                options={references}\r\n                id=\"referencia\"\r\n                label=\"referencia\"\r\n                prompt=\"Seleccionar referencia\"\r\n                value={value_reference_request}\r\n                onChange={(val: any) => set_value_reference_request(val)}\r\n              />\r\n            </div>\r\n            <input\r\n              ref={refInputBetweenShops}\r\n              id=\"reqs-between-shops__actualAmount\"\r\n              name=\"actualAmount\"\r\n              className=\"reqs-between-shops__actualAmount\"\r\n              placeholder=\"Digite la cantidad\"\r\n              type=\"number\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => {\r\n                set_amount_request(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"reqs-between-shops__dropdownShop\">\r\n              <FilterDropdown\r\n                options={shopsOrigin}\r\n                id=\"idTienda\"\r\n                label=\"nombre_tienda\"\r\n                prompt=\"Seleccionar la tienda origen\"\r\n                value={value_origin_shop}\r\n                onChange={(val: any) => {\r\n                  set_value_origin_shop(val);\r\n                  handleDropdownChange(val);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"reqs-between-shops__dropdownShop\">\r\n              {isShopOriginSelected ? (\r\n                <FilterDropdown\r\n                  options={shopsDestination}\r\n                  id=\"idTienda\"\r\n                  label=\"nombre_tienda\"\r\n                  prompt=\"Seleccionar la tienda de destino\"\r\n                  value={value_destination_shop}\r\n                  onChange={(val: any) => set_value_destination_shop(val)}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"reqs-between-shops-buttonContainer\">\r\n              <button\r\n                className=\"btn\"\r\n                type=\"button\"\r\n                onClick={request_betweenshops_handler}\r\n              >\r\n                Enviar\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"information-between-shops-container\">\r\n            <h2 className=\"information-between-shops-container__h2\">\r\n              Enviar petición entre tiendas\r\n            </h2>\r\n            <p className=\"information-between-shops-container__p\">\r\n              ¿Necesitas urgente un producto que solicita un cliente y está en\r\n              otra tienda? Entonces envía una petición entre tiendas. Solo\r\n              escoge la referencia del producto que necesitas, digita la\r\n              cantidad que requieres, escoge la tienda donde se encuentra el\r\n              producto, luego escoge la tienda de destino y presiona el botón\r\n              enviar. Así de fácil :)\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"active-req-between-shops-section\"\r\n          id=\"active-req-between-shops-section\"\r\n        >\r\n          <h3 className=\"active-req-between-shops-section__h3\">\r\n            Peticiones activas entre tiendas\r\n          </h3>\r\n          <p className=\"active-req-between-shops-section__p\">\r\n            En este apartado se encuentran la peticiones de las tiendas que han\r\n            solicitado productos de otras tiendas.\r\n          </p>\r\n          {infoRequestsBetweenShops.length == 0 && (\r\n            <>\r\n              <div className=\"no-data-image-shops-container\">\r\n                <img\r\n                  src={noDataImage}\r\n                  alt=\"no-data\"\r\n                  className=\"no-data-image-shops-container__img\"\r\n                />\r\n              </div>\r\n              <p className=\"no-data-image-shops-paragraph\">\r\n                Aún no hay peticiones\r\n              </p>\r\n            </>\r\n          )}\r\n          {infoRequestsBetweenShops.length !== 0 && (\r\n            <div className=\"activeRequestBetweenShopsContainer\">\r\n              {infoRequestsBetweenShops.map((shop: any, index: any) => {\r\n                return (\r\n                  <div className=\"activeRequestBetweenShopsCard\">\r\n                    <h4 className=\"activeRequestBetweenShopsCard__h4\">\r\n                      Información de la petición\r\n                    </h4>\r\n                    <div className=\"activeRequestBetweenShopsCard__order\">\r\n                      # de petición: {shop.numero_peticion}\r\n                    </div>\r\n                    <div className=\"activeRequestBetweenShopsCard__reference\">\r\n                      Referencia: {shop.referencia}\r\n                    </div>\r\n                    <div className=\"activeRequestBetweenShopsCard__amount\">\r\n                      Cantidad: {shop.cantidad}\r\n                    </div>\r\n                    <div className=\"activeRequestBetweenShopsCard__shop\">\r\n                      Tienda Origen: {shop.tienda_origen_nombre}\r\n                    </div>\r\n                    <div className=\"activeRequestBetweenShopsCard__shop\">\r\n                      Tienda Destino: {shop.tienda_destino_nombre}\r\n                    </div>\r\n                    <div className=\"activeRequestBetweenShopsCard__date\">\r\n                      Fecha: {shop.timestamp.replace(\"T\", \" \").slice(0, 16)}\r\n                    </div>\r\n                    <button\r\n                      className=\"btn activeRequestBetweenShopsCard__deploy\"\r\n                      key={index}\r\n                      data-index={index}\r\n                      onClick={() => handler_required_stock(index)}\r\n                    >\r\n                      Desplegar requerimientos\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\r\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\r\n        {state.imgCheckNumber === 1 && (\r\n          <img\r\n            className=\"modalWarehouseImg\"\r\n            src={completeImage}\r\n            alt=\"modalImg\"\r\n          />\r\n        )}\r\n        {state.imgCheckNumber === 2 && (\r\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\r\n        )}\r\n      </Modal>\r\n      {isOpenModalReq && (\r\n        <ModalShopsReq\r\n          isOpen={true}\r\n          closeModal={closeModal}\r\n          checkReqNumber={checkReqNumber}\r\n          indexReq={indexModal}\r\n          handleDecision={handler_final_decision}\r\n          stockMissingAmount={stockMissingAmount}\r\n          stockAvailableAmount={stockAvailableAmount}\r\n          requiredStock={requiredStock}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shops;\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nfunction LoginRedirect({\r\n  isAuth: isAuth,\r\n  component: Component,\r\n  enable: enable,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props: any) => {\r\n          if (!isAuth) {\r\n            return <Component />;\r\n          } else {\r\n            return (\r\n              <Redirect to={{pathname: '/', state: {from: props.location}}} />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginRedirect;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n\r\n  return (<>\r\n\r\n    <h1>Error</h1>\r\n\r\n  </>);\r\n};\r\n\r\n export default Error;\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({isAuth: isAuth, component: Component, ...rest}: any) {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={(props: any) => {\r\n          if (isAuth) {\r\n            return <Component />;\r\n          } else {\r\n            return (\r\n              <Redirect\r\n                to={{pathname: '/login', state: {from: props.location}}}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport DressMaking from '../pages/DressMaking';\r\nimport WareHouse from '../pages/WareHouse';\r\nimport Diseño from '../pages/Design';\r\nimport Register from '../pages/Register';\r\nimport Error from '../pages/Error';\r\nimport Logout from '../pages/Logout';\r\nimport WareHouseProducts from '../pages/WareHouseProducts';\r\nimport Shops from '../pages/Shops';\r\n\r\nimport ProtectedRoute from './app/ProtectedRoute';\r\n\r\nconst Routes = ({rol, isAuth, enableRoutes}: any) => {\r\n  if (enableRoutes) {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          {rol.idRol === 1 && (\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/register\"\r\n              component={Register}\r\n              isAuth={isAuth}\r\n            />\r\n          )}\r\n          <ProtectedRoute exact path=\"/\" component={Home} isAuth={isAuth} />\r\n          <Route exact path=\"/dressmaking\" component={DressMaking} />\r\n          <ProtectedRoute\r\n            path=\"/warehouse\"\r\n            component={WareHouse}\r\n            isAuth={isAuth}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/diseño\"\r\n            component={Diseño}\r\n            isAuth={isAuth}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/logout\"\r\n            component={Logout}\r\n            isAuth={isAuth}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/warehouseproducts\"\r\n            component={WareHouseProducts}\r\n            isAuth={isAuth}\r\n          />\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/shops\"\r\n            component={Shops}\r\n            isAuth={isAuth}\r\n          />\r\n          <Route path=\"*\" component={Error} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default Routes;\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport {myContext} from './components/Context';\r\n\r\n//PAGES:\r\nimport Login from './pages/Login';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport DressMaking from './pages/DressMaking';\r\nimport WareHouse from './pages/WareHouse';\r\nimport Diseño from './pages/Design';\r\nimport Register from './pages/Register';\r\nimport Error from './pages/Error';\r\nimport Logout from './pages/Logout';\r\nimport WareHouseProducts from './pages/WareHouseProducts';\r\nimport Shops from './pages/Shops';\r\n\r\n//PERSONAL MODULES:\r\nimport LoginRedirect from './components/login/LoginRedirect';\r\nimport Routes from './components/RoutesComponent';\r\nimport {baseURL} from './components/app/baseURL';\r\nimport ProtectedRoute from './components/app/ProtectedRoute';\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nconst App = () => {\r\n  const [isAuth, setIsAuth] = useState<Boolean>(false);\r\n  const [enable, setEnable] = useState<Boolean>(false);\r\n  const [enableRoutes, setEnableRoutes] = useState<Boolean>(false);\r\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\r\n  const ctx = useContext(myContext);\r\n  let rol = {\r\n    idRol: 0,\r\n  };\r\n\r\n  if (ctx) {\r\n    rol = {\r\n      idRol: ctx.idRol,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(isAuthAPIURL)\r\n      .then((response) => {\r\n        const userInfo: any = response.data;\r\n        if (userInfo) {\r\n          setIsAuth(true);\r\n          setEnable(true);\r\n        } else {\r\n          setIsAuth(false);\r\n          setEnable(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [isAuth]);\r\n\r\n  useEffect(() => {}, [enableRoutes]);\r\n\r\n  const switchActive = () => {\r\n    setEnableRoutes(true);\r\n  };\r\n\r\n  if (enable) {\r\n    return (\r\n      <Router>\r\n        <div className=\"maxDiv-Control-App\">\r\n          <Navbar switchActive={switchActive} />\r\n          <div className=\"maxDiv-Control-App__Routes\">\r\n            <Routes rol={rol} isAuth={isAuth} enableRoutes={enableRoutes} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n  return (\r\n    <Router>\r\n      <switch>\r\n        <LoginRedirect\r\n          path=\"/login\"\r\n          component={Login}\r\n          isAuth={isAuth}\r\n          enable={enable}\r\n        />\r\n        <ProtectedRoute exact path=\"/\" component={Home} isAuth={isAuth} />\r\n        <ProtectedRoute exact path=\"/dressmaking\" component={DressMaking} />\r\n        <ProtectedRoute\r\n          path=\"/warehouse\"\r\n          component={WareHouse}\r\n          isAuth={isAuth}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/diseño\"\r\n          component={Diseño}\r\n          isAuth={isAuth}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/logout\"\r\n          component={Logout}\r\n          isAuth={isAuth}\r\n        />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/warehouseproducts\"\r\n          component={WareHouseProducts}\r\n          isAuth={isAuth}\r\n        />\r\n        <ProtectedRoute exact path=\"/shops\" component={Shops} isAuth={isAuth} />\r\n        <ProtectedRoute\r\n          exact\r\n          path=\"/register\"\r\n          component={Register}\r\n          isAuth={isAuth}\r\n        />\r\n      </switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Context from './components/Context';\r\n\r\nReactDOM.render(\r\n  <Context>\r\n    <App />\r\n  </Context>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/Not Found.78ed35cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Loading.0d06e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Securelogin.647d91f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/shop.723592c7.png\";","module.exports = __webpack_public_path__ + \"static/media/notify.0ada35db.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.68e633cb.svg\";"],"sourceRoot":""}