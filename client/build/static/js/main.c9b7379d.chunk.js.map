{"version":3,"sources":["assets/error.svg","assets/complete.svg","assets/no-data.svg","components/app/baseURL.tsx","components/Context.tsx","components/Modal.tsx","components/login/ReducerLogin.tsx","pages/Login.tsx","components/Navbar.tsx","components/home/tiendasData.tsx","pages/Home.tsx","components/dressmaking/SuccessfulModalDressMaking.tsx","components/dressmaking/ReducerDressMaking.tsx","components/dressmaking/ModalAreYouSureDressmaking.tsx","components/FilterDropdown.tsx","pages/DressMaking.tsx","components/warehouse/ModalInventoryWareHouse.tsx","components/warehouse/ModalinsufficientSupplies.tsx","components/warehouse/ModalDecisionSupplies.tsx","components/warehouse/ReducerWarehouse.tsx","pages/WareHouse.tsx","components/design/ReducerDesign.tsx","components/design/ModalInformationDesign.tsx","components/design/ModalDesignInventory.tsx","components/design/ModalDesign.tsx","components/design/ModalDesignAddSupplies.tsx","pages/Design.tsx","components/register/ReducerRegister.tsx","pages/Register.tsx","pages/Logout.tsx","components/warehouseProducts/ModalWarehouseProductsReq.tsx","pages/WareHouseProducts.tsx","components/shops/InfoShopsInventory.tsx","components/shops/ModalShopsReq.tsx","pages/Shops.tsx","components/login/LoginRedirect.tsx","pages/Error.tsx","components/app/ProtectedRoute.tsx","components/RoutesComponent.tsx","App.tsx","index.tsx","assets/Not Found.svg","assets/Loading.svg","assets/Securelogin.svg","assets/shop.png","assets/notify.svg","assets/register.svg"],"names":["module","exports","__webpack_require__","p","baseURL","myContext","createContext","Context","props","_useState","useState","_useState2","Object","slicedToArray","user","setUser","isAuthAPIURL","useEffect","Axios","get","then","response","data","react_default","a","createElement","Provider","value","children","modalID","document","getElementById","Modal","isOpen","ReactDOM","createPortal","className","onClick","console","log","closeModal","reducer","state","action","type","objectSpread","isModalOpen","modalContent","Error","defaultState","Login","username","setUsername","_useState3","_useState4","password","setPassword","_useReducer","useReducer","_useReducer2","dispatch","loginAPIURL","name","placeholder","id","autoComplete","onChange","e","target","preventDefault","post","usernameInput","passwordInput","window","location","href","components_Modal","src","errorImage","alt","loginIMG","NavbarContainer","Navbar_Brand","Navbar_NavbarOption","classIcon","title","url","Navbar_UserSection","Brand","NavbarOption","react_router_dom","exact","to","activeClassName","UserSection","withRouter","_ref","switchActive","enable","setEnable","userInfo","Navbar_NavbarContainer","Fragment","tiendasData","latitude","longitude","isShopClicked","setIsShopClicked","infoShopClicked","setInfoShopClicked","_useState5","_useState6","startDate","setStartDate","_useState7","_useState8","endDate","setEndDate","_useState9","_useState10","dataDatesFilter","setDataDatesFilter","_useState11","_useState12","setIsModalOpen","_useState13","_useState14","setModalContent","_useState15","_useState16","percentageSales","setPercentageSales","dashboardPieUrl","dashboardDateFilterURL","mes","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","map","tienda","Marker","key","position","icon","L","iconUrl","iconShopImg","iconSize","eventHandlers","click","startDateRef","endDateRef","react_select_esm","options","monthsData","optionSelected","monthValue","index_esm","width","height","chartType","loader","is3D","rootProps","data-testid","loadingImg","react_datepicker_min_default","selected","date","selectsStart","dateFormat","placeholderText","selectsEnd","minDate","fecha_inicial","fecha_final","idTienda","length","chart","notifyImg","NotSuccessfulRequest","codigo","descripcion","metros","remainingAmount","nombre_imagen","SuccessfulModalDressMaking","checkNumber","setTimeout","SuccessfulModalDressMaking_NotSuccessfulRequest","warningMissingSupplies","payload","isInsufficientModalOpen","imgCheckNumber","idModalAreYouSureDressmaking","ModalAreYouSureDressmaking","handleClose","subAmountFunction","Dropdown","label","prompt","open","setOpen","inputOpen","query","setQuery","ref","useRef","addEventListener","close","removeEventListener","current","prev","concat","filter","option","toString","toLowerCase","indexOf","DressMaking","references","setReferences","amount","setAmount","approvedRequests","setApprovedRequests","requestsHistory","setRequestsHistory","refContainer","isOpenARYModal","setIsOpenARYModal","infoProcess","setInfoProcess","_useState17","_useState18","valueReferenceSelect","setValueReferenceSelect","_useState19","_useState20","toggleState","setToggleState","dbReferencesURL","dbWareHouseRequest","dbApprovedRequests","dbUpdateDressMakingProcess","dbRequestHistoryDressmaking","handleNavbarClick","getAttribute","querySelector","offsetTop","scrollTo","toggleTab","index","components_FilterDropdown","val","ReferenceSelected","isReferenceExist","correctAmount","parseFloat","referencia","enableInput","Number","isInteger","actualAmount","referenceSelection","noDataImage","item","cantidad","timestamp","replace","slice","numero_de_orden","HTMLElement","valueInput","reference","verificationARYModal","request","decision","dressmaking_SuccessfulModalDressMaking","completeImage","dressmaking_ModalAreYouSureDressmaking","diff","ModalInvetoryBodega","searchTerm","setSearchTerm","iterator","enableEmpty","showEmptySearch","handlerSearch","includes","notFoundImage","insufficientSuppliesID","ModalinsufficientSupplies","arrayNoSupplies","handlerReject","infoRequest","idModalDecisionSupplies","ModalDecisionSupplies","informationSuppliesURL","informationSupplies","setInformationSupplies","color","handlerAccept","modalFormContent","isFormModalOpen","modalUpdateContent","isModalUpdateOpen","isOpenNoSupplies","isModalSuppliesOpen","code","setCode","setColor","description","setDescription","img","setImg","queryData","setQueryData","updateAmount","setUpdateAmount","dressMakingReq","setDressMakingReq","_useState21","_useState22","suppliesData","setSuppliesData","_useState23","_useState24","_useState25","_useState26","setInfoRequest","_useState27","_useState28","isOpenDecision","setIsOpenDecision","_useState29","_useState30","valueCode","setValueCode","_useState31","_useState32","valueSupplieDropdown","setValueSupplieDropdown","_useState33","_useState34","_useState35","_useState36","switchUseEffect","setSwitchUseEffect","saveClothAPIURL","invetoryBodegaAPIURL","invetoryWareHouseAPIURL","updateInventoryWareHouseURL","getDressMakingRequest","dbSuppliesURL","dbSaveDecision","catch","error","handlerRefuse","idDecision","filterResult","tpye","supplieSelected","newCloth","parseInt","codigoInput","colorInput","amountInput","descripcionInput","imgInput","warehouse_ModalInventoryWareHouse","codeSelected","isCodeExist","inputUpdateAmount","enableAmount","payloadUpdate","req","checkAccept","handlerDecision","warehouse_ModalinsufficientSupplies","warehouse_ModalDecisionSupplies","sampleInventory","isInventoryModalOpen","modalInventoryContent","informationModalID","ModalInformationDesign","referenceArray","consumptionAmount","ModalDesignInventory","referenceNumber","setReferenceNumber","setReferenceArray","getreferenceconsumptionURL","talla","valor_unidad","handlerInfoModal","design_ModalInformationDesign","ModalDesign","addSuppliesID","ModalDesignAddSupplies","valueSelect","setValueSelect","dBWareHouseSupplies","setdBWareHouseSupplies","addedInformation","setAddedInformation","dbWareHouseCodesURL","inputAmount","setInputAmount","valueSelectComp","inputSelectIterator","inputSelectAddedInfo","style","amountHTML","supplyCode","enableSelector","informationObject","supplyAmount","toConsumableArray","design_ModalDesign","newAddedInformation","removeItem","suppliesFromDesign","dbSaveNewReference","productionAPIURL","switchReRender","setSwitchReRender","isModalDesignOpen","setIsModalDesignOpen","addReference","setAddReference","addDescription","setAddDescription","addColor","setAddColor","addImageName","setAddImageName","addValuePerUnit","setAddValuePerUnit","valueSizeSelect","setValueSizeSelect","sizesArray","addSize","addedInformationFromModal","setAddedInformationFromModal","modalAddSupplies","setModalAddSupplies","setEmptyValues","addReferenceOption","addDescriptionOption","addColorOption","addImageNameOption","requestPayload","valuePerUnit","design_ModalDesignInventory","design_ModalDesignAddSupplies","msg","Register","passwordForm","setPasswordForm","validatePasswordForm","setValidatePasswordForm","idRol","setIdRol","postRegisterURL","validatePasswordInput","idRolInput","newUser","validationUsername","registerImg","logoutAPIURL","err","IDWarehouseProductsReq","ModalWarehouseProductsReq","checkReqNumber","infoReq","info","numero_lote","handlerPartialDelivery","errorIMG","WareHouseProducts","wareHouseProducts","setWareHouseProducts","wareHouseProducts_record","setWareHouseProducts_record","shopRequestInfo","setShopRequestInfo","actualShopRequests","setActualShopRequest","isOpenModalReq","setIsOpenModalReq","setCheckReqNumber","indexModal","setIndexModal","switch_actual_shop_request","set_switch_actual_shop_request","dbWareHouseProducts","dbWareHouseProducts_record","dbShopsRequestProducts","dbActualShopsRequests","dbPartialDelivery","shop","nombre_tienda","direccion","data-index","faltante","handlerShowInfo","warehouseProducts_ModalWarehouseProductsReq","neededStock","InfoShopsInventory","handleSearch","handlerReceived","receivedFunction","arrayInformation","cantidadTotal","modalShopsReqId","ModalShopsReq","requiredStock","requiredStockOrdered","setRequiredStockOrdered","handleDecision","decisionNumber","stockMissingAmount","stockAvailableAmount","Shops","shops","setShops","shopsOrigin","setShopsOrigin","shopsDestination","setShopsDestination","valueShopSelect","setValueShopSelect","infoDeliveryState","setInfoDeliveryState","infoActualInventory","setInfoActualInventory","setRequiredStock","infoRequestsBetweenShops","setInfoRequestsBetweenShops","isShopOriginSelected","setIsShopOriginSelected","_useState37","_useState38","_useState39","_useState40","setStockMissingAmount","_useState41","_useState42","setStockAvailableAmount","_useState43","_useState44","auxiliar","setAuxiliar","refInputBetweenShops","refInputReqToWarehouseProducts","_useState45","_useState46","_useState47","_useState48","value_reference_request","set_value_reference_request","_useState49","_useState50","amount_request","set_amount_request","_useState51","_useState52","value_origin_shop","set_value_origin_shop","_useState53","_useState54","value_destination_shop","set_value_destination_shop","_useState55","_useState56","dbShopsInfoURL","dbProductsRequestURL","dbDeliveryState","dbActualInventory","dbActualRequestsBetweenShops","dbUpdateReceivedState","dbRequestBetweenShops","dbDecisionBetweenShops","dbSaveNewShopRequest","check_existing_value","asyncToGenerator","regenerator_default","mark","_callee","check_case","wrap","_context","next","sent","abrupt","t0","stop","_x","_x2","apply","this","arguments","check_type_case","case_parameter","case_attribute","result","productsRequest","_ref2","_callee2","valueReferenceSelected","valueShopSelected","isShopExist","enableInput2","_context2","idShop","query_post","_ref3","_callee3","_context3","_x3","_x4","request_betweenshops_handler","_ref4","_callee4","valueOriginShopSelected","valueDestinationShopSelected","isOShopExist","isDShopExist","enableInput3","_context4","tienda_origen","tienda_destino","handler_required_stock","_ref5","_callee5","actualTarget","required_stock_size","amount_number","_context5","numero_peticion","undefined","_x5","handler_final_decision","_ref6","_callee6","id_decision","_context6","numeros_de_entrada","envio_real","_x6","shops_InfoShopsInventory","nameShopSelected","JSON","stringify","shopsNamesFiltered","handleDropdownChange","tienda_origen_nombre","tienda_destino_nombre","shops_ModalShopsReq","indexReq","LoginRedirect","isAuth","Component","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","ProtectedRoute","Routes","rol","enableRoutes","app_ProtectedRoute","path","Home","WareHouse","Diseño","Logout","defaults","withCredentials","App","setIsAuth","setEnableRoutes","ctx","useContext","components_Navbar","RoutesComponent","login_LoginRedirect","components_Context","src_App"],"mappings":"kHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oKCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qcCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sKCI3BC,EAAkB,gCCQlBC,EAAYC,wBAAmB,IAe7BC,MAdf,SAAiBC,GAA+B,IAAAC,EACtBC,qBADsBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvCK,EADuCH,EAAA,GACjCI,EADiCJ,EAAA,GAExCK,EAAuBZ,EAAU,aASvC,OAPAa,oBAAU,WACRC,IAAMC,IAAIH,GACPI,KAAK,SAACC,GACLN,EAAQM,EAASC,SAEpB,IAEIC,EAAAC,EAAAC,cAACpB,EAAUqB,SAAX,CAAoBC,MAAOb,GAAON,EAAMoB,qCCnB3CC,UAAeC,SAASC,eAAe,UAuB9BC,EArBD,SAACxB,GAKb,OAAKA,EAAMyB,OAGJC,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BACbb,EAAAC,EAAAC,cAAA,UAAQY,QAVM,WAClBC,QAAQC,IAAI,gBACZ/B,EAAMgC,cAQ4BJ,UAAU,gCAAxC,KAGC5B,EAAMoB,WAGXC,GAXO,8BCJEY,EAAU,SAACC,EAAeC,GACrC,GAAoB,iCAAhBA,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbC,aAAc,8CAIlB,GAAoB,eAAhBJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbC,aAAc,oDAIlB,GAAoB,gBAAhBJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAI8B,EAAX,CAAkBI,aAAa,IAEjC,MAAM,IAAIE,MAAM,4BCNZC,EAA8B,CAClCH,aAAa,EACbC,aAAc,IA+EDG,EA5ED,WAAM,IAAAzC,EACcC,mBAAiB,IAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACX0C,EADWxC,EAAA,GACDyC,EADCzC,EAAA,GAAA0C,EAEc3C,mBAAiB,IAF/B4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAEXE,EAFWD,EAAA,GAEDE,EAFCF,EAAA,GAAAG,EAGQC,qBAAWjB,EAASQ,GAH5BU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAGXf,EAHWiB,EAAA,GAGJC,EAHID,EAAA,GAIZE,EAAsBzD,EAAU,YAkCtC,OACEmB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,cACdb,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACfb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLkB,KAAK,WACLC,YAAY,UACZC,GAAG,WACHC,aAAa,MACbC,SAAU,SAACC,GAAD,OAAYf,EAAYe,EAAEC,OAAOzC,UAE7CJ,EAAAC,EAAAC,cAAA,SACEmB,KAAK,WACLkB,KAAK,WACLC,YAAY,gBACZE,aAAa,MACbD,GAAG,WACHE,SAAU,SAACC,GAAD,OAAYX,EAAYW,EAAEC,OAAOzC,UAE7CJ,EAAAC,EAAAC,cAAA,UAAQY,QArDO,SAAC8B,GACpBA,EAAEE,iBACElB,GAAYI,EACdrC,IAAMoD,KAAKT,EAAa,CACtBV,WACAI,aAECnC,KAAK,SAACC,GAEL,GAAe,UADQA,EAASC,KACR,CACtBsC,EAAS,CAAChB,KAAM,eAChB,IAAM2B,EAAgBzC,SAASC,eAC7B,YAEIyC,EAAgB1C,SAASC,eAC7B,YAEFwC,EAAc5C,MAAQ,GACtB6C,EAAc7C,MAAQ,QAEtB8C,OAAOC,SAASC,KAAO,MAI7Bf,EAAS,CAAChB,KAAM,kCA6BiBR,UAAU,OAAzC,sBAIDM,EAAMI,aACLvB,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQS,EAAMI,YAAaN,WA9BrB,WACjBoB,EAAS,CAAChB,KAAM,kBA8BVrB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,gBAAgBM,EAAMK,cACpCxB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBAAgByC,IAAKC,IAAYC,IAAI,cAGxDxD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,OAAKoD,IAAKG,IAAUD,IAAI,8BCjEhC,IAAME,EAAkB,SAACzE,GACvB,OACEe,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAcC,UAAU,WAAWC,MAAM,YAAYC,IAAI,MACzD/D,EAAAC,EAAAC,cAAC0D,EAAD,CAAcC,UAAU,SAASC,MAAM,mBAAgBC,IAAI,eAC3D/D,EAAAC,EAAAC,cAAC0D,EAAD,CAAcC,UAAU,SAASC,MAAM,gBAAgBC,IAAI,eAC3D/D,EAAAC,EAAAC,cAAC0D,EAAD,CACEC,UAAU,uBACVC,MAAM,gBACNC,IAAI,iBAEN/D,EAAAC,EAAAC,cAAC0D,EAAD,CACEC,UAAU,YACVC,MAAM,kBACNC,IAAI,uBAEN/D,EAAAC,EAAAC,cAAC0D,EAAD,CAAcC,UAAU,cAAcC,MAAM,UAAUC,IAAI,WAC1D/D,EAAAC,EAAAC,cAAC0D,EAAD,CAAcC,UAAU,WAAWC,MAAM,YAAYC,IAAI,cACzD/D,EAAAC,EAAAC,cAAC0D,EAAD,CACEC,UAAU,aACVC,MAAM,gBACNC,IAAI,YAEN/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAazE,KAAMN,EAAMM,SAKzB0E,EAAQ,WACZ,OACEjE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,aAEfb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAd,YAWAqD,EAAe,SAACjF,GAAyB,IACtC4E,EAAyB5E,EAAzB4E,UAAWC,EAAc7E,EAAd6E,MAAOC,EAAO9E,EAAP8E,IACzB,OACE/D,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEC,OAAK,EACLC,GAAIN,EACJlD,UAAU,sBACVyD,gBAAgB,yBAEhBtE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAWgD,KAEhB7D,EAAAC,EAAAC,cAAA,MAAIW,UAAU,qBAAqBiD,MAMrCS,EAAc,SAACtF,GACnB,OACEe,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACXb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,aAEjBb,EAAAC,EAAAC,cAAA,UAAKjB,EAAMM,QAKFiF,cAtGf,SAAAC,GAAqC,IAApBC,EAAoBD,EAApBC,aAAoBxF,EACPC,oBAAkB,GADXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5ByF,EAD4BvF,EAAA,GACpBwF,EADoBxF,EAAA,GAAA0C,EAEX3C,mBAAiB,IAFN4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAE5BvC,EAF4BwC,EAAA,GAEtBvC,EAFsBuC,EAAA,GAG7BtC,EAAuBZ,EAAU,aAWvC,OATAa,oBAAU,WACRC,IAAMC,IAAIH,GACPI,KAAK,SAACC,GACL,IAAM+E,EAAgB/E,EAASC,KAC/BP,EAAQqF,EAAStF,MACjBqF,GAAU,MAEb,CAACD,IAEAA,GACFD,IAEE1E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAC4E,EAAD,CAAiBvF,KAAMA,MAKtBS,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,gKCvBIC,UAA0B,CACrC,CACEvC,GAAI,EACJF,KAAM,aACN0C,SAAU,mBACVC,WAAY,mBAEd,CACEzC,GAAI,EACJF,KAAM,eACN0C,SAAU,mBACVC,WAAY,qBCiPDV,cA9OF,WAAM,IAAAtF,EACyBC,oBAAkB,GAD3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACViG,EADU/F,EAAA,GACKgG,EADLhG,EAAA,GAAA0C,EAE6B3C,mBAAS,CAAEsD,GAAI,GAAIF,KAAM,KAFtDR,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAEVuD,EAFUtD,EAAA,GAEOuD,EAFPvD,EAAA,GAAAwD,EAGiBpG,mBAAS,MAH1BqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAGVE,EAHUD,EAAA,GAGCE,EAHDF,EAAA,GAAAG,EAIaxG,mBAAS,MAJtByG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAIVE,EAJUD,EAAA,GAIDE,EAJCF,EAAA,GAAAG,EAK6B5G,mBAAS,IALtC6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAKVE,EALUD,EAAA,GAKOE,EALPF,EAAA,GAAAG,EAMqBhH,oBAAkB,GANvCiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAMV5E,EANU6E,EAAA,GAMGC,EANHD,EAAA,GAAAE,EAOuBnH,mBAAiB,IAPxCoH,EAAAlH,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,GAOV9E,EAPU+E,EAAA,GAOIC,EAPJD,EAAA,GAAAE,EAQ6BtH,mBAAS,CAAC,CAAC,OAAQ,YARhDuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAQVE,EARUD,EAAA,GAQOE,EARPF,EAAA,GASXG,EAA0BhI,EAAU,oBACpCiI,EAAiCjI,EAAU,4BAEjDa,oBAAU,WACRC,IAAMoD,KAAK8D,EAAiB,CAC1BE,IAAK,OACJlH,KAAK,SAACC,GACP8G,EAAmB9G,EAASC,SAE7B,IAoDH,OACEC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mBAAd,cAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sLAKAF,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACEC,OAAQ,CAAC,WAAY,WACrBC,KAAM,GACNC,iBAAiB,GAEjBnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,YAAY,yEACZtD,IAAI,uDAELiB,EAAYsC,IAAI,SAACC,GAAD,OACfvH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACEC,IAAKF,EAAO9E,GACZiF,SAAU,CAACH,EAAOtC,SAAUsC,EAAOrC,WACnCyC,KA3ELC,IAAED,KAAK,CACZE,QAASC,IACTC,SAAU,CAAC,GAAI,MA0ELC,cAAe,CACbC,MAAO,WACL3C,EAAmBiC,GACnBrB,EAAmB,IACnBd,GAAiB,GACjB,IAAM8C,EAAe3H,SAASC,eAC5B,qBAEI2H,EAAa5H,SAASC,eAC1B,mBAEF0H,EAAa9H,MAAQ,GACrB+H,EAAW/H,MAAQ,WAO/BJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBACbb,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,kIAIAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACEC,QAASC,EACT9F,YAAY,kBACZ3B,UAAU,iCACV8B,SArGO,SAAC4F,GACpB,IAAMC,EAAaD,EAAenI,MAClCT,IAAMoD,KAAK8D,EAAiB,CAC1BE,IAAKyB,IACJ3I,KAAK,SAACC,GACP8G,EAAmB9G,EAASC,YAmGtBC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CACEC,MAAO,OACPC,OAAQ,OACRC,UAAU,WACVC,OAAQ7I,EAAAC,EAAAC,cAAA,4BACRH,KAAM4G,EACN0B,QAAS,CACPvE,MAAO,eACPgF,MAAM,GAERC,UAAW,CAAEC,cAAe,SAIlChJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACXsE,GACAnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,wLAKAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,OAAKoD,IAAK2F,IAAYzF,IAAI,cAI/B2B,GACCnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,0BAAkBmF,EAAgB9C,MAClCvC,EAAAC,EAAAC,cAAA,wDAC+C,IAC5CmF,EAAgB9C,KAFnB,0DAKAvC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAACgJ,EAAAjJ,EAAD,CACEkJ,SAAU1D,EACV9C,SAAU,SAACyG,GACT1D,EAAa0D,IAEfC,cAAY,EACZ5D,UAAWA,EACXI,QAASA,EACTyD,WAAW,aACXC,gBAAgB,8BAChB1I,UAAU,oBACV4B,GAAG,sBAELzC,EAAAC,EAAAC,cAACgJ,EAAAjJ,EAAD,CACEkJ,SAAUtD,EACVlD,SAAU,SAACyG,GAAD,OAAetD,EAAWsD,IACpCI,YAAU,EACV/D,UAAWA,EACXI,QAASA,EACT4D,QAAShE,EACT6D,WAAW,aACXC,gBAAgB,4BAChB1I,UAAU,kBACV4B,GAAG,oBAELzC,EAAAC,EAAAC,cAAA,UACEW,UAAU,MACV4B,GAAG,gBACH3B,QAjKG,WACnB,IAAMoH,EAAe3H,SAASC,eAC5B,qBAEI2H,EAAa5H,SAASC,eAC1B,mBAGyB,KAAvB0H,EAAa9H,OAAqC,KAArB+H,EAAW/H,MAC1CT,IAAMoD,KAAK+D,EAAwB,CACjC4C,cAAexB,EAAa9H,MAC5BuJ,YAAaxB,EAAW/H,MACxBwJ,SAAUvE,EAAgB5C,KACzB5C,KAAK,SAACC,GACWA,EAASC,KACb8J,OAAS,EACrB3D,EAAmBpG,EAASC,OAE5BmG,EAAmB,IACnBM,EAAgB,uCAChBH,GAAe,OAInBG,EAAgB,qCAChBH,GAAe,MAqIH,sBAQ0B,IAA3BJ,EAAgB4D,QACf7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,OAAKoD,IAAK2F,IAAYzF,IAAI,aAGF,IAA3ByC,EAAgB4D,QACf7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CACEC,MAAO,QACPC,OAAQ,QACRC,UAAU,MACVC,OAAQ7I,EAAAC,EAAAC,cAAA,4BACRH,KAAMkG,EACNoC,QAAS,CACPyB,MAAO,CACLhG,MACE,qDAGNiF,UAAW,CAAEC,cAAe,YAS5ChJ,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQa,EAAaN,WArKb,WACjBoF,GAAe,GACfG,EAAgB,MAoKZxG,EAAAC,EAAAC,cAAA,MAAIW,UAAU,aAAaW,GAC3BxB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eAAeyC,IAAKyG,IAAWvG,IAAI,iBChOpDwG,UAAuB,SAACxI,GAQ5B,OACExB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBAAf,uBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBAAf,UACCW,EAAaA,aAAa8F,IAAI,SAACrI,GAC9B,OACEe,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBAAkB4G,IAAKxI,EAAMgL,QAC1CjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,SAAmC5B,EAAMgL,QACzCjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,mBACgB5B,EAAMiL,aAEtBlK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,gBAA0C5B,EAAMkL,QAChDnK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,cACc5B,EAAMmL,kBAGtBpK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YAAYyC,IAAKrE,EAAMoL,yBAWzCC,EAtDoB,SAAA7F,GAIxB,IAHTjD,EAGSiD,EAHTjD,aAEAP,GACSwD,EAFT8F,YAES9F,EADTxD,YAQA,OANAvB,oBAAU,WACR8K,WAAW,WACTvJ,KACC,OAGEjB,EAAAC,EAAAC,cAACuK,EAAD,CAAsBjJ,aAAcA,KC1BhCN,EAAU,SAACC,EAAYC,GAClC,GAAoB,0BAAhBA,EAAOC,KAAkC,CAC3C,IAAMqJ,EAAyBtJ,EAAOuJ,QACtC,OAAOtL,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAckJ,EACdE,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,IAGpB,MAAoB,uBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,mCACfD,aAAa,EACbqJ,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,IAGA,gBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,gDACfD,aAAa,EACbqJ,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,IAGA,wBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,gDACfD,aAAa,EACbqJ,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,IAGA,kBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CACZ,sEAEFD,aAAa,EACbqJ,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,IAIA,6BAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,qCACfD,aAAa,EACbqJ,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,IAIA,gBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbqJ,yBAAyB,EACzBC,eAAgB,IAIbxL,OAAAiC,EAAA,EAAAjC,CAAA,GAAI8B,EAAX,CAAkBI,aAAa,EAAOsJ,eAAgB,wDCrElDC,WAAoCvK,SAASC,eACjD,+BAgDauK,GA7CoB,SAAC9L,GAClC,IAAM+L,EAAc,WAClB/L,EAAMgC,cAQR,OAAKhC,EAAMyB,OACJC,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2CACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,8CAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oCAAd,wBACAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,mCAAb,qHAIAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,6CACVC,QAvBW,WACnB7B,EAAMgM,oBACNhM,EAAMgC,eAmBA,WAMAjB,EAAAC,EAAAC,cAAA,UACEW,UAAU,6CACVC,QAASkK,GAFX,eASNF,IA/BwB,MC2DbI,WA1EE,SAAAzG,GAAwD,IAAtD4D,EAAsD5D,EAAtD4D,QAAS5F,EAA6CgC,EAA7ChC,GAAI0I,EAAyC1G,EAAzC0G,MAAOC,EAAkC3G,EAAlC2G,OAAQhL,EAA0BqE,EAA1BrE,MAAOuC,EAAmB8B,EAAnB9B,SAAmBzD,EAC/CC,oBAAS,GADsCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChEmM,EADgEjM,EAAA,GAC1DkM,EAD0DlM,EAAA,GAAA0C,EAErC3C,oBAAS,GAF4B4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAEhEyJ,EAFgExJ,EAAA,GAAAwD,GAAAxD,EAAA,GAG7C5C,mBAAiB,KAH4BqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAGhEiG,EAHgEhG,EAAA,GAGzDiG,EAHyDjG,EAAA,GAIjEkG,EAAMC,iBAAO,MAEnBjM,oBAAU,WAER,OADAa,SAASqL,iBAAiB,QAASC,GAC5B,kBAAMtL,SAASuL,oBAAoB,QAASD,KAClD,IAEH,IAAMA,EAAQ,SAACjJ,GACb0I,EAAQ1I,GAAKA,EAAEC,SAAW6I,EAAIK,UAgBhC,OACE/L,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,UACVC,QAAS,WACPwK,EAAQ,SAACU,GAAD,OAAWA,IACfT,GAAWD,GAAQ,KAGzBtL,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLoB,GAAG,aACHiJ,IAAKA,EACLlJ,YAAapC,EAAQA,EAAM+K,GAASC,EACpChL,MApBJoL,EAAM3B,OAAS,EAAU2B,EACzBpL,EAAcA,EAAM+K,GACjB,GAmBCxI,SAAU,SAACC,GACT6I,EAAS7I,EAAEC,OAAOzC,OAClBuC,EAASC,EAAEC,OAAOzC,QAEpBU,QAAS,kBAAMwK,EAAQ,SAACU,GAAD,OAAWA,QAGtChM,EAAAC,EAAAC,cAAA,OAAKW,UAAS,SAAAoL,OAAWZ,EAAO,OAAS,SAE3CrL,EAAAC,EAAAC,cAAA,OAAKW,UAAS,WAAAoL,OAAaZ,EAAO,OAAS,OAtChC,SAAChD,GACd,OAAOA,EAAQ6D,OACb,SAACC,GAAD,OACEA,EAAOhB,GAAOiB,WAAWC,cAAcC,QAAQd,EAAMa,gBAAkB,IAoCtEH,CAAO7D,GAASf,IAAI,SAAC6E,GACpB,OACEnM,EAAAC,EAAAC,cAAA,OACEuH,IAAK0E,EAAO1J,GACZ5B,UAAS,UAAAoL,OAAY7L,IAAU+L,EAAS,WAAa,MACrDrL,QAAS,WACP2K,EAAS,IACT9I,EAASwJ,GACTb,GAAQ,KAGTa,EAAOhB,UC3ChBzJ,GAAoB,CACxBF,aAAc,GACdD,aAAa,EACbqJ,yBAAyB,EACzBL,YAAa,EACbM,eAAgB,GA8ZH0B,GA3Ze,WAAM,IAAArN,EACEC,mBAAuB,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BsN,EAD2BpN,EAAA,GACfqN,EADerN,EAAA,GAAA0C,EAEN3C,mBAAiB,IAFX4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAE3B4K,EAF2B3K,EAAA,GAEnB4K,EAFmB5K,EAAA,GAAAwD,EAGgBpG,mBAAiB,IAHjCqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAAArD,GAAAsD,EAAA,GAAAA,EAAA,GAIRrD,qBAAWjB,EAASQ,KAJZU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAI3Bf,EAJ2BiB,EAAA,GAIpBC,EAJoBD,EAAA,GAAAuD,EAKcxG,mBAAc,IAL5ByG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAK3BiH,EAL2BhH,EAAA,GAKTiH,EALSjH,EAAA,GAAAG,EAMY5G,mBAAc,IAN1B6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAM3B+G,EAN2B9G,EAAA,GAMV+G,EANU/G,EAAA,GAAAG,EAOIhH,mBAAiB,IAPrBiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAQ5B6G,GAR4B5G,EAAA,GAAAA,EAAA,GAQRuF,iBAAO,OARCrF,EASUnH,oBAAkB,GAT5BoH,EAAAlH,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,GAS3B2G,EAT2B1G,EAAA,GASX2G,EATW3G,EAAA,GAAAE,EAUItH,mBAAc,IAVlBuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAU3B0G,EAV2BzG,EAAA,GAUd0G,EAVc1G,EAAA,GAAA2G,EAWsBlO,mBAAc,MAXpCmO,EAAAjO,OAAAC,EAAA,EAAAD,CAAAgO,EAAA,GAW3BE,EAX2BD,EAAA,GAWLE,EAXKF,EAAA,GAAAG,EAYItO,mBAAS,GAZbuO,EAAArO,OAAAC,EAAA,EAAAD,CAAAoO,EAAA,GAY3BE,EAZ2BD,EAAA,GAYdE,EAZcF,EAAA,GAa5BG,EAA0BhP,EAAU,iBAEpCiP,EAA6BjP,EAAU,yBACvCkP,EAA6BlP,EAAU,0BACvCmP,GACJnP,EAAU,+BACNoP,GACJpP,EAAU,mCAaZa,oBAAU,WACRC,IAAMC,IAAIiO,GAAiBhO,KAAK,SAACC,GAC/B2M,EAAc3M,EAASC,QAGzBJ,IAAMC,IAAImO,GAAoBlO,KAAK,SAACC,GAClC+M,EAAoB/M,EAASC,QAG/BJ,IAAMC,IAAIqO,IAA6BpO,KAAK,SAACC,GAC3CiN,EAAmBjN,EAASC,SAE7B,IAEH,IAiGMkB,GAAa,WACjBiM,GAAkB,GAClB7K,EAAS,CAAEhB,KAAM,iBAGb6M,GAAoB,SAACtL,GACzBA,EAAEE,iBACF,IAAMD,EAASD,EAAEC,OAAOsL,aAAa,QAC/BhL,EAAW5C,SAAS6N,cAAcvL,GAAQwL,UAC9B9N,SAASC,eACzB,sBAGQ8N,SAAS,EAAGnL,EAAW,KAG7BoL,GAAY,SAACC,GACjBZ,EAAeY,IAGjB,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,0BAAd,wBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,EACI,2CACA,mBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,gCAAgCtC,QAASoN,IAAjD,uBAIFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,EACI,2CACA,mBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,iCACLtC,QAASoN,IAFX,4BAOFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,EACI,2CACA,mBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,4BAA4BtC,QAASoN,IAA7C,8BAMNlO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BAA6B4B,GAAG,sBAC7CzC,EAAAC,EAAAC,cAAA,OACEW,UAAU,gCACV4B,GAAG,gCAEHzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,uCAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASmE,EACT/J,GAAG,aACH0I,MAAM,aACNC,OAAO,yBACPhL,MAAOmN,EACP5K,SAAU,SAAC+L,GAAD,OAAclB,EAAwBkB,OAGpD1O,EAAAC,EAAAC,cAAA,SACEwL,IAAKsB,EACLvK,GAAG,eACHF,KAAK,eACL1B,UAAU,eACV2B,YAAY,WACZnB,KAAK,SACLjB,MAAOsM,EACPhK,aAAa,MACbC,SAAU,SAACC,GACT+J,EAAU/J,EAAEC,OAAOzC,UAGvBJ,EAAAC,EAAAC,cAAA,UAAQW,UAAU,MAAMQ,KAAK,SAASP,QApM1B,WACtB,IAAI6N,EAAoB,GACpBC,EAAmB,EACjBC,EAAgBC,WAAWpC,GAEJ,OAAzBa,EACFoB,EAAoB,GACqB,kBAAzBpB,EAChBoB,EAAoBpB,EAAqBwB,WAAW3C,WACX,kBAAzBmB,IAChBoB,EAAoBpB,GAGtBf,EAAWlF,IAAI,SAACoH,GACd,OAAIA,EAAIK,aAAeJ,EACrBC,GAAoB,EAGbA,IAIX,IAAII,EAAoC,KAAtBL,EACdM,OAAOC,UAAUL,IAAkBA,EAAgB,GAAKG,EACjC,IAArBJ,EACFjP,IAAMoD,KAAK+K,EAAoB,CAC7BqB,aAAczC,EACd0C,mBAAoBT,IACnB9O,KAAK,SAACC,GACe,uBAAlBA,EAASC,MACX4M,EAAU,IACVa,EAAwB,MACxBR,EAAajB,QAAQ3L,MAAQ,GAC7BiC,EAAS,CAAEhB,KAAM,wBAEjBgB,EAAS,CAAEhB,KAAM,wBAAyBsJ,QAAS7K,EAASC,SAIhEsC,EAAS,CAAEhB,KAAM,8BAGnBgB,EAAS,CAAEhB,KAAM,gBACjB2L,EAAajB,QAAQ3L,MAAQ,MAyJrB,YAMJJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6CACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iDAAd,uCAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gDAAb,mVASJb,EAAAC,EAAAC,cAAA,OACEW,UAAU,gCACV4B,GAAG,iCAEHzC,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,8OAIoB,KAEQ,GAA3B0M,EAAiB/C,QAChB7J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oDACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAK+L,KACL7L,IAAI,UACJ3C,UAAU,2DAGdb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,oDAAb,0CAKyB,IAA5B+L,EAAiB/C,QAChB7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2CACZ+L,EAAiBtF,IAAI,SAACgI,GACrB,OACEtP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mCAAd,yBAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0CAAf,iBACcyO,EAAK7M,IAEnBzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0CAAf,eACeyO,EAAKP,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCAAf,wBACwByO,EAAKC,UAE7BvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0CAAf,UACUyO,EAAKE,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,KAEpD1P,EAAAC,EAAAC,cAAA,SACEW,UAAW,IAAMyO,EAAK7M,GACtBA,GAAG,2CACHpB,KAAK,SACLmB,YAAY,iCAEdxC,EAAAC,EAAAC,cAAA,UACEW,UAAU,0CACVC,QAAS,YA7NA,SAC3BiO,EACAtM,EACAiK,EACAiD,EACAC,GAEA7O,QAAQC,IAAI,aAAc+N,GAC1BhO,QAAQC,IAAI,aAAc2O,GAC1B,IAAME,EAAaf,WAAWc,EAAYxP,OACnByP,EAAa,GAAKZ,OAAOC,UAAUW,GAE7Cf,WAAWpC,GAAUmD,GACpB,GACV3C,GAAkB,GAClBE,EAAe,CACb0C,UAAWf,EACXtM,KACAiK,SACAmD,aACAF,kBACAC,iBAGFvN,EAAS,CAAEhB,KAAM,mBAGnB6L,GAAkB,GAClB7K,EAAS,CAAEhB,KAAM,yBAkMC0O,CACET,EAAKP,WACLO,EAAK7M,GACL6M,EAAKC,SACLD,EAAKK,gBACLpP,SAAS6N,cAAc,KAAOkB,EAAK7M,OARzC,gBAoBZzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAA2B4B,GAAG,4BAC3CzC,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,iHAIAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uDAAf,sBAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iDAAf,cAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8CAAf,YAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gDAAf,eAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iDAAf,UAIDiM,EAAgBxF,IAAI,SAAC0I,GACpB,OACEhQ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACZmP,EAAQL,iBAEX3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACZmP,EAAQjB,YAEX/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACZmP,EAAQT,UAEXvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACZmP,EAAQC,UAEXjQ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCACZ,IACAmP,EAAQR,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,WAQ3DvO,EAAMyJ,yBACL5K,EAAAC,EAAAC,cAACgQ,EAAD,CACE1O,aAAcL,EAAMK,aACpBP,WAAYA,GACZsJ,YAAapJ,EAAMoJ,cAGvBvK,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQS,EAAMI,YAAaN,WAAYA,IAC5CjB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAoBM,EAAMK,cACd,IAAzBL,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAK6M,IACL3M,IAAI,aAGkB,IAAzBrC,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBAAoByC,IAAKC,IAAYC,IAAI,cAG5DxD,EAAAC,EAAAC,cAACkQ,GAAD,CACE1P,OAAQuM,EACRhM,WAAYA,GACZgK,kBAvRkB,WACtB,IAAIoF,EAAOlD,EAAYT,OAASS,EAAY0C,WAC5C1C,EAAYyC,YAAYxP,MAAQ,GAChCW,QAAQC,IAAI,gBAAiBmM,GAC7BxN,IAAMoD,KAAKiL,GAA4B,CACrCe,WAAY5B,EAAY2C,UACxBrN,GAAI0K,EAAY1K,GAChB4N,OACA3D,OAAQS,EAAY0C,WACpBF,gBAAiBxC,EAAYwC,kBAC5B9P,KAAK,SAACC,GACPqN,EAAY0C,WAAa,KACzBlQ,IAAMC,IAAImO,GAAoBlO,KAAK,SAACC,GAClC+M,EAAoB/M,EAASC,4CChFtBuQ,WAxFa,SAAA7L,GAAqC,IAAnCjD,EAAmCiD,EAAnCjD,aAAmCtC,GAAAuF,EAArBxD,WAKN9B,mBAAS,KALkBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAKxDqR,EALwDnR,EAAA,GAK5CoR,EAL4CpR,EAAA,GAM3DqR,EAAW,EACXC,GAAc,EACdC,GAAkB,EAStB,OACE3Q,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLmB,YAAY,0BACZ3B,UAAU,iCACV8B,SAAU,SAACC,GAAD,OAhBI,SAACA,GACrB4N,EAAc5N,GACd6N,EAAW,EACXC,GAAc,EACdC,GAAkB,EAYUC,CAAchO,EAAEC,OAAOzC,WAGjDJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBAAf,UACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBAAf,WAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACZW,EACE0K,OAAO,SAACwC,GAEP,OADA+B,GAAY,EACO,KAAfF,EACK7B,EAEPA,EAAIzE,OACDmC,WACAsD,MAAM,EAAGa,EAAW1G,QACpBgH,SAASN,IAEZG,GAAc,EACPhC,QACE+B,GAAYjP,EAAaqI,QAAyB,GAAf6G,IAC5CC,GAAkB,MAGrBrJ,IAAI,SAACrI,GACJ,OACEe,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAyB4G,IAAKxI,EAAMgL,QACjDjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBAAf,cACW5B,EAAMgL,QAEjBjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBAAf,mBACgB5B,EAAMiL,aAEtBlK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBAAf,aAC6B,MAAhB5B,EAAMkL,OAAiBlL,EAAMkL,OAASlL,EAAMsQ,WAG3DvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,mBACVyC,IAAKrE,EAAMoL,qBAOxBsG,GACC3Q,EAAAC,EAAAC,cAAA,OACEW,UAAU,uBACVyC,IAAKwN,KACLtN,IAAI,kBChFVuN,WAA8BxQ,SAASC,eAC3C,8BA2EawQ,GAxEmB,SAAC/R,GAKjC8B,QAAQC,IAAI/B,EAAMgS,iBAIlB,OAAKhS,EAAMyB,OACJC,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACbb,EAAAC,EAAAC,cAAA,UACEY,QARY,WAClB7B,EAAMgC,cAQAJ,UAAU,0CAFZ,KAMAb,EAAAC,EAAAC,cAAA,8EAGAF,EAAAC,EAAAC,cAAA,+KAKAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAf,yBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,uBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,UACC5B,EAAMgS,gBAAgB3J,IAAI,SAACoH,GAC1B,OACE1O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAA4B4G,IAAKiH,EAAIzE,QAClDjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAf,SACS6N,EAAIzE,QAEbjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAf,mBACgB6N,EAAIxE,aAEpBlK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAf,gBACgC,MAAhB6N,EAAIa,SAAmBb,EAAIa,SAAWb,EAAIvE,QAE1DnK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAf,aACa6N,EAAItE,kBAGnBpK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,sBACVyC,IAAKoL,EAAIrE,sBAQvBrK,EAAAC,EAAAC,cAAA,OACEW,UAAU,oCACVC,QA7DoB,WAC1B7B,EAAMiS,cAAcjS,EAAMkS,YAAY3C,OACtCvP,EAAMgC,eA6DAjB,EAAAC,EAAAC,cAAA,UAAQW,UAAU,OAAlB,2BAINkQ,IA3DwB,MCXtBK,WAA+B7Q,SAASC,eAC5C,0BA4Ga6Q,GAzGe,SAACpS,GAC7B,IAAMqS,EAAiCzS,EAAU,eADLK,EAEUC,mBAAS,IAFnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAErCqS,EAFqCnS,EAAA,GAEhBoS,EAFgBpS,EAAA,GAI5CM,oBAAU,WACJT,EAAMyB,QACRf,IAAMoD,KAAKuO,EAAwB,CACjClC,mBAAoBnQ,EAAMkS,YAAYrB,UACtCX,aAAclQ,EAAMkS,YAAYzE,SAE/B7M,KAAK,SAACC,GACL0R,EAAuB1R,EAASC,SAGrC,CAACd,EAAMyB,SAgBV,OAAKzB,EAAMyB,OAEJC,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6CACbb,EAAAC,EAAAC,cAAA,UACEY,QAVa,WACnB7B,EAAMgC,cAUAJ,UAAU,gDAFZ,KAMAb,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,+FAIAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BAAf,sBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,6BAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,UACC0Q,EAAoBjK,IAAI,SAACrI,GACxB,OACEe,EAAAC,EAAAC,cAAA,OACEW,UAAU,kCACV4G,IAAKxI,EAAMgL,QAEXjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2CACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,SACS5B,EAAMgL,QAEfjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,UACU5B,EAAMwS,OAEhBzR,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,mBACgB5B,EAAMiL,aAEtBlK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,YACY5B,EAAMyN,OACfzN,EAAMkL,OAAS,UAAY,KAGhCnK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,4BACVyC,IAAKrE,EAAMoL,sBAQzBrK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,uCACVC,QAnEkB,WAC1B7B,EAAMyS,cAAczS,EAAMkS,YAAY3C,OACtCvP,EAAMgC,eA+DA,WAMAjB,EAAAC,EAAAC,cAAA,UACEW,UAAU,uCACVC,QA9EkB,WAC1B7B,EAAMiS,cAAcjS,EAAMkS,YAAY3C,OACtCvP,EAAMgC,eA0EA,eASNmQ,IAvEwB,MCzCflQ,GAAU,SAACC,EAAYC,GAElC,MAAoB,oBAAhBA,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEwQ,iBACE,mEACFC,iBAAiB,EACjBrQ,aAAa,EACbsJ,eAAgB,IAIA,sBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEE0Q,mBAAoB,qCACpBC,mBAAmB,EACnBvQ,aAAa,EACbsJ,eAAgB,IAIA,kBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEwQ,iBACE,4GACFC,iBAAiB,EACjBrQ,aAAa,EACbsJ,eAAgB,IAIA,sBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEwQ,iBAAkB,kCAClBpQ,aAAa,EACbqQ,iBAAiB,IAID,gBAAhBxQ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEE0Q,mBACE,wDACFC,mBAAmB,EACnBvQ,aAAa,EACbsJ,eAAgB,IAIA,wBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEE0Q,mBAAoB,kCACpBC,mBAAmB,EACnBvQ,aAAa,EACbsJ,eAAgB,IAIA,0BAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEE4Q,kBAAkB,EAClBvQ,aAAcJ,EAAOuJ,UAIL,gBAAhBvJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbwQ,kBAAkB,EAClBlH,eAAgB,IAGbxL,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbqQ,iBAAiB,EACjBE,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,KCvEnBtQ,GAAoB,CACxBH,aAAa,EACbqQ,iBAAiB,EACjBE,mBAAmB,EACnBC,kBAAkB,EAClBvQ,aAAc,GACdmQ,iBAAkB,GAClBE,mBAAoB,GACpBtH,YAAa,EACbM,eAAgB,GAqjBlB,IAqBerG,eAvkBf,WAAqB,IAAAtF,EACKC,mBAAiB,IADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACZ+S,EADY7S,EAAA,GACN8S,EADM9S,EAAA,GAAA0C,EAEO3C,mBAAiB,IAFxB4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAEZ2P,EAFY1P,EAAA,GAELoQ,EAFKpQ,EAAA,GAAAwD,EAGSpG,mBAAiB,IAH1BqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAGZmH,EAHYlH,EAAA,GAGJmH,EAHInH,EAAA,GAAAG,EAImBxG,mBAAiB,IAJpCyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAIZyM,EAJYxM,EAAA,GAICyM,EAJDzM,EAAA,GAAAG,EAKG5G,mBAAiB,IALpB6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAKZuM,EALYtM,EAAA,GAKPuM,EALOvM,EAAA,GAAAG,EAMKhH,mBAAiB,IANtBiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAMZ9E,EANY+E,EAAA,GAAAlE,GAAAkE,EAAA,GAOOjE,qBAAWjB,GAASQ,KAP3BU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAOZf,EAPYiB,EAAA,GAOLC,EAPKD,EAAA,GAAAkE,EAQenH,mBAAc,IAR7BoH,EAAAlH,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,GAQZkM,EARYjM,EAAA,GAQDkM,EARClM,EAAA,GAAAE,EASiBtH,mBAAiB,IATlCuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAAA4G,GAAA3G,EAAA,GAAAA,EAAA,GAUqBvH,mBAAiB,KAVtCmO,EAAAjO,OAAAC,EAAA,EAAAD,CAAAgO,EAAA,GAUZqF,EAVYpF,EAAA,GAUEqF,EAVFrF,EAAA,GAAAG,EAWyBtO,mBAAc,IAXvCuO,EAAArO,OAAAC,EAAA,EAAAD,CAAAoO,EAAA,GAWZmF,EAXYlF,EAAA,GAWImF,EAXJnF,EAAA,GAAAoF,EAYqB3T,mBAAc,IAZnC4T,EAAA1T,OAAAC,EAAA,EAAAD,CAAAyT,EAAA,GAYZE,EAZYD,EAAA,GAYEE,EAZFF,EAAA,GAAAG,GAayB/T,oBAAkB,GAb3CgU,GAAA9T,OAAAC,EAAA,EAAAD,CAAA6T,GAAA,GAAAE,IAAAD,GAAA,GAAAA,GAAA,GAcmBhU,mBAAS,KAd5BkU,GAAAhU,OAAAC,EAAA,EAAAD,CAAA+T,GAAA,GAcZjC,GAdYkC,GAAA,GAcCC,GAdDD,GAAA,GAAAE,GAeyBpU,oBAAkB,GAf3CqU,GAAAnU,OAAAC,EAAA,EAAAD,CAAAkU,GAAA,GAeZE,GAfYD,GAAA,GAeIE,GAfJF,GAAA,GAAAG,GAgBexU,mBAAc,MAhB7ByU,GAAAvU,OAAAC,EAAA,EAAAD,CAAAsU,GAAA,GAgBZE,GAhBYD,GAAA,GAgBDE,GAhBCF,GAAA,GAAAG,GAiBqC5U,mBAAc,MAjBnD6U,GAAA3U,OAAAC,EAAA,EAAAD,CAAA0U,GAAA,GAiBZE,GAjBYD,GAAA,GAiBUE,GAjBVF,GAAA,GAAAG,GAkBmBhV,mBAAS,GAlB5BiV,GAAA/U,OAAAC,EAAA,EAAAD,CAAA8U,GAAA,GAkBZxG,GAlBYyG,GAAA,GAkBCxG,GAlBDwG,GAAA,GAAAC,GAmB2BlV,oBAAkB,GAnB7CmV,GAAAjV,OAAAC,EAAA,EAAAD,CAAAgV,GAAA,GAmBZE,GAnBYD,GAAA,GAmBKE,GAnBLF,GAAA,GAoBbG,GAA0B5V,EAAU,gBACpC6V,GAA+B7V,EAAU,wBACzC8V,GAAkC9V,EAAU,wBAC5C+V,GACJ/V,EAAU,+BACNgW,GAAgChW,EAAU,yBAC1CiW,GAAwBjW,EAAU,sBAClCkW,GAAyBlW,EAAU,4BAYzCa,oBAAU,WACRC,IAAMC,IAAI+U,IAAyB9U,KAAK,SAACC,GACvC2S,EAAa3S,EAASC,MACtBgB,QAAQC,IAAIlB,EAASC,QAIvBJ,IAAMC,IAAIiV,IAAuBhV,KAAK,SAACC,GACrC+S,EAAkB/S,EAASC,QAG7BJ,IAAMC,IAAI8U,IACP7U,KAAK,SAACC,GACLmT,EAAgBnT,EAASC,QAE1BiV,MAAM,SAACC,GACN,GAAIA,EAAO,MAAMA,KAEpB,CAACV,KAWJ,IAuJMW,GAAgB,SAACvK,GACrB,IAAI6D,EAAQ7D,EACZhL,IAAMoD,KAAKgS,GAAX1V,OAAAiC,EAAA,EAAAjC,CAAA,GACKuT,EAAepE,GADpB,CAEE2G,WAAY,KACXtV,KAAK,SAACC,GACP,GAAsB,sBAAlBA,EAASC,KAA8B,CACzC,IAAIqV,EAAexC,EAAe1G,OAChC,SAACoD,GAAD,OAAeA,EAAK7M,IAAMmQ,EAAepE,GAAO/L,KAElDoQ,EAAkBuC,OAyBlBnU,GAAa,WACjByS,IAAkB,GAClBrR,EAAS,CAAEgT,KAAM,iBAGbnH,GAAoB,SAACtL,GACzBA,EAAEE,iBACF,IAAMD,EAASD,EAAEC,OAAOsL,aAAa,QAC/BhL,EAAW5C,SAAS6N,cAAcvL,GAAQwL,UAC9B9N,SAASC,eACzB,oBAGQ8N,SAAS,EAAGnL,EAAW,KAG7BoL,GAAY,SAACC,GACjBZ,GAAeY,IAGjB,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,wBAAd,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GACI,uCACA,iBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,wBAAwBtC,QAASoN,IAAzC,6BAIFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GACI,uCACA,iBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,qCACLtC,QAASoN,IAFX,eAOFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GACI,uCACA,iBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,kBAAkBtC,QAASoN,IAAnC,kCAIFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GACI,uCACA,iBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,mBAAmBtC,QAASoN,IAApC,iBAMNlO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBAAmB4B,GAAG,oBACnCzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BAA6B4B,GAAG,wBAC7CzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,kBACdb,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACfb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLoB,GAAG,SACHD,YAAY,YACZG,SAAU,SAACC,GAAD,OAAYsP,EAAQtP,EAAEC,OAAOzC,UAEzCJ,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLoB,GAAG,QACHD,YAAY,QACZG,SAAU,SAACC,GAAD,OAAYuP,EAASvP,EAAEC,OAAOzC,UAE1CJ,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLoB,GAAG,SACHD,YAAY,kBACZG,SAAU,SAACC,GAAD,OAAY+J,EAAU/J,EAAEC,OAAOzC,UAE3CJ,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLoB,GAAG,cACHD,YAAY,iBACZ3B,UAAU,mBACV8B,SAAU,SAACC,GAAD,OAAYyP,EAAezP,EAAEC,OAAOzC,UAEhDJ,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLoB,GAAG,UACHD,YAAY,sBACZG,SAAU,SAACC,GAAD,OAAY2P,EAAO3P,EAAEC,OAAOzC,UAExCJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAvVa,CAC3B,CACE5F,GAAI,IACJrC,MAAO,QAET,CACEqC,GAAI,IACJrC,MAAO,WAiVKqC,GAAG,KACH0I,MAAM,QACNC,OAAO,4BACPhL,MAAO6T,GACPtR,SAAU,SAAC+L,GAAD,OAAcwF,GAAwBxF,OAGpD1O,EAAAC,EAAAC,cAAA,UAAQW,UAAU,MAAMC,QAvTf,SAAC8B,GACpBA,EAAEE,iBACF,IACIwS,EAAkB,GAGO,OAAzBrB,GACFqB,EAAkB,GACuB,kBAAzBrB,GAChBqB,EAAkBrB,GAAqB7T,MAAMgM,WACJ,kBAAzB6H,KAChBqB,EAAkBrB,IAGpB,IAAMsB,EAAmB,CACvBtD,OACAR,QACA/E,SACA0F,cACAE,MACAjR,KAAMiU,GAcR,IAXY,QAARjU,EACayN,WAAWpC,GAAU,EAErBuC,OAAOC,UAAUsG,SAAS9I,KAAY8I,SAAS9I,GAAU,IAG/D,KAATuF,GACU,KAAVR,GACgB,KAAhBW,GACQ,KAARE,GACoB,KAApBgD,EAC+B,CAC/B,IAAIG,EAAclV,SAASC,eAAe,UACtCkV,EAAanV,SAASC,eAAe,SACrCmV,EAAcpV,SAASC,eAAe,UACtCoV,EAAmBrV,SAASC,eAC9B,eAEEqV,EAAWtV,SAASC,eAAe,WACbD,SAAS6N,cACjC,2BAEFzO,IAAMoD,KAAK0R,GAAiB,CAC1Bc,aAEC1V,KAAK,SAACC,GACgB,qBAAjBA,EAASC,OACXsC,EAAS,CAAEhB,KAAM,oBACjBoU,EAAYrV,MAAQ,GACpBsV,EAAWtV,MAAQ,GACnBuV,EAAYvV,MAAQ,GACpBwV,EAAiBxV,MAAQ,GACzByV,EAASzV,MAAQ,GACjB8T,GAAwB,MACxBvU,IAAMC,IAAI+U,IAAyB9U,KACjC,SAACC,GACC2S,EAAa3S,EAASC,QAG1ByU,IAAoBD,KAED,iBAAjBzU,EAASC,MACXsC,EAAS,CAAEhB,KAAM,oBAGpB2T,MAAM,SAACC,GACNlU,QAAQC,IAAIiU,UAGhB5S,EAAS,CAAEhB,KAAM,kBA+OT,YAKJrB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,0CAAd,4BAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,yCAAb,gcAYJb,EAAAC,EAAAC,cAAA,OACEW,UAAU,oCACV4B,GAAG,qCAEHzC,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,kHAIAF,EAAAC,EAAAC,cAAC4V,GAAD,CACEtU,aAAcwR,EACd/R,WAAYA,MAIhBjB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBAAmB4B,GAAG,kBACnCzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAf,kCAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASmK,EACT/P,GAAG,SACH0I,MAAM,SACNC,OAAO,wBACPhL,MAAOyT,GACPlR,SAAU,SAAC+L,GAAD,OAAcoF,GAAapF,OAGzC1O,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLoB,GAAG,0BACHD,YAAY,WACZ3B,UAAU,0BACV8B,SAAU,SAACC,GAAD,OAAY+P,EAAgB/P,EAAEC,OAAOzC,UAEjDJ,EAAAC,EAAAC,cAAA,UAAQW,UAAU,MAAMC,QArSN,WAC5B,IAAIiV,EAAe,GACfC,EAAc,EACdC,EAAoB1V,SAASC,eAC/B,2BAGgB,OAAdqT,GACFkC,EAAe,GACe,kBAAdlC,GAChBkC,EAAelC,GAAU5J,OAAOmC,WACF,kBAAdyH,KAChBkC,EAAelC,IAGjBrB,EAAUlL,IAAI,SAACoH,GACb,OAAIA,EAAIzE,SAAW8L,EACjBC,GAAe,EAGRA,IAIX,IAAIE,EACFjH,OAAOC,UAAUsG,SAAS9C,KAAkB8C,SAAS9C,GAAgB,EAIvE,GAHE3R,QAAQC,IAAIkV,GAGVA,GAF8B,KAAjBH,EAGf,GAAoB,IAAhBC,EAAmB,CACrB,IAAIG,EAAgB,CAClBlE,KAAM8D,EACNrJ,OAAQgG,GAEVoB,GAAa,MACbmC,EAAkB7V,MAAQ,GAC1BuS,EAAgB,KAChBhT,IAAMoD,KAAK6R,GAA6BuB,GAAetW,KACrD,SAACC,GACsB,qBAAjBA,EAASC,OACXsC,EAAS,CAAEhB,KAAM,sBACjBmT,IAAoBD,YAK1BlS,EAAS,CAAEhB,KAAM,6BAGnBgB,EAAS,CAAEhB,KAAM,kBAoPN,IADH,gBAOJrB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oCAAd,8CAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,mCAAb,+OASJb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBAAsB4B,GAAG,mBACtCzC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wLAK0B,GAAzB0S,EAAe/I,QACd7J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAK+L,KACL7L,IAAI,UACJ3C,UAAU,4CAGdb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,qCAAb,6BAKuB,IAA1B+R,EAAe/I,QACd7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACZ+R,EAAetL,IAAI,SAAC8O,EAAU5H,GAC7B,OACExO,EAAAC,EAAAC,cAAA,OAAKuH,IAAK+G,EAAO3N,UAAU,6BACzBb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iCAAd,uCAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCAAf,eACeuV,EAAIrH,YAEnB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCAAf,aACauV,EAAI7G,UAEjBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,MACVC,QAAS,YArQP,SAAC0N,GACvB8E,GAAe,CACb9E,QACA9B,OAAQkG,EAAepE,GAAOe,SAC9BO,UAAW8C,EAAepE,GAAOO,aAEnCpP,IAAMoD,KAAK+R,GAAe,CACxB3F,aAAcyD,EAAepE,GAAOe,SACpCH,mBAAoBwD,EAAepE,GAAOO,WAC1CsH,aAAa,IACZxW,KAAK,SAACC,GACe,uBAAlBA,EAASC,KACX2T,IAAkB,GAElBrR,EAAS,CAAEhB,KAAM,wBAAyBsJ,QAAS7K,EAASC,SAwP1CuW,CAAgB9H,KAHpB,2BAedxO,EAAAC,EAAAC,cAACqW,GAAD,CACE7V,OAAQS,EAAM4Q,iBACd9Q,WAAYA,GACZgQ,gBAAiB9P,EAAMK,aACvB2P,YAAaA,GACbD,cAAegE,KAEjBlV,EAAAC,EAAAC,cAACsW,GAAD,CACE9V,OAAQ+S,GACRxS,WAAYA,GACZkQ,YAAaA,GACbD,cAAegE,GACfxD,cAlUe,SAAC/G,GACtB,IAAI6D,EAAQ7D,EACZhL,IAAMoD,KAAK+R,GAAe,CACxB3F,aAAcyD,EAAepE,GAAOe,SACpCH,mBAAoBwD,EAAepE,GAAOO,WAC1CsH,aAAa,IACZxW,KAAK,SAACC,GACP,GAAsB,uBAAlBA,EAASC,KAA+B,CAC1CJ,IAAMoD,KAAKgS,GAAX1V,OAAAiC,EAAA,EAAAjC,CAAA,GACKuT,EAAepE,GADpB,CAEE2G,WAAY,KACXtV,KAAK,SAACC,MACT,IAAIsV,EAAexC,EAAe1G,OAChC,SAACoD,GAAD,OAAeA,EAAK7M,IAAMmQ,EAAepE,GAAO/L,KAElDoQ,EAAkBuC,SAqTlBpV,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQS,EAAMyQ,gBAAiB3Q,WAAYA,IAChDjB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAoBM,EAAMwQ,kBACd,IAAzBxQ,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAK6M,IACL3M,IAAI,aAGkB,IAAzBrC,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAKC,IACLC,IAAI,cAIVxD,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQS,EAAM2Q,kBAAmB7Q,WAAYA,IAClDjB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAoBM,EAAM0Q,oBACd,IAAzB1Q,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAK6M,IACL3M,IAAI,aAGkB,IAAzBrC,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAKC,IACLC,IAAI,kBCpkBLtC,GAAU,SAACC,EAAYC,GAClC,GAAoB,0BAAhBA,EAAOC,KAAkC,CAC3C,IAAMqJ,EAAyBtJ,EAAOuJ,QACtC,OAAOtL,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAckJ,EACdnJ,aAAa,EACbgJ,YAAa,EACbM,eAAgB,IAGpB,GAAoB,uBAAhBzJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,8CACfD,aAAa,EACbgJ,YAAa,EACbM,eAAgB,IAGpB,GAAoB,mBAAhBzJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,qCACfD,aAAa,EACbgJ,YAAa,EACbM,eAAgB,IAGpB,GAAoB,sBAAhBzJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,8CACfD,aAAa,EACbgJ,YAAa,EACbM,eAAgB,IAGpB,GAAoB,gBAAhBzJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,CAAC,oCACfD,aAAa,EACbgJ,YAAa,EACbM,eAAgB,IAIpB,GAAoB,wBAAhBzJ,EAAOC,KACT,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbC,aAAc,CAAC,6BACf+I,YAAa,EACbM,eAAgB,IAIpB,GAAoB,gCAAhBzJ,EAAOC,KAAwC,CACjD,IAAMoV,EAAkBrV,EAAOuJ,QAC/B,OAAOtL,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEuV,sBAAsB,EACtBC,sBAAuBF,IAI3B,OAAIrV,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbmV,sBAAsB,EACtB7L,eAAgB,KCnEhB+L,kBAA0BrW,SAASC,eAAe,qBA0DzCqW,GAxDgB,SAAC5X,GAI9B,OAAKA,EAAMyB,OAGJC,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACbb,EAAAC,EAAAC,cAAA,UACEY,QAVY,WAClB7B,EAAMgC,cAUAJ,UAAU,oCAFZ,KAMAb,EAAAC,EAAAC,cAAA,yBAAiBjB,EAAM6Q,WACvB9P,EAAAC,EAAAC,cAAA,4DAAoDjB,EAAM6Q,WAC1D9P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCACbb,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCACZ5B,EAAM6X,eAAexP,IAAI,SAACrI,GACzB,OACEe,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAyB4G,IAAKxI,EAAMgL,QACjDjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,eACe5B,EAAMgL,QAErBjK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCAAf,YACY5B,EAAM8X,mBAElB/W,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCAAf,mBACgB5B,EAAMiL,aAEtBlK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAf,UACU5B,EAAMwS,QAGlBzR,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,yBACVyC,IAAKrE,EAAMoL,uBAS3BuM,IA/CO,MCiHII,WArHc,SAAAvS,GAAuC,IAApCjD,EAAoCiD,EAApCjD,aAAcP,EAAsBwD,EAAtBxD,WAC5CvB,oBAAU,WACR8K,WAAW,WACTvJ,KACC,OAJ6D,IAAA/B,EAM9BC,mBAAS,IANqBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAM3DqR,EAN2DnR,EAAA,GAM/CoR,EAN+CpR,EAAA,GAAA0C,EAO5B3C,oBAAkB,GAPU4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAO3DP,EAP2DQ,EAAA,GAO9CsE,EAP8CtE,EAAA,GAAAwD,EAQpBpG,mBAAiB,IARGqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAQ3D0R,EAR2DzR,EAAA,GAQ1C0R,EAR0C1R,EAAA,GAAAG,EAStBxG,mBAAS,IATayG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAS3DmR,EAT2DlR,EAAA,GAS3CuR,EAT2CvR,EAAA,GAU5DwR,EAA6BvY,EAAU,8BACzC4R,EAAW,EACXC,GAAc,EACdC,GAAkB,EAuBtB,OACE3Q,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLmB,YAAY,YACZ3B,UAAU,uBACV8B,SAAU,SAACC,GAAD,OA9BI,SAACA,GACrB4N,EAAc5N,GACd6N,EAAW,EACXC,GAAc,EACdC,GAAkB,EA0BUC,CAAchO,EAAEC,OAAOzC,WAGjDJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,WACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAAf,WAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACZW,EACE0K,OAAO,SAACwC,GAEP,OADA+B,GAAY,EACO,KAAfF,EACK7B,EAEPA,EAAIK,WACD3C,WACAsD,MAAM,EAAGa,EAAW1G,QACpBgH,SAASN,IAEZG,GAAc,EACPhC,QACE+B,GAAYjP,EAAaqI,QAAyB,GAAf6G,IAC5CC,GAAkB,MAGrBrJ,IAAI,SAACrI,GACJ,OACEe,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAyB4G,IAAKxI,EAAM8P,YACjD/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAf,eACe5B,EAAM8P,YAErB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,UACU5B,EAAMoY,OAEhBrX,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCAAf,mBACgB5B,EAAMiL,aAEtBlK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAAf,UACU5B,EAAMwS,OAEhBzR,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAf,uBACuB5B,EAAMqY,cAE7BtX,EAAAC,EAAAC,cAAA,UACEW,UAAU,MACV4B,GAAG,kBACH3B,QAAS,kBAtEF,SAAC6J,GACxBtE,GAAe,GACf6Q,EAAmBvM,GACnB,IAAMyE,EAAqBzE,EAC3BhL,IAAMoD,KAAKqU,EAA4B,CAAEhI,uBACtCvP,KAAK,SAACC,GACLqX,EAAkBrX,EAASC,QAgEAwX,CAAiBtY,EAAM8P,cAHxC,8BAQF/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBAAmByC,IAAKrE,EAAMoL,oBAKtDsG,GACC3Q,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAcyC,IAAKwN,KAAetN,IAAI,eAGzDxD,EAAAC,EAAAC,cAACsX,GAAD,CACE9W,OAAQa,EACRN,WA7EiB,WACrBoF,GAAe,IA6EXyJ,UAAWmH,EACXH,eAAgBA,iBCxGTW,kBAXK,SAAAhT,GAAqC,IAAnCjD,EAAmCiD,EAAnCjD,aAAcP,EAAqBwD,EAArBxD,WAIlC,OAHAuJ,WAAW,WACTvJ,KACC,KAEDjB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBACbb,EAAAC,EAAAC,cAAA,UAAKsB,MCCLkW,GAAqBnX,SAASC,eAAe,eAE7CU,GAAU,SAACC,EAAYC,GAC3B,MAAoB,sBAAhBA,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEET,QAAQ,EACRc,aAAc,2CAIE,wBAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEET,QAAQ,EACRc,aAAc,wDAIE,eAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEET,QAAQ,EACRc,aAAc,+CAIdJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEET,QAAQ,MA8BRgB,GAA8B,CAClCH,aAAa,EACbC,aAAc,IA4LDmW,GAzLgB,SAAC1Y,GAAe,IAAAC,EACPC,mBAAc,MADPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtC0Y,EADsCxY,EAAA,GACzByY,EADyBzY,EAAA,GAAA8C,EAEnBC,qBAAWjB,GAASQ,IAFDU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAEtCf,EAFsCiB,EAAA,GAE/BC,EAF+BD,EAAA,GAAAN,EAGS3C,mBAEpD,IAL2C4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAGtCgW,EAHsC/V,EAAA,GAGjBgW,EAHiBhW,EAAA,GAAAwD,EAMGpG,mBAE9C,IAR2CqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAMtCyS,EANsCxS,EAAA,GAMpByS,EANoBzS,EAAA,GASvC0S,EAA8BrZ,EAAU,qBATD8G,EAUPxG,mBAAiB,IAVVyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAUtCwS,EAVsCvS,EAAA,GAUzBwS,EAVyBxS,EAAA,GAAAG,EAWD5G,mBAC1C,sBAZ2C6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAezCsS,GAfyCrS,EAAA,GAAAA,EAAA,GAelB,IACvBsS,EAAsB,EACtBC,EAAuB,EAE3B7Y,oBAAU,WACRC,IAAMC,IAAIsY,GAAqBrY,KAAK,SAACC,GACnCiY,EAAuBjY,EAASC,MAC5Bd,EAAMyB,UAGX,CAACzB,EAAMyB,SAEV,IA2DMsK,EAAc,WAClB/L,EAAMgC,cAcR,OAAKhC,EAAMyB,OAIJC,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,2CAFZ,KAMAb,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gCAAb,+EAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,OAAKsY,MAAO,CAAC9P,MAAO,MAClB1I,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASyP,EACTrV,GAAG,SACH0I,MAAM,SACNC,OAAQ,qBACRhL,MAAOwX,EACPjV,SAAU,SAAC+L,GAAD,OAAcmJ,EAAenJ,OAG3C1O,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLR,UAAU,sBACV2B,YAAY,qBACZE,aAAa,MACbC,SAAU,SAACC,GAAD,OAAOwV,EAAexV,EAAEC,OAAOzC,UAE3CJ,EAAAC,EAAAC,cAAA,UAAQW,UAAU,MAAMC,QA7GL,WACzB,IAAI2X,EAAkBlY,SAAS6N,cAAc,wBAGzB,OAAhBwJ,EACFS,EAAkB,CAChBpO,OAAQ,IAEsB,kBAAhB2N,EAChBS,EAAkBT,EAAY3N,OAAOmC,WACL,kBAAhBwL,IAChBS,EAAkBT,GAGpBE,EAAoBxQ,IAAI,SAACoH,GACvB,OAAIA,EAAIzE,SAAWoO,EACjBC,GAAuB,EAGhBA,IAIXN,EAAiB1Q,IAAI,SAACoH,GACpB,OAAIA,EAAIgK,aAAeL,EACrBE,GAAwB,EAGjBA,IAIX,IAAII,EAAqC,KAApBN,GAA8C,OAApBA,EAC3CnC,EACFjH,OAAOC,UAAUsG,SAASiD,EAAWrY,SACrCoV,SAASiD,EAAWrY,OAAS,EAC/B,GAAIuY,GAAkBzC,EACpB,GAA4B,IAAxBoC,EACF,GAA6B,IAAzBC,EAA4B,CAC9B,IAAIK,EAAwC,CAC1CF,WAAYL,EACZQ,aAAcV,GAEhBF,EAAmB,GAAAhM,OAAA5M,OAAAyZ,GAAA,EAAAzZ,CAAK2Y,GAAL,CAAuBY,KAG1CH,EAAWrY,MAAQ,KACnByX,EAAe,WAEfxV,EAAS,CAAChB,KAAM,oBAGlBgB,EAAS,CAAChB,KAAM,6BAGlBgB,EAAS,CAAChB,KAAM,wBAsDZ,cAIDF,EAAMT,QACLV,EAAAC,EAAAC,cAAC6Y,GAAD,CACEvX,aAAcL,EAAMK,aACpBP,WA9CS,WACjBoB,EAAS,CAAChB,KAAM,mBAgDZrB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACZmX,EAAiB1Q,IAAI,SAACgI,GACrB,OACEtP,EAAAC,EAAAC,cAAA,OAAKuH,IAAK6H,EAAKoJ,WAAY7X,UAAU,eACnCb,EAAAC,EAAAC,cAAA,6BADF,WAEWoP,EAAKoJ,WAFhB,gBAEyCpJ,EAAKuJ,aAC5C7Y,EAAAC,EAAAC,cAAA,UACEW,UAAU,wBACVC,QAAS,kBAhEN,SAACmR,GAClB,IAAI+G,EAAsBhB,EAAiB9L,OACzC,SAACoD,GAAD,OAAUA,EAAKoJ,aAAezG,IAEhCgG,EAAoBe,GA4DSC,CAAW3J,EAAKoJ,cAFjC,SAUR1Y,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,oCACVC,QAAS,WACP7B,EAAMia,mBAAmBlB,GACzB/Y,EAAMgC,eAJV,SASAjB,EAAAC,EAAAC,cAAA,UACEW,UAAU,qCACVC,QAASkK,GAFX,eASN0M,IA/EO,MCpJLhW,GAAoB,CACxBF,aAAc,GACdD,aAAa,EACbmV,sBAAsB,EACtBC,sBAAuB,GACvBpM,YAAa,EACbM,eAAgB,GAuWHrG,eApWA,WACb,IAAM0T,EAA8BrZ,EAAU,qBACxCsa,EAA6Bta,EAAU,uBACvCua,EAA2Bva,EAAU,iBAHxBK,EAIyBC,oBAAkB,GAJ3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIZma,EAJYja,EAAA,GAIIka,EAJJla,EAAA,GAAA0C,EAK+B3C,oBAAkB,GALjD4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAKZyX,EALYxX,EAAA,GAKOyX,EALPzX,EAAA,GAAAwD,EAMqBpG,mBAAiB,IANtCqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAMZkU,EANYjU,EAAA,GAMEkU,EANFlU,EAAA,GAAAG,EAOyBxG,mBAAiB,IAP1CyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAOZgU,EAPY/T,EAAA,GAOIgU,EAPJhU,EAAA,GAAAG,EAQa5G,mBAAiB,IAR9B6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAQZ8T,EARY7T,EAAA,GAQF8T,EARE9T,EAAA,GAAAG,EASqBhH,mBAAiB,IATtCiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GASZ4T,EATY3T,EAAA,GASE4T,EATF5T,EAAA,GAAAE,EAU2BnH,mBAAiB,IAV5CoH,EAAAlH,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,GAUZ2T,EAVY1T,EAAA,GAUK2T,EAVL3T,EAAA,GAAAE,EAW2BtH,mBAAc,MAXzCuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAWZ0T,EAXYzT,EAAA,GAWK0T,EAXL1T,EAAA,GAYb2T,EAAkB,CACtB,CAAEpQ,OAAQ,IAAKkB,MAAO,MACtB,CAAElB,OAAQ,IAAKkB,MAAO,KACtB,CAAElB,OAAQ,IAAKkB,MAAO,KACtB,CAAElB,OAAQ,IAAKkB,MAAO,KACtB,CAAElB,OAAQ,IAAKkB,MAAO,OAEpBmP,EAAe,GAnBAjN,EAqBjBlO,mBAAc,IArBGmO,EAAAjO,OAAAC,EAAA,EAAAD,CAAAgO,EAAA,GAoBZkN,EApBYjN,EAAA,GAoBekN,EApBflN,EAAA,GAAApL,EAsBOC,qBAAWjB,GAASQ,IAtB3BU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAsBZf,EAtBYiB,EAAA,GAsBLC,EAtBKD,EAAA,GAAAqL,EAuB6BtO,oBAAkB,GAvB/CuO,GAAArO,OAAAC,EAAA,EAAAD,CAAAoO,EAAA,GAuBZgN,GAvBY/M,GAAA,GAuBMgN,GAvBNhN,GAAA,GAAAoF,GAwBmB3T,mBAAS,GAxB5B4T,GAAA1T,OAAAC,EAAA,EAAAD,CAAAyT,GAAA,GAwBZnF,GAxBYoF,GAAA,GAwBCnF,GAxBDmF,GAAA,GA0BnBrT,oBAAU,WACRC,IAAMC,IAAIsY,GAAqBrY,KAAK,SAACC,MACrCH,IAAMC,IAAIwZ,GACPvZ,KAAK,SAACC,GACLuC,EAAS,CACPhB,KAAM,8BACNsJ,QAAS7K,EAASC,SAGrBiV,MAAM,SAACC,OACT,CAACoE,IAEJ,IA2EMpY,GAAa,WACjBoB,EAAS,CAAEgT,KAAM,gBACjBmE,GAAqB,IAGjBmB,GAAiB,WACrB,IAAIC,EAA0Bra,SAAS6N,cACrC,wBAEEyM,EAA4Bta,SAAS6N,cACvC,0BAEE0M,EAAsBva,SAAS6N,cAAc,oBAC7C2M,EAA0Bxa,SAAS6N,cACrC,wBAGE6L,EAAuB1Z,SAASC,eAAe,wBAEnDoa,EAAmBxa,MAAQ,GAC3Bga,EAAmB,MACnBS,EAAqBza,MAAQ,GAC7B0a,EAAe1a,MAAQ,GACvB2a,EAAmB3a,MAAQ,GAC3B6Z,EAAgB7Z,MAAO,GACvBoa,EAA6B,IAC7Bd,EAAgB,IAChBE,EAAkB,IAClBE,EAAY,IACZE,EAAgB,IAChBE,EAAmB,KAkBfhM,GAAoB,SAACtL,GACzBA,EAAEE,iBACF,IAAMD,EAASD,EAAEC,OAAOsL,aAAa,QAC/BhL,EAAW5C,SAAS6N,cAAcvL,GAAQwL,UAC9B9N,SAASC,eACzB,yBAGQ8N,SAAS,EAAGnL,EAAW,KAG7BoL,GAAY,SAACC,GACjBZ,GAAeY,IAGjB,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,qBAAd,oBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GACI,iCACA,cAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,kCACLtC,QAASoN,IAFX,8BAOFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GACI,iCACA,cAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,kCACLtC,QAASoN,IAFX,iCASNlO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAwB4B,GAAG,yBACxCzC,EAAAC,EAAAC,cAAA,OACEW,UAAU,iCACV4B,GAAG,kCAEHzC,EAAAC,EAAAC,cAAA,QAAMW,UAAU,eACdb,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACfb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,4BAAb,2VAQAb,EAAAC,EAAAC,cAAA,SACEW,UAAU,sBACVQ,KAAK,SACLmB,YAAY,aACZG,SAAU,SAACC,GAAD,OAAO8W,EAAgB9W,EAAEC,OAAOzC,UAE5CJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASgS,EACT5X,GAAG,SACH0I,MAAM,QACNC,OAAO,uBACPhL,MAAO+Z,EACPxX,SAAU,SAAC+L,GAAD,OAAc0L,EAAmB1L,OAG/C1O,EAAAC,EAAAC,cAAA,SACEW,UAAU,wBACVQ,KAAK,OACLmB,YAAY,iBACZG,SAAU,SAACC,GAAD,OAAOgX,EAAkBhX,EAAEC,OAAOzC,UAE9CJ,EAAAC,EAAAC,cAAA,SACEW,UAAU,kBACVQ,KAAK,OACLmB,YAAY,QACZG,SAAU,SAACC,GAAD,OAAOkX,EAAYlX,EAAEC,OAAOzC,UAExCJ,EAAAC,EAAAC,cAAA,SACEW,UAAU,sBACVQ,KAAK,OACLmB,YAAY,sBACZG,SAAU,SAACC,GAAD,OAAOoX,EAAgBpX,EAAEC,OAAOzC,UAE5CJ,EAAAC,EAAAC,cAAA,SACEW,UAAU,uBACV4B,GAAG,uBACHpB,KAAK,SACLmB,YAAY,qBACZG,SAAU,SAACC,GAAD,OAAOsX,EAAmBtX,EAAEC,OAAOzC,UAE/CJ,EAAAC,EAAAC,cAAA,UACEmB,KAAK,SACLR,UAAU,MACV4B,GAAG,YACH3B,QA5Oe,WACzB4Z,IAAoB,KAuOZ,8BAQsC,IAArCH,EAA0B1Q,QACzB7J,EAAAC,EAAAC,cAAA,UACEmB,KAAK,SACLR,UAAU,MACV4B,GAAG,UACH3B,QAjPkB,WACAP,SAAS6N,cACrC,yBADF,IAGI4H,EAAc,EAEM,OAApBmE,EACFG,EAAU,GAC0B,kBAApBH,EAChBG,EAAUH,EAAgBlQ,OAAOmC,WACG,kBAApB+N,IAChBG,EAAUH,GAGZE,EAAW/S,IAAI,SAACoH,GACd,OAAIA,EAAIzE,SAAWqQ,EACjBtE,GAAe,EAGRA,IAIX,IAAMgF,EAAiB,CACrBvB,aAAcA,EACda,QAASA,EACTX,eAAgBA,EAChBE,SAAUA,EACVE,aAAcA,EACdkB,aAAchB,EACdM,6BAIgB,IAAhBd,GACW,IAAXa,GACkB,IAAlBX,GACY,IAAZE,GACgB,IAAhBE,GACmB,IAAnBE,GACoC,GAApCM,EAA0B1Q,OAEN,IAAhBmM,EACFrW,IAAMoD,KAAKoW,EAAoB6B,GAAgBnb,KAC7C,SAACC,GACuB,uBAAlBA,EAASC,OACX4a,KACAtY,EAAS,CAAEhB,KAAM,uBACjBiY,GAAmBD,GACnBG,GAAqB,IAED,mBAAlB1Z,EAASC,OACXsC,EAAS,CAAEhB,KAAM,mBACjBmY,GAAqB,IAED,sBAAlB1Z,EAASC,OACXsC,EAAS,CAAEhB,KAAM,sBACjBmY,GAAqB,OAK3BnX,EAAS,CAAEhB,KAAM,wBACjBmY,GAAqB,KAGvBnX,EAAS,CAAEhB,KAAM,gBACjBmY,GAAqB,MA0Kb,YAUJxZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,+BACqC,GAApCqa,EAA0B1Q,QACzB7J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAK+L,KACL7L,IAAI,UACJ3C,UAAU,kCAGdb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,qBAAb,wCAKH0Z,EAA0BjT,IAAI,SAACgI,GAC9B,OACEtP,EAAAC,EAAAC,cAAA,OAAKuH,IAAK6H,EAAKoJ,WAAY7X,UAAU,cACnCb,EAAAC,EAAAC,cAAA,6BADF,WAEWoP,EAAKoJ,WAFhB,gBAEyCpJ,EAAKuJ,kBAMtD7Y,EAAAC,EAAAC,cAAA,OACEW,UAAU,iCACV4B,GAAG,kCAEHzC,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mMAKAF,EAAAC,EAAAC,cAACgb,GAAD,CACEja,WAAYA,GACZO,aAAcL,EAAMwV,0BAI1B4C,GACEvZ,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,QAAQ,EAAMO,WAAYA,IACjCjB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAoBM,EAAMK,cACd,IAAzBL,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAK6M,IACL3M,IAAI,aAGkB,IAAzBrC,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBAAoByC,IAAKC,IAAYC,IAAI,cAI5DxD,EAAAC,EAAAC,cAACib,GAAD,CACEza,OAAQ+Z,GAERxZ,WAhMwB,WAC5ByZ,IAAoB,IAgMhBxB,mBAAoB,SAACkC,GAAD,OAAcZ,EAA6BY,sCC3X1Dla,GAAU,SAACC,EAAeC,GACrC,MAAoB,mBAAhBA,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,2CAIE,cAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,iCAIE,qBAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,iEAIE,2BAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,2CAIE,mBAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,gCAIE,mBAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,oDAIE,gBAAhBJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAI8B,EAAX,CAAkBI,aAAa,IAG1BlC,OAAAiC,EAAA,EAAAjC,CAAA,GAAI8B,EAAX,CAAkBI,aAAa,EAAOC,aAAc,MCtChDE,GAA8B,CAClCH,aAAa,EACbC,aAAc,GACdqJ,eAAgB,GAyIHwQ,GAtIE,WAAM,IAAAnc,EACWC,mBAAiB,IAD5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACd0C,EADcxC,EAAA,GACJyC,EADIzC,EAAA,GAAA0C,EAEmB3C,mBAAiB,IAFpC4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAEdwZ,EAFcvZ,EAAA,GAEAwZ,EAFAxZ,EAAA,GAAAwD,EAGmCpG,mBAAiB,IAHpDqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAGdiW,EAHchW,EAAA,GAGQiW,EAHRjW,EAAA,GAAAG,EAIKxG,mBAAiB,IAJtByG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAId+V,EAJc9V,EAAA,GAIP+V,EAJO/V,EAAA,GAAA1D,EAKKC,qBAAWjB,GAASQ,IALzBU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAKdf,EALciB,EAAA,GAKPC,EALOD,EAAA,GAMfwZ,EAA0B/c,EAAU,eAGpCmE,EAAgBzC,SAASC,eAAe,YACxCyC,EAAgB1C,SAASC,eAAe,YACxCqb,EAAwBtb,SAASC,eACrC,iBAEIsb,EAAavb,SAASC,eAAe,SAkD3C,OACER,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,iBACdb,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACfb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLkB,KAAK,WACLC,YAAY,UACZE,aAAa,MACbD,GAAG,WACHE,SAAU,SAACC,GAAD,OAAYf,EAAYe,EAAEC,OAAOzC,UAE7CJ,EAAAC,EAAAC,cAAA,SACEmB,KAAK,WACLkB,KAAK,WACLC,YAAY,gBACZE,aAAa,MACbD,GAAG,WACHE,SAAU,SAACC,GAAD,OAAY2Y,EAAgB3Y,EAAEC,OAAOzC,UAEjDJ,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBAAb,sDAGAb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,WACLkB,KAAK,gBACLE,GAAG,gBACHD,YAAY,2BACZE,aAAa,MACbC,SAAU,SAACC,GAAD,OAAY6Y,EAAwB7Y,EAAEC,OAAOzC,UAEzDJ,EAAAC,EAAAC,cAAA,UAAQuC,GAAG,QAAQE,SAAU,SAACC,GAAD,OAAY+Y,EAAS/Y,EAAEC,OAAOzC,SACzDJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KAAd,mBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KAAd,iBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KAAd,gBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KAAd,oBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KAAd,YACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KAAd,aAEFJ,EAAAC,EAAAC,cAAA,UAAQY,QAxFO,SAAC8B,GAGpB,GAFAA,EAAEE,iBAEElB,GAAY0Z,GAAgBE,GAAwBE,EACtD,GAAc,MAAVA,EACF,GAAIJ,EAAazR,QAAU,EACzB,GAAIyR,IAAiBE,EAAsB,CACzC,IAAMO,EAAiB,CAACna,WAAUI,SAAUsZ,EAAcI,SAC1D/b,IAAMoD,KAAK6Y,EAAiB,CAC1Brc,KAAMwc,IAELlc,KAAK,SAACC,GACL,IAAMkc,EAA6Blc,EAASC,KAEjB,MAAvBic,EAEF3Z,EAAS,CAAChB,KAAM,mBACgB,MAAvB2a,IAETna,EAAY,IACZ0Z,EAAgB,IAChBE,EAAwB,IACxBE,EAAS,IACT3Y,EAAc5C,MAAQ,GACtB6C,EAAc7C,MAAQ,GACtByb,EAAsBzb,MAAQ,GAC9B0b,EAAW1b,MAAQ,IACnBiC,EAAS,CAAChB,KAAM,2BAItBgB,EAAS,CAAChB,KAAM,gCAGlBgB,EAAS,CAAChB,KAAM,0BAGlBgB,EAAS,CAAChB,KAAM,mBAGlBgB,EAAS,CAAChB,KAAM,oBAgDiBR,UAAU,OAAzC,eAGCM,EAAMI,aACLvB,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQS,EAAMI,YAAaN,WAhDvB,WACjBoB,EAAS,CAAChB,KAAM,kBAgDRrB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAoBM,EAAMK,cACd,IAAzBL,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAK6M,IACL3M,IAAI,aAGkB,IAAzBrC,EAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAKC,IACLC,IAAI,eAMdxD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OAAKoD,IAAK2Y,KAAazY,IAAI,gBCjJpBgB,eAfA,WACb,IAAM0X,EAAuBrd,EAAU,aAWvC,OATAa,oBAAU,WACRC,IAAMoD,KAAKmZ,GACRrc,KAAK,WACJqD,OAAOC,SAASC,KAAO,WAExB4R,MAAM,SAACmH,GACNpb,QAAQC,IAAImb,MAEf,IACInc,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,QCXHqX,kBAA8B7b,SAASC,eAC3C,yBA6Ka6b,GA1KmB,SAACpd,GACjC,IAAM+L,EAAc,WAClB/L,EAAMgC,cAGFiQ,EAAgB,WACpBjS,EAAMiW,cAAcjW,EAAMuP,OAC1BvP,EAAMgC,cAaR,OAAKhC,EAAMyB,OACkB,IAAzBzB,EAAMqd,eACD3b,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8CACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,iDAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,uCAAd,+CAGAb,EAAAC,EAAAC,cAAA,uCACCjB,EAAMsd,QAAQjV,IAAI,SAACkV,GAClB,OACExc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,wBAAd,+BAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAf,gBACgB2b,EAAKC,aAErBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BAAf,eACe2b,EAAKzN,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAAf,eACe2b,EAAK7M,iBAEpB3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,aACa2b,EAAKjN,UAElBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,UACU2b,EAAKhN,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,QAK1D1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,2CACVC,QA/CW,WACrB7B,EAAMyS,cAAczS,EAAMuP,OAC1BvP,EAAMgC,eA2CE,WAMAjB,EAAAC,EAAAC,cAAA,UACEW,UAAU,0CACVC,QAASoQ,GAFX,eASNkL,IAEgC,IAAzBnd,EAAMqd,eACR3b,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8CACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,iDAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,uCAAd,yBAGAb,EAAAC,EAAAC,cAAA,+HAGCjB,EAAMsd,QAAQjV,IAAI,SAACkV,GAClB,OACExc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,wBAAd,+BAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAf,gBACgB2b,EAAKC,aAErBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BAAf,eACe2b,EAAKzN,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAAf,eACe2b,EAAK7M,iBAEpB3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,aACa2b,EAAKjN,UAElBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,UACU2b,EAAKhN,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,QAK1D1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,qCACVC,QA9GmB,WAC7B7B,EAAMyd,uBAAuBzd,EAAMuP,OACnCvP,EAAMgC,eA0GE,+BAMAjB,EAAAC,EAAAC,cAAA,UACEW,UAAU,oCACVC,QAASoQ,GAFX,2BASNkL,IAGKzb,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8CACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,iDAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,uCAAd,8BAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAKqZ,IACLnZ,IAAI,cACJ3C,UAAU,4CAGdb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,0CACVC,QAASoQ,GAFX,2BASNkL,IAjJsB,MC2cbQ,GAxdW,WAAM,IAAA1d,EAuBoBC,mBAEhD,IAzB4BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAuBvB2d,EAvBuBzd,EAAA,GAuBJ0d,EAvBI1d,EAAA,GAAA0C,EA0BkC3C,mBAE9D,IA5B4B4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GA0BvBib,EA1BuBhb,EAAA,GA0BGib,EA1BHjb,EAAA,GAAAwD,EA6BgBpG,mBAAc,IA7B9BqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GA6BvB0X,EA7BuBzX,EAAA,GA6BN0X,EA7BM1X,EAAA,GAAAG,EA8BqBxG,mBACjD,IA/B4ByG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GA8BvBwX,EA9BuBvX,EAAA,GA8BHwX,EA9BGxX,EAAA,GAAAG,EAiCI5G,mBAAiB,IAjCrB6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAkCF7G,mBAAiB,KAlCfiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAAAG,GAAAF,EAAA,GAAAA,EAAA,GAmCcjH,oBAAkB,IAnChCoH,EAAAlH,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,GAmCvB+W,EAnCuB9W,EAAA,GAmCP+W,EAnCO/W,EAAA,GAAAE,EAoCctH,mBAAiB,GApC/BuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAoCvB6V,EApCuB5V,EAAA,GAoCP6W,EApCO7W,EAAA,GAAA2G,EAqCMlO,mBAAiB,GArCvBmO,EAAAjO,OAAAC,EAAA,EAAAD,CAAAgO,EAAA,GAqCvBmQ,EArCuBlQ,EAAA,GAqCXmQ,EArCWnQ,EAAA,GAAAG,EAsCMtO,mBAAS,IAtCfuO,EAAArO,OAAAC,EAAA,EAAAD,CAAAoO,EAAA,GAsCvB8C,EAtCuB7C,EAAA,GAsCX8C,EAtCW9C,EAAA,GAAAoF,EAuCQ3T,mBAAS,GAvCjB4T,EAAA1T,OAAAC,EAAA,EAAAD,CAAAyT,EAAA,GAuCvBnF,EAvCuBoF,EAAA,GAuCVnF,EAvCUmF,EAAA,GAAAG,EAwCuC/T,oBAAkB,GAxCzDgU,EAAA9T,OAAAC,EAAA,EAAAD,CAAA6T,EAAA,GAwCvBwK,EAxCuBvK,EAAA,GAwCKwK,EAxCLxK,EAAA,GA0CxByK,EAA8B/e,EAAU,2BACxCgf,EAAqChf,EAAU,kCAC/Cif,EAAiCjf,EAAU,0BAE3Ckf,EAAgClf,EAAU,4BAC1CkW,GAAyBlW,EAAU,oCACnCmf,GAA4Bnf,EAAU,4BAExC4R,GAAW,EACXC,IAAc,EACdC,IAAkB,EAEtBjR,oBAAU,WACRC,IAAMC,IAAIge,GAAqB/d,KAAK,SAACC,GACnCgd,EAAqBhd,EAASC,QAGhCJ,IAAMC,IAAIie,GAA4Bhe,KAAK,SAACC,GAC1Ckd,EAA4Bld,EAASC,QAGvCJ,IAAMC,IAAIme,GAAuBle,KAAK,SAACC,GACrCsd,EAAqBtd,EAASC,SAE/B,CAAC2d,IAEJ,IAuEMxP,GAAoB,SAACtL,GACzBA,EAAEE,iBACF,IAAMD,EAASD,EAAEC,OAAOsL,aAAa,QAC/BhL,EAAW5C,SAAS6N,cAAcvL,GAAQwL,UAC9B9N,SAASC,eACzB,4BAGQ8N,SAAS,EAAGnL,EAAW,KAG7BoL,GAAY,SAACC,GACjBZ,EAAeY,IAGXoC,GAAgB,SAAChO,GACrB4N,EAAc5N,GACd6N,GAAW,EACXC,IAAc,EACdC,IAAkB,GAGpB,OACE3Q,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,gCAAd,oBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACbb,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,EACI,uDACA,yBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,sCACLtC,QAASoN,IAFX,yBAOFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,EACI,uDACA,yBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,2CACLtC,QAASoN,IAFX,eAOFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,EACI,uDACA,yBAEN7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,qCACLtC,QAASoN,IAFX,gBASNlO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAA2B4B,GAAG,4BAC3CzC,EAAAC,EAAAC,cAAA,OACEW,UAAU,qCACV4B,GAAG,sCAEHzC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mDAAd,wBAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,kDAAb,gHAIAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLmB,YAAY,2BACZ3B,UAAU,kCACV8B,SAAU,SAACC,GAAD,OAAYgO,GAAchO,EAAEC,OAAOzC,WAGjDJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4CACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCAAf,YAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCAAf,WAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACZgc,EACE3Q,OAAO,SAACwC,GAEP,OADA+B,IAAY,EACO,KAAfF,EACK7B,EAEPA,EAAIK,WACD3C,WACAsD,MAAM,EAAGa,EAAW1G,QACpBgH,SAASN,IAEZG,IAAc,EACPhC,QACE+B,IAAYoM,EAAkBhT,QAAyB,GAAf6G,KACjDC,IAAkB,MAGrBrJ,IAAI,SAACrI,GACJ,OACEe,EAAAC,EAAAC,cAAA,OACEW,UAAU,oCACV4G,IAAKxI,EAAM8P,YAEX/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,mBACmB5B,EAAMwd,aAEzBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,eACe5B,EAAM8P,YAErB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,oBACoB5B,EAAM0Q,iBAE1B3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,aACa5B,EAAMsQ,UAEnBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BAAf,SACS,IACN5B,EAAMuQ,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,MAGhD1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,6BACVyC,IAAKrE,EAAMoL,oBAMtBsG,IACC3Q,EAAAC,EAAAC,cAAA,OACEW,UAAU,gCACVyC,IAAKwN,KACLtN,IAAI,iBAMdxD,EAAAC,EAAAC,cAAA,OACEW,UAAU,0CACV4B,GAAG,2CAEHzC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,+CAAd,cAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,8CAAb,gGAI8B,GAA7Bsc,EAAmBtT,QAClB7J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6CACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAK+L,KACL7L,IAAI,UACJ3C,UAAU,oDAGdb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,6CAAb,6BAK2B,IAA9Bsc,EAAmBtT,QAClB7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACZsc,EAAmB7V,IAAI,SAAC2W,EAAMzP,GAC7B,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,uBAAd,oCAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,eACeod,EAAKtO,iBAEpB3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,eACeod,EAAKlP,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BAAf,aACaod,EAAK1O,UAElBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAf,WACWod,EAAKC,eAEhBle,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAf,UACUod,EAAKzO,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,KAEpD1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,iBACcod,EAAKE,UAAYF,EAAKE,UAAY,KAEhDne,EAAAC,EAAAC,cAAA,UACEW,UAAU,8BACV4G,IAAK+G,EACL4P,aAAY5P,EACZ1N,QAAS,kBAlSL,SAAC0N,GACvB7O,IAAMoD,KAAK+a,EAAwB,CACjChO,UAAWqN,EAAmB3O,GAAOO,WACrCrC,OAAQyQ,EAAmB3O,GAAOe,WACjC1P,KAAK,SAACC,GACHA,EAASC,KAAKD,EAASC,KAAK8J,OAAS,GAAGwU,UAC1CnB,EAAmBpd,EAASC,MAC5Bwd,EAAkB,GAClBE,EAAcjP,GACd8O,GAAkB,IACS,cAAlBxd,EAASC,MAClBwd,EAAkB,GAClBE,EAAcjP,GACd8O,GAAkB,KAElBJ,EAAmBpd,EAASC,MAC5Bwd,EAAkB,GAClBE,EAAcjP,GACd8O,GAAkB,MAgRWgB,CAAgB9P,KAJjC,iCAeZxO,EAAAC,EAAAC,cAAA,OACEW,UAAU,oCACV4B,GAAG,qCAEHzC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mDAAd,aAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,kDAAb,iGAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLmB,YAAY,2BACZ3B,UAAU,kCACV8B,SAAU,SAACC,GAAD,OAAYgO,GAAchO,EAAEC,OAAOzC,WAGjDJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4CACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCAAf,YAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCAAf,WAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACZkc,EACE7Q,OAAO,SAACwC,GAEP,OADA+B,IAAY,EACO,KAAfF,EACK7B,EAEPA,EAAIK,WACD3C,WACAsD,MAAM,EAAGa,EAAW1G,QACpBgH,SAASN,IAEZG,IAAc,EACPhC,QACE+B,IAAYsM,EAAyBlT,QAAyB,GAAf6G,KACxDC,IAAkB,MAGrBrJ,IAAI,SAACrI,GACJ,OACEe,EAAAC,EAAAC,cAAA,OACEW,UAAU,oCACV4G,IAAKxI,EAAM8P,YAEX/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,mBACmB5B,EAAMwd,aAEzBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,eACe5B,EAAM8P,YAErB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BAAf,oBACoB5B,EAAM0Q,iBAE1B3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BAAf,aACa5B,EAAMsQ,UAEnBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BAAf,SACS,IACN5B,EAAMuQ,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,MAGhD1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,+BACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,6BACVyC,IAAKrE,EAAMoL,oBAMtBsG,IACC3Q,EAAAC,EAAAC,cAAA,OACEW,UAAU,gCACVyC,IAAKwN,KACLtN,IAAI,kBAOhBxD,EAAAC,EAAAC,cAACqe,GAAD,CACE7d,OAAQ2c,EACRpc,WArUa,WACjBqc,GAAkB,IAqUdf,QAASU,EACTX,eAAgBA,EAChBpH,cApWgB,SAACvK,GACrB,IAAI6D,EAAQ7D,EACZhL,IAAMoD,KAAKgS,GAAX1V,OAAAiC,EAAA,EAAAjC,CAAA,GACK8d,EAAmB3O,GADxB,CAEE2G,WAAY,KACXtV,KAAK,SAACC,GACe,sBAAlBA,EAASC,MACX4d,GAAgCD,MA8VhChM,cArXiB,SAAC/G,GACtB,IAAI6D,EAAQ7D,EACZhL,IAAMoD,KAAKgS,GAAX1V,OAAAiC,EAAA,EAAAjC,CAAA,GACK8d,EAAmB3O,GADxB,CAEEgQ,YAAavB,EACb9H,WAAY,KACXtV,KAAK,SAACC,GACP6d,GAAgCD,MA+W9BhB,uBApVyB,SAAClO,GAC9B7O,IAAMoD,KAAKib,GAAX3e,OAAAiC,EAAA,EAAAjC,CAAA,GACK8d,EAAmB3O,GADxB,CAEEgQ,YAAavB,EACb9H,WAAY,KACXtV,KAAK,SAACC,GACP6d,GAAgCD,MA+U9BlP,MAAOgP,mCClSAiB,kBA5LY,SAACxf,GAAe,IAAAC,EACLC,mBAAS,IADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClCqR,EADkCnR,EAAA,GACtBoR,EADsBpR,EAAA,GAErCqR,EAAW,EACXC,GAAc,EACdC,GAAkB,EAEhB+N,EAAe,SAAC9b,GACpB4N,EAAc5N,GACd6N,EAAW,EACXC,GAAc,EACdC,GAAkB,GAGdgO,EAAkB,SAACnQ,GACvBvP,EAAM2f,iBAAiBpQ,IAGzB,OAA0B,IAAtBvP,EAAMsL,YAENvK,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLmB,YAAY,2BACZ3B,UAAU,sBACV8B,SAAU,SAACC,GAAD,OAAY8b,EAAa9b,EAAEC,OAAOzC,WAGhDJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BAAf,YACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,WAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACZ5B,EAAM4f,iBACJ3S,OAAO,SAACwC,GAEP,OADA+B,GAAY,EACO,KAAfF,EACK7B,EAEPA,EAAIK,WACD3C,WACAsD,MAAM,EAAGa,EAAW1G,QACpBgH,SAASN,IAEZG,GAAc,EACPhC,QAEP+B,GAAYxR,EAAM4f,iBAAiBhV,QACpB,GAAf6G,IAEAC,GAAkB,MAGrBrJ,IAAI,SAACrI,EAAYuP,GAChB,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAwB4G,IAAK+G,GAC1CxO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,mBACmB5B,EAAMwd,aAEzBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,eACe5B,EAAM8P,YAErB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAf,4BAC4B5B,EAAM0Q,iBAElC3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCAAf,mBACmB5B,EAAMif,eAEzBle,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCAAf,aACa5B,EAAM6f,eAEnB9e,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCAAf,UACU5B,EAAMuQ,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,KAErD1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4CACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,sCACVC,QAAS,kBAAM6d,EAAgBnQ,KAFjC,wBAQJxO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,kBACVyC,IAAKrE,EAAMoL,oBAMtBsG,GACC3Q,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAKwN,KACLtN,IAAI,gBAQZxD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qBAAf,kBACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,cACbb,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLmB,YAAY,2BACZ3B,UAAU,sBACV8B,SAAU,SAACC,GAAD,OAAY8b,EAAa9b,EAAEC,OAAOzC,WAGhDJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BAAf,YACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,WAEFb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACZ5B,EAAM4f,iBACJ3S,OAAO,SAACwC,GAEP,OADA+B,GAAY,EACO,KAAfF,EACK7B,EAEPA,EAAIK,WACD3C,WACAsD,MAAM,EAAGa,EAAW1G,QACpBgH,SAASN,IAEZG,GAAc,EACPhC,QAEP+B,GAAYxR,EAAM4f,iBAAiBhV,QACpB,GAAf6G,IAEAC,GAAkB,MAGrBrJ,IAAI,SAACrI,EAAYuP,GAChB,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBAAwB4G,IAAK+G,GAC1CxO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,qCACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,mBACmB5B,EAAMwd,aAEzBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gCAAf,eACe5B,EAAM8P,YAErB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCAAf,4BAC4B5B,EAAM0Q,iBAElC3P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCAAf,WACW5B,EAAMif,eAEjBle,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mCAAf,aACa5B,EAAM6f,eAEnB9e,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCAAf,UACU5B,EAAMuQ,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,MAGvD1P,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAAA,OACEW,UAAU,kBACVyC,IAAKrE,EAAMoL,oBAMtBsG,GACC3Q,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAKwN,KACLtN,IAAI,kBChLZub,WAAuBxe,SAASC,eAAe,kBAiKtCwe,GA/JO,SAAC/f,GACrB,IAAM8E,EAAMlF,EAAU,yBAChBogB,EAAgBhgB,EAAMggB,cAFQ/f,EAGoBC,mBAAc,IAHlCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAG7BggB,EAH6B9f,EAAA,GAGP+f,EAHO/f,EAAA,GAK9B4L,EAAc,WAClB/L,EAAMgC,cAGFme,EAAiB,SAACC,GACtBpgB,EAAMmgB,eAAeC,GACrBpgB,EAAMgC,cAWR,OARAvB,oBAAU,WACqB,IAAzBT,EAAMqd,gBACR3c,IAAMoD,KAAKgB,EAAKkb,GAAepf,KAAK,SAACC,GACnCqf,EAAwBrf,EAASC,SAGpC,IAEEd,EAAMyB,OAEkB,IAAzBzB,EAAMqd,eACD3b,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,qCAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,2BAAd,+CAGAb,EAAAC,EAAAC,cAAA,uCACCgf,EAAqB5X,IAAI,SAACkV,GACzB,OACExc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,sBAAd,+BACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBAAf,gBACgB2b,EAAKC,aAErBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BAAf,eACe2b,EAAKzN,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,aACa2b,EAAKsC,kBAKxB9e,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,0CACVC,QAAS,kBAAMse,EAAe,KAFhC,WAMApf,EAAAC,EAAAC,cAAA,UACEW,UAAU,yCACVC,QAAS,kBAAMse,EAAe,KAFhC,eASNL,IAEgC,IAAzB9f,EAAMqd,eACR3b,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,qCAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,2BAAd,uCAGAb,EAAAC,EAAAC,cAAA,sDAC0CjB,EAAMqgB,mBAAoB,IADpE,uEAEoE,IACjErgB,EAAMsgB,qBAHT,eAKCL,EAAqB5X,IAAI,SAACkV,GACzB,OACExc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,sBAAd,+BACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBAAf,gBACgB2b,EAAKC,aAErBzc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,6BAAf,eACe2b,EAAKzN,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BAAf,aACa2b,EAAKsC,kBAKxB9e,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,0CACVC,QAAS,kBAAMse,EAAe,KAFhC,WAMApf,EAAAC,EAAAC,cAAA,UACEW,UAAU,yCACVC,QAAS,kBAAMse,EAAe,KAFhC,eASNL,IAGKpe,IAASC,aACdZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kCACbb,EAAAC,EAAAC,cAAA,UACEY,QAASkK,EACTnK,UAAU,qCAFZ,KAMAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,2BAAd,wDAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAKqZ,IACLnZ,IAAI,cACJ3C,UAAU,iCAGdb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,+CACVC,QAAS,kBAAMse,EAAe,KAFhC,2BASNL,IApIsB,MCjBtB7d,GAAU,SAACC,EAAYC,GAC3B,MAAoB,uBAAhBA,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,wBACdqJ,eAAgB,EAChBtJ,aAAa,IAGG,gBAAhBH,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEK,aAAc,+CACdD,aAAa,EACbsJ,eAAgB,IAGA,gBAAhBzJ,EAAOC,KACFhC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbsJ,eAAgB,EAChBrJ,aAAc,KAGXnC,OAAAiC,EAAA,EAAAjC,CAAA,GACF8B,EADL,CAEEI,aAAa,EACbC,aAAc,GACdqJ,eAAgB,KAIdnJ,GAAoB,CACxBH,aAAa,EACbC,aAAc,GACdqJ,eAAgB,GA+rBH2U,GA5rBD,WAAM,IAAAtgB,EAekBC,mBAAuB,IAfzCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAeXsN,EAfWpN,EAAA,GAeCqN,EAfDrN,EAAA,GAAA0C,EAgBQ3C,mBAAmB,IAhB3B4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAgBX2d,EAhBW1d,EAAA,GAgBJ2d,EAhBI3d,EAAA,GAAAwD,EAiBoBpG,mBAAmB,IAjBvCqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAiBXoa,EAjBWna,EAAA,GAiBEoa,EAjBFpa,EAAA,GAAAG,EAkB8BxG,mBAAmB,IAlBjDyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAkBXka,EAlBWja,EAAA,GAkBOka,EAlBPla,EAAA,GAAAG,EAmBsC5G,mBAAc,MAnBpD6G,EAAA3G,OAAAC,EAAA,EAAAD,CAAA0G,EAAA,GAmBXwH,EAnBWvH,EAAA,GAmBWwH,EAnBXxH,EAAA,GAAAG,EAoB4BhH,mBAAc,MApB1CiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAoBX4Z,EApBW3Z,EAAA,GAoBM4Z,EApBN5Z,EAAA,GAAAE,EAqBUnH,mBAAiB,IArB3BoH,EAAAlH,OAAAC,EAAA,EAAAD,CAAAiH,EAAA,GAqBXoG,EArBWnG,EAAA,GAqBHoG,EArBGpG,EAAA,GAAAE,EAsBgCtH,mBAAiB,IAtBjDuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAoH,EAAA,GAAA4G,GAAA3G,EAAA,GAAAA,EAAA,GAuBsBvH,mBAAiB,KAvBvCmO,EAAAjO,OAAAC,EAAA,EAAAD,CAAAgO,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAwB8BnO,mBAAc,KAxB5CuO,EAAArO,OAAAC,EAAA,EAAAD,CAAAoO,EAAA,GAAAqF,GAAApF,EAAA,GAAAA,EAAA,GAyBoBvO,mBAAiB,KAzBrC4T,EAAA1T,OAAAC,EAAA,EAAAD,CAAAyT,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GA0BgC5T,mBAAc,KA1B9CgU,EAAA9T,OAAAC,EAAA,EAAAD,CAAA6T,EAAA,GA0BX+M,EA1BW9M,EAAA,GA0BQ+M,EA1BR/M,EAAA,GAAAC,EA2BoCjU,mBAAc,IA3BlDkU,EAAAhU,OAAAC,EAAA,EAAAD,CAAA+T,EAAA,GA2BX+M,EA3BW9M,EAAA,GA2BU+M,EA3BV/M,EAAA,GAAAE,EA4BwBpU,mBAAc,IA5BtCqU,GAAAnU,OAAAC,EAAA,EAAAD,CAAAkU,EAAA,GA4BX0L,GA5BWzL,GAAA,GA4BI6M,GA5BJ7M,GAAA,GAAAG,GA6B8CxU,mBAC9D,IA9BgByU,GAAAvU,OAAAC,EAAA,EAAAD,CAAAsU,GAAA,GA6BX2M,GA7BW1M,GAAA,GA6Be2M,GA7Bf3M,GAAA,GAAAG,GAiChB5U,oBAAkB,GAjCF6U,GAAA3U,OAAAC,EAAA,EAAAD,CAAA0U,GAAA,GAgCXyM,GAhCWxM,GAAA,GAgCWyM,GAhCXzM,GAAA,GAAAG,GAkC0BhV,mBAAiB,GAlC3CiV,GAAA/U,OAAAC,EAAA,EAAAD,CAAA8U,GAAA,GAkCXmI,GAlCWlI,GAAA,GAkCKmJ,GAlCLnJ,GAAA,GAAAC,GAmCkBlV,mBAAiB,GAnCnCmV,GAAAjV,OAAAC,EAAA,EAAAD,CAAAgV,GAAA,GAmCXmJ,GAnCWlJ,GAAA,GAmCCmJ,GAnCDnJ,GAAA,GAAAoM,GAoC0BvhB,oBAAkB,GApC5CwhB,GAAAthB,OAAAC,EAAA,EAAAD,CAAAqhB,GAAA,GAoCXrD,GApCWsD,GAAA,GAoCKrD,GApCLqD,GAAA,GAAAC,GAqCkCzhB,mBAAiB,GArCnD0hB,GAAAxhB,OAAAC,EAAA,EAAAD,CAAAuhB,GAAA,GAqCXtB,GArCWuB,GAAA,GAqCSC,GArCTD,GAAA,GAAAE,GAsCsC5hB,mBAAiB,GAtCvD6hB,GAAA3hB,OAAAC,EAAA,EAAAD,CAAA0hB,GAAA,GAsCXxB,GAtCWyB,GAAA,GAsCWC,GAtCXD,GAAA,GAAAE,GAuCc/hB,mBAAc,IAvC5BgiB,GAAA9hB,OAAAC,EAAA,EAAAD,CAAA6hB,GAAA,GAuCXE,GAvCWD,GAAA,GAuCDE,GAvCCF,GAAA,GAAAjf,GAwCQC,qBAAWjB,GAASQ,IAxC5BU,GAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,GAAA,GAwCXf,GAxCWiB,GAAA,GAwCJC,GAxCID,GAAA,GAyCZkf,GAA4B3V,iBAAO,MACnC4V,GAAsC5V,iBAAO,MA1CjC6V,GA2C4BriB,oBAAkB,GA3C9CsiB,GAAApiB,OAAAC,EAAA,EAAAD,CAAAmiB,GAAA,GA2CXjN,GA3CWkN,GAAA,GA2CMjN,GA3CNiN,GAAA,GAAAC,GA+ChBviB,mBAAc,MA/CEwiB,GAAAtiB,OAAAC,EAAA,EAAAD,CAAAqiB,GAAA,GA8CXE,GA9CWD,GAAA,GA8CcE,GA9CdF,GAAA,GAAAG,GAgD2B3iB,mBAAiB,IAhD5C4iB,GAAA1iB,OAAAC,EAAA,EAAAD,CAAAyiB,GAAA,GAgDXE,GAhDWD,GAAA,GAgDKE,GAhDLF,GAAA,GAAAG,GAiDiC/iB,mBAAc,MAjD/CgjB,GAAA9iB,OAAAC,EAAA,EAAAD,CAAA6iB,GAAA,GAiDXE,GAjDWD,GAAA,GAiDQE,GAjDRF,GAAA,GAAAG,GAmDhBnjB,mBAAc,MAnDEojB,GAAAljB,OAAAC,EAAA,EAAAD,CAAAijB,GAAA,GAkDXE,GAlDWD,GAAA,GAkDaE,GAlDbF,GAAA,GAAAG,GAoDoBvjB,mBAAS,GApD7BwjB,GAAAtjB,OAAAC,EAAA,EAAAD,CAAAqjB,GAAA,GAoDX/U,GApDWgV,GAAA,GAoDE/U,GApDF+U,GAAA,GAsDZ9U,GAA0BhP,EAAU,iBACpC+jB,GAAyB/jB,EAAU,uBACnCgkB,GACJhkB,EAAU,mCACNikB,GAA0BjkB,EAAU,oBACpCkkB,GAA4BlkB,EAAU,yBACtCmkB,GACJnkB,EAAU,mCACNokB,GAAgCpkB,EAAU,0BAC1CqkB,GAAgCrkB,EAAU,2BAC1CskB,GAAiCtkB,EAAU,2BAC3CukB,GAA+BvkB,EAAU,2BAE/Ca,oBAAU,WACRC,IAAMC,IAAIiO,IAAiBhO,KAAK,SAACC,GAC/B2M,EAAc3M,EAASC,QAGzBJ,IAAMC,IAAIgjB,IAAgB/iB,KAAK,SAACC,GAC9B4f,EAAS5f,EAASC,MAClB6f,EAAe9f,EAASC,MACxB+f,EAAoBhgB,EAASC,QAG/BJ,IAAMC,IAAImjB,IAAmBljB,KAAK,SAACC,GACjCsgB,EAAuBtgB,EAASC,QAGlCJ,IAAMC,IAAIkjB,IAAiBjjB,KAAK,SAACC,GAC/BogB,EAAqBpgB,EAASC,QAGhCJ,IAAMC,IAAIojB,IAA8BnjB,KAAK,SAACC,GAC5CygB,GAA4BzgB,EAASC,SAiCtC,CAACwU,KAGJ,IAAM8O,GAAoB,eAAA5e,EAAApF,OAAAikB,GAAA,EAAAjkB,CAAAkkB,GAAAtjB,EAAAujB,KAAG,SAAAC,EAAOC,EAAoB/Y,GAA3B,IAAA7K,EAAA,OAAAyjB,GAAAtjB,EAAA0jB,KAAA,SAAAC,GAAA,cAAAA,EAAA5X,KAAA4X,EAAAC,MAAA,cAAAD,EAAA5X,KAAA,EAAA4X,EAAAC,KAAA,EAEFlkB,IAAMoD,KAAKlE,EAAU,2BAA4B,CACtE6kB,aACA/Y,YAJuB,cAEnB7K,EAFmB8jB,EAAAE,KAAAF,EAAAG,OAAA,SAMlBjkB,EAASC,MANS,OAAA6jB,EAAA5X,KAAA,EAAA4X,EAAAI,GAAAJ,EAAA,SAQzB7iB,QAAQkU,MAAR2O,EAAAI,IARyB,yBAAAJ,EAAAK,SAAAR,EAAA,iBAAH,gBAAAS,EAAAC,GAAA,OAAA1f,EAAA2f,MAAAC,KAAAC,YAAA,GAYpBC,GAAkB,SAACC,EAAqBC,GAC5C,IAAIC,EAAS,GACb,MAA8B,kBAAnBF,GAAkD,OAAnBA,EACxCE,EAASF,EAAeC,GAAgBrY,WAEL,kBAAnBoY,GAAkD,OAAnBA,EAC/CE,EAASF,EAGJE,GAGHC,GAAe,eAAAC,EAAAvlB,OAAAikB,GAAA,EAAAjkB,CAAAkkB,GAAAtjB,EAAAujB,KAAG,SAAAqB,IAAA,IAAAC,EAAAC,EAAAnW,EAAAoW,EAAAnW,EAAAG,EAAAiW,EAAA,OAAA1B,GAAAtjB,EAAA0jB,KAAA,SAAAuB,GAAA,cAAAA,EAAAlZ,KAAAkZ,EAAArB,MAAA,cAClBiB,EAAiCP,GACnChX,EACA,cAEEwX,EAA4BR,GAC9BxE,EACA,YAEEnR,GAA4B,EAC5BoW,GAAuB,EAErBnW,EAAgBC,WAAWpC,GAZXwY,EAAArB,KAAA,EAeGR,GAAqB,EAAGyB,GAf3B,cAetBlW,EAfsBsW,EAAApB,KAAAoB,EAAArB,KAAA,GAgBFR,GAAqB,EAAG0B,GAhBtB,QAgBtBC,EAhBsBE,EAAApB,KAkBlB9U,EAAoC,KAAtB+V,EACdE,EAA0C,KAA3BH,EAEjB7V,OAAOC,UAAUL,IACjBA,EAAgB,GAChBG,GACAiW,GACAD,GACApW,EAEAjP,IAAMoD,KAAK8f,GAAsB,CAC/B1T,aAAczC,EACd0C,mBAAoB0V,EACpBK,OAAQJ,IACPllB,KAAK,SAACC,GACPuC,GAAS,CAAEhB,KAAM,uBACjBmM,EAAwB,MACxBwS,EAAmB,MACnBuB,GAA+BxV,QAAQ3L,MAAQ,KAGjDiC,GAAS,CAAEhB,KAAM,gBAvCG,yBAAA6jB,EAAAjB,SAAAY,MAAH,yBAAAD,EAAAR,MAAAC,KAAAC,YAAA,GA2CfrjB,GAAa,WACjBqc,IAAkB,GAClBjb,GAAS,CAAEhB,KAAM,iBAab+jB,GAAU,eAAAC,EAAAhmB,OAAAikB,GAAA,EAAAjkB,CAAAkkB,GAAAtjB,EAAAujB,KAAG,SAAA8B,EAAOvhB,EAAa4G,GAApB,IAAA7K,EAAA,OAAAyjB,GAAAtjB,EAAA0jB,KAAA,SAAA4B,GAAA,cAAAA,EAAAvZ,KAAAuZ,EAAA1B,MAAA,cAAA0B,EAAAvZ,KAAA,EAAAuZ,EAAA1B,KAAA,EAEuBlkB,IAAMoD,KAAKgB,EAAK4G,GAFvC,cAET7K,EAFSylB,EAAAzB,KAAAyB,EAAAxB,OAAA,SAGRjkB,EAASC,MAHD,cAAAwlB,EAAAvZ,KAAA,EAAAuZ,EAAAvB,GAAAuB,EAAA,SAKfxkB,QAAQkU,MAAM,oBAAdsQ,EAAAvB,IALeuB,EAAAxB,OAAA,mCAAAwB,EAAAtB,SAAAqB,EAAA,iBAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAjB,MAAAC,KAAAC,YAAA,GAUVoB,GAA4B,eAAAC,EAAAtmB,OAAAikB,GAAA,EAAAjkB,CAAAkkB,GAAAtjB,EAAAujB,KAAG,SAAAoC,IAAA,IAAAd,EAAAe,EAAAC,EAAAlX,EAAAmX,EAAAC,EAAAnX,EAAAG,EAAAiW,EAAAgB,EAAAlmB,EAAA,OAAAwjB,GAAAtjB,EAAA0jB,KAAA,SAAAuC,GAAA,cAAAA,EAAAla,KAAAka,EAAArC,MAAA,cAC/BiB,EAAiCP,GACnC3C,GACA,cAEEiE,EAAkCtB,GACpCnC,GACA,YAEE0D,EAAuCvB,GACzC/B,GACA,YAEE5T,GAA4B,EAC5BmX,GAAwB,EACxBC,GAAwB,EACtBnX,EAAgBC,WAAWkT,IAhBEkE,EAAArC,KAAA,EAmBVR,GAAqB,EAAGyB,GAnBd,cAmBnClW,EAnBmCsX,EAAApC,KAAAoC,EAAArC,KAAA,GAoBdR,GAAqB,EAAGwC,GApBV,eAoBnCE,EApBmCG,EAAApC,KAAAoC,EAAArC,KAAA,GAqBdR,GAAqB,EAAGyC,GArBV,WAqBnCE,EArBmCE,EAAApC,KAuB/B9U,EAAyC,KAA3B8V,GAAiClW,EAC/CqW,EAA2C,KAA5BY,GAAkCE,EACjDE,EAAgD,KAAjCH,GAAuCE,IAGxD/W,OAAOC,UAAUL,IACjBA,EAAgB,GAChBG,GACAiW,GACAgB,GAhCiC,CAAAC,EAAArC,KAAA,gBAkC3B9jB,EAAO,CACXwP,SAAUyS,GACVjT,WAAY+V,EACZqB,cAAeN,EACfO,eAAgBN,GAtCeI,EAAArC,KAAA,GAwCOuB,GACtChC,GACArjB,GA1C+B,QAAAmmB,EAAApC,KA4CjCjC,GAA4B,MAC5BP,GAAqBvV,QAAQ3L,MAAQ,GACrCiiB,GAAsB,MACtBI,GAA2B,MAC3BhC,IAAwB,GACxBjM,IAAoBD,IACpBlS,GAAS,CAAEhB,KAAM,uBAlDgB6kB,EAAArC,KAAA,iBAoDjCxhB,GAAS,CAAEhB,KAAM,gBApDgB,yBAAA6kB,EAAAjC,SAAA2B,MAAH,yBAAAD,EAAAvB,MAAAC,KAAAC,YAAA,GAwD5B+B,GAAsB,eAAAC,EAAAjnB,OAAAikB,GAAA,EAAAjkB,CAAAkkB,GAAAtjB,EAAAujB,KAAG,SAAA+C,EAAO/X,GAAP,IAAAgY,EAAA1mB,EAAA2mB,EAAAC,EAAA,OAAAnD,GAAAtjB,EAAA0jB,KAAA,SAAAgD,GAAA,cAAAA,EAAA3a,KAAA2a,EAAA9C,MAAA,cACvB2C,EAAelG,GAAyB9R,GADjBmY,EAAA9C,KAAA,EAEWuB,GAAWlC,GAAD7jB,OAAAiC,EAAA,EAAAjC,CAAA,GAC7CihB,GAAyB9R,KAHD,OAEvB1O,EAFuB6mB,EAAA7C,KAK7BzC,GAAY,CACVmF,EAAajX,SACbiX,EAAaJ,eACbI,EAAaI,kBAEfnJ,GAAcjP,QACMqY,IAAhB/mB,EAAS,IACL2mB,EAA8B3mB,EAAS+J,OACvC6c,EAAwBlR,SAASgR,EAAajX,UAChDkX,EAAsBC,GACxBnJ,GAAkB,GAClBuD,GAAsB4F,EAAgBD,GACtCxF,GAAwBwF,GACxBpG,GAAiBvgB,GACjBwd,IAAkB,KAElBC,GAAkB,GAClB8C,GAAiBvgB,GACjBwd,IAAkB,MAGpBC,GAAkB,GAClBD,IAAkB,IA3BS,wBAAAqJ,EAAA1C,SAAAsC,MAAH,gBAAAO,GAAA,OAAAR,EAAAlC,MAAAC,KAAAC,YAAA,GA+BtByC,GAAsB,eAAAC,EAAA3nB,OAAAikB,GAAA,EAAAjkB,CAAAkkB,GAAAtjB,EAAAujB,KAAG,SAAAyD,EAAOC,GAAP,OAAA3D,GAAAtjB,EAAA0jB,KAAA,SAAAwD,GAAA,cAAAA,EAAAnb,KAAAmb,EAAAtD,MAAA,UACT,IAAhBqD,EADyB,CAAAC,EAAAtD,KAAA,eAAAsD,EAAAtD,KAAA,EAInBuB,GAAWjC,GAAwB,CACvCiE,mBAAoBnI,GACpBlf,KAAM,CACJqmB,eAAgBhF,GAAS,GACzBwF,gBAAiBxF,GAAS,GAC1B8F,iBATqB,OAAAC,EAAArD,KAY3BtP,IAAoBD,IAZO4S,EAAAtD,KAAA,mBAaF,IAAhBqD,EAbkB,CAAAC,EAAAtD,KAAA,gBAAAsD,EAAAtD,KAAA,GAgBnBuB,GAAWjC,GAAwB,CACvCpjB,KAAM,CAAE6mB,gBAAiBxF,GAAS,GAAI8F,iBAjBf,QAAAC,EAAArD,KAmB3BtP,IAAoBD,IAnBO4S,EAAAtD,KAAA,oBAoBF,IAAhBqD,EApBkB,CAAAC,EAAAtD,KAAA,gBAAAsD,EAAAtD,KAAA,GAuBnBuB,GAAWjC,GAAwB,CACvCiE,mBAAoBnI,GACpBlf,KAAM,CACJqmB,eAAgBhF,GAAS,GACzBwF,gBAAiBxF,GAAS,GAC1B8F,cACAG,WAAY9H,MA7BS,QAAA4H,EAAArD,KAgC3BtP,IAAoBD,IAhCO,yBAAA4S,EAAAlD,SAAAgD,MAAH,gBAAAK,GAAA,OAAAN,EAAA5C,MAAAC,KAAAC,YAAA,GAoDtBpW,GAAoB,SAACtL,GACzBA,EAAEE,iBACF,IAAMD,EAASD,EAAEC,OAAOsL,aAAa,QAC/BhL,EAAW5C,SAAS6N,cAAcvL,GAAQwL,UAC9B9N,SAASC,eAAe,gBAEhC8N,SAAS,EAAGnL,EAAW,KAG7BoL,GAAY,SAACC,GACjBZ,GAAeY,IAGjB,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAd,WACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBACbb,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GAAoB,+BAAiC,aAEvD7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,oBAAoBtC,QAASoN,IAArC,gCAIFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GAAoB,+BAAiC,aAEvD7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,kCACLtC,QAASoN,IAFX,uBAOFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GAAoB,+BAAiC,aAEvD7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,+BAA+BtC,QAASoN,IAAhD,uBAIFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GAAoB,+BAAiC,aAEvD7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,8BAA8BtC,QAASoN,IAA/C,8BAIFlO,EAAAC,EAAAC,cAAA,OACEW,UACkB,IAAhB8M,GAAoB,+BAAiC,aAEvD7M,QAAS,kBAAMyN,GAAU,KAEzBvO,EAAAC,EAAAC,cAAA,KACEkD,KAAK,oCACLtC,QAASoN,IAFX,uCAUNlO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uBAAuB4B,GAAG,gBACvCzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBAAmB4B,GAAG,oBACnCzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACbb,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4CACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASmE,EACT/J,GAAG,aACH0I,MAAM,aACNC,OAAO,yBACPhL,MAAOmN,EACP5K,SAAU,SAAC+L,GAAD,OAAclB,EAAwBkB,OAGpD1O,EAAAC,EAAAC,cAAA,SACEwL,IAAK6V,GACL9e,GAAG,sCACHF,KAAK,eACL1B,UAAU,sCACV2B,YAAY,qBACZnB,KAAK,SACLqB,aAAa,MACbC,SAAU,SAACC,GACT+J,EAAU/J,EAAEC,OAAOzC,UAGvBJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASoX,EACThd,GAAG,WACH0I,MAAM,gBACNC,OAAO,qBACPhL,MAAO2f,EACPpd,SAAU,SAAC+L,GAAD,OAAcsR,EAAmBtR,OAG/C1O,EAAAC,EAAAC,cAAA,UACEW,UAAU,6BACVQ,KAAK,SACLP,QAAS6jB,IAHX,WASF3kB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,6CAAd,yCAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,4CAAb,qTAUJb,EAAAC,EAAAC,cAAA,OACEW,UAAU,iCACV4B,GAAG,kCAEHzC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,sCAAd,sBAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,qCAAb,qEAGAb,EAAAC,EAAAC,cAACqnB,GAAD,CACE1I,iBAAkBsB,EAClB5V,YAAa,KAIjBvK,EAAAC,EAAAC,cAAA,OACEW,UAAU,8BACV4B,GAAG,+BAEHzC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,mCAAd,sBAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,kCAAb,uLAKAb,EAAAC,EAAAC,cAACqnB,GAAD,CACE1I,iBAAkBoB,EAClB1V,YAAa,EACbqU,iBAtUc,SAACpQ,GACvB7O,IAAMoD,KAAKkgB,GAAuBhD,EAAkBzR,IAAQ3O,KAC1D,SAACC,GACCogB,EAAqBpgB,EAASC,KAAK,IACnCqgB,EAAuBtgB,EAASC,KAAK,MAGzCyU,IAAoBD,QAmUhBvU,EAAAC,EAAAC,cAAA,OACEW,UAAU,6BACV4B,GAAG,8BAEHzC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASmE,EACT/J,GAAG,aACH0I,MAAM,aACNC,OAAO,yBACPhL,MAAOwhB,GACPjf,SAAU,SAAC+L,GAAD,OAAcmT,GAA4BnT,OAGxD1O,EAAAC,EAAAC,cAAA,SACEwL,IAAK4V,GACL7e,GAAG,mCACHF,KAAK,eACL1B,UAAU,mCACV2B,YAAY,qBACZnB,KAAK,SACLqB,aAAa,MACbC,SAAU,SAACC,GACTqf,GAAmBrf,EAAEC,OAAOzC,UAGhCJ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACbb,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASsX,EACTld,GAAG,WACH0I,MAAM,gBACNC,OAAO,+BACPhL,MAAOgiB,GACPzf,SAAU,SAAC+L,GACT2T,GAAsB3T,GA/NT,SAACA,GAC5B,IAAM8Y,EAAmBC,KAAKC,UAAUhZ,EAAIwP,eAAezO,QACzD,SACA,IAEF9P,IAAMC,IAAIgjB,IAAgB/iB,KAAK,SAACC,GAC9B,IACM6nB,EADa7nB,EAASC,KACUmM,OACpC,SAAC+R,GAAD,OAAeA,EAAKC,gBAAkBsJ,IAExC1H,EAAoB6H,GACpBlF,GAA2B,MAC3BhC,IAAwB,KAoNZmH,CAAqBlZ,OAI3B1O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oCACZ2f,GACCxgB,EAAAC,EAAAC,cAACuO,GAAD,CACEpG,QAASwX,EACTpd,GAAG,WACH0I,MAAM,gBACNC,OAAO,mCACPhL,MAAOoiB,GACP7f,SAAU,SAAC+L,GAAD,OAAc+T,GAA2B/T,MAEnD,MAEN1O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACbb,EAAAC,EAAAC,cAAA,UACEW,UAAU,MACVQ,KAAK,SACLP,QAAS4kB,IAHX,YAUJ1lB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,2CAAd,oCAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,0CAAb,0WAWJb,EAAAC,EAAAC,cAAA,OACEW,UAAU,mCACV4B,GAAG,oCAEHzC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,wCAAd,oCAGAb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,uCAAb,8GAIoC,GAAnCyf,GAAyBzW,QACxB7J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACbb,EAAAC,EAAAC,cAAA,OACEoD,IAAK+L,KACL7L,IAAI,UACJ3C,UAAU,wCAGdb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,iCAAb,6BAKiC,IAApCyf,GAAyBzW,QACxB7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sCACZyf,GAAyBhZ,IAAI,SAAC2W,EAAWzP,GACxC,OACExO,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,qCAAd,oCAGAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wCAAf,qBACkBod,EAAK2I,iBAEvB5mB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4CAAf,eACeod,EAAKlP,YAEpB/O,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yCAAf,aACaod,EAAK1O,UAElBvP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCAAf,kBACkBod,EAAK4J,sBAEvB7nB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCAAf,mBACmBod,EAAK6J,uBAExB9nB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCAAf,UACUod,EAAKzO,UAAUC,QAAQ,IAAK,KAAKC,MAAM,EAAG,KAEpD1P,EAAAC,EAAAC,cAAA,UACEW,UAAU,4CACV4G,IAAK+G,EACL4P,aAAY5P,EACZ1N,QAAS,kBAAMulB,GAAuB7X,KAJxC,kCAgBdxO,EAAAC,EAAAC,cAACmD,EAAD,CAAO3C,OAAQS,GAAMI,YAAaN,WAAYA,IAC5CjB,EAAAC,EAAAC,cAAA,MAAIW,UAAU,oBAAoBM,GAAMK,cACd,IAAzBL,GAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OACEW,UAAU,oBACVyC,IAAK6M,IACL3M,IAAI,aAGkB,IAAzBrC,GAAM0J,gBACL7K,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBAAoByC,IAAKC,IAAYC,IAAI,cAG3D6Z,IACCrd,EAAAC,EAAAC,cAAC6nB,GAAD,CACErnB,QAAQ,EACRO,WAAYA,GACZqb,eAAgBA,GAChB0L,SAAUxK,GACV4B,eAAgB2H,GAChBzH,mBAAoBA,GACpBC,qBAAsBA,GACtBN,cAAeA,gBChtBVgJ,OAxBf,SAAAxjB,GAKQ,IAJEyjB,EAIFzjB,EAJNyjB,OACWC,EAGL1jB,EAHN2jB,UAEGC,GACG5jB,EAFNE,OAEMtF,OAAAipB,GAAA,EAAAjpB,CAAAoF,EAAA,kCACN,OACEzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqoB,EAAA,EAADlpB,OAAAmpB,OAAA,GACMH,EADN,CAEEI,OAAQ,SAACxpB,GACP,OAAKipB,EAIDloB,EAAAC,EAAAC,cAACqoB,EAAA,EAAD,CAAUlkB,GAAI,CAACqkB,SAAU,IAAKvnB,MAAO,CAACwnB,KAAM1pB,EAAMkE,aAH7CnD,EAAAC,EAAAC,cAACioB,EAAD,YCJH1mB,GATF,WAEZ,OAAQzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEN/E,EAAAC,EAAAC,cAAA,qBCkBW0oB,OArBf,SAAAnkB,GAA8E,IAA7CyjB,EAA6CzjB,EAArDyjB,OAA2BC,EAA0B1jB,EAArC2jB,UAAyBC,EAAYhpB,OAAAipB,GAAA,EAAAjpB,CAAAoF,EAAA,wBAC5E,OACEzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqoB,EAAA,EAADlpB,OAAAmpB,OAAA,GACMH,EADN,CAEEI,OAAQ,SAACxpB,GACP,OAAIipB,EACKloB,EAAAC,EAAAC,cAACioB,EAAD,MAGLnoB,EAAAC,EAAAC,cAACqoB,EAAA,EAAD,CACElkB,GAAI,CAACqkB,SAAU,SAAUvnB,MAAO,CAACwnB,KAAM1pB,EAAMkE,mBCsD9C0lB,GArDA,SAAApkB,GAAsC,IAApCqkB,EAAoCrkB,EAApCqkB,IAAKZ,EAA+BzjB,EAA/ByjB,OACpB,OADmDzjB,EAAvBskB,aAGxB/oB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqoB,EAAA,EAAD,KACiB,IAAdO,EAAIpN,OACH1b,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,YACLb,UAAW/M,GACX6M,OAAQA,IAGZloB,EAAAC,EAAAC,cAAC8oB,GAAD,CAAgB5kB,OAAK,EAAC6kB,KAAK,IAAIb,UAAWc,EAAMhB,OAAQA,IACxDloB,EAAAC,EAAAC,cAACqoB,EAAA,EAAD,CAAOnkB,OAAK,EAAC6kB,KAAK,eAAeb,UAAW7b,KAC5CvM,EAAAC,EAAAC,cAAC8oB,GAAD,CACEC,KAAK,aACLb,UAAWe,GACXjB,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,aACLb,UAAWgB,GACXlB,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,UACLb,UAAWiB,GACXnB,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,qBACLb,UAAWxL,GACXsL,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,SACLb,UAAW5I,GACX0I,OAAQA,IAEVloB,EAAAC,EAAAC,cAACqoB,EAAA,EAAD,CAAOU,KAAK,IAAIb,UAAW3mB,OAK1BzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,OCxCXpF,IAAM2pB,SAASC,iBAAkB,EAEjC,IAiGeC,GAjGH,WAAM,IAAAtqB,EACYC,oBAAkB,GAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTgpB,EADS9oB,EAAA,GACDqqB,EADCrqB,EAAA,GAAA0C,EAEY3C,oBAAkB,GAF9B4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAET6C,EAFS5C,EAAA,GAED6C,EAFC7C,EAAA,GAAAwD,EAGwBpG,oBAAkB,GAH1CqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAGTwjB,EAHSvjB,EAAA,GAGKkkB,EAHLlkB,EAAA,GAIV/F,EAAuBZ,EAAU,aACjC8qB,EAAMC,qBAAW9qB,GACnBgqB,EAAM,CACRpN,MAAO,GAGLiO,IACFb,EAAM,CACJpN,MAAOiO,EAAIjO,QAIfhc,oBAAU,WACRC,IAAMC,IAAIH,GACPI,KAAK,SAACC,GACiBA,EAASC,MAE7B0pB,GAAU,GACV7kB,GAAU,KAEV6kB,GAAU,GACV7kB,GAAU,MAGboQ,MAAM,SAACmH,GACNpb,QAAQC,IAAImb,MAEf,CAAC+L,IAEJxoB,oBAAU,aAAU,CAACqpB,IAMrB,OAAIpkB,EAEA3E,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAC2pB,EAAD,CAAQnlB,aARK,WACnBglB,GAAgB,MAQV1pB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8BACbb,EAAAC,EAAAC,cAAC4pB,GAAD,CAAQhB,IAAKA,EAAKZ,OAAQA,EAAQa,aAAcA,OAOxD/oB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC6pB,GAAD,CACEd,KAAK,SACLb,UAAWzmB,EACXumB,OAAQA,EACRvjB,OAAQA,IAEV3E,EAAAC,EAAAC,cAAC8oB,GAAD,CAAgB5kB,OAAK,EAAC6kB,KAAK,IAAIb,UAAWc,EAAMhB,OAAQA,IACxDloB,EAAAC,EAAAC,cAAC8oB,GAAD,CAAgB5kB,OAAK,EAAC6kB,KAAK,eAAeb,UAAW7b,KACrDvM,EAAAC,EAAAC,cAAC8oB,GAAD,CACEC,KAAK,aACLb,UAAWe,GACXjB,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,aACLb,UAAWgB,GACXlB,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,UACLb,UAAWiB,GACXnB,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,qBACLb,UAAWxL,GACXsL,OAAQA,IAEVloB,EAAAC,EAAAC,cAAC8oB,GAAD,CAAgB5kB,OAAK,EAAC6kB,KAAK,SAASb,UAAW5I,GAAO0I,OAAQA,IAC9DloB,EAAAC,EAAAC,cAAC8oB,GAAD,CACE5kB,OAAK,EACL6kB,KAAK,YACLb,UAAW/M,GACX6M,OAAQA,OC/GlBvnB,IAAS8nB,OACPzoB,EAAAC,EAAAC,cAAC8pB,EAAD,KACEhqB,EAAAC,EAAAC,cAAC+pB,GAAD,OAEF1pB,SAASC,eAAe,6BCT1B/B,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,saCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.c9b7379d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.2fc8b26b.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete.c8683c24.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-data.c2258281.svg\";","// DEV\n  //export const baseURL: string = 'http://localhost:52000/';\n\n// PRODUCTION\nexport const baseURL: string = 'http://rutnev.ddns.net:52000/';\n","import React, {\n  createContext,\n  Props,\n  PropsWithChildren,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport Axios from 'axios';\n\nimport {baseURL} from './app/baseURL';\n\nexport const myContext = createContext<any>({});\nfunction Context(props: PropsWithChildren<any>) {\n  const [user, setUser] = useState<any>();\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\n\n  useEffect(() => {\n    Axios.get(isAuthAPIURL)\n      .then((response) => {\n        setUser(response.data);\n      })\n  }, []);\n\n  return <myContext.Provider value={user}>{props.children}</myContext.Provider>;\n}\n\nexport default Context;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/Modal.css';\n\nconst modalID: any = document.getElementById('modal');\n\nconst Modal = (props: any) => {\n  const handleClose = () => {\n    console.log(\"ENTREEEEEEEE\")\n    props.closeModal();\n  };\n  if (!props.isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <div className=\"ModalComponent\">\n      <div className=\"ModalComponent__container\">\n        <button onClick={handleClose} className=\"ModalComponent__close-button\">\n          X\n        </button>\n        {props.children}\n      </div>\n    </div>,\n    modalID\n  );\n};\n\nexport default Modal;\n","interface IState {\n  isModalOpen: boolean;\n  modalContent: string;\n}\n\ninterface IActions {\n  type: string;\n}\n\nexport const reducer = (state: IState, action: IActions) => {\n  if (action.type === 'LOGIN_INFORMATION_INCOMPLETE') {\n    return {\n      ...state,\n      isModalOpen: true,\n      modalContent: 'Error: No se ha digitado todos los campos',\n    };\n  }\n\n  if (action.type === 'ERROR_AUTH') {\n    return {\n      ...state,\n      isModalOpen: true,\n      modalContent: 'El Usuario y/o la contraseña son incorrectos',\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {...state, isModalOpen: false};\n  }\n  throw new Error('No matching action Type');\n};\n","import React, {useState, useReducer} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Axios from 'axios';\n\n//CSS:\nimport './style/Login.css';\n\n//My_modules:\nimport {baseURL} from '../components/app/baseURL';\nimport loginIMG from '../assets/Securelogin.svg';\nimport Modal from '../components/Modal';\nimport errorImage from '../assets/error.svg';\n\n//Assets:\n\n//Reducer\nimport {reducer} from '../components/login/ReducerLogin';\n\ninterface IDefaultState {\n  isModalOpen: boolean;\n  modalContent: string;\n}\n\nconst defaultState: IDefaultState = {\n  isModalOpen: false,\n  modalContent: '',\n};\n\nconst Login = () => {\n  const [username, setUsername] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const loginAPIURL: string = baseURL + 'api/login';\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (username && password) {\n      Axios.post(loginAPIURL, {\n        username,\n        password,\n      })\n        .then((response) => {\n          const isAuth: string = response.data;\n          if (isAuth === 'ERROR') {\n            dispatch({type: 'ERROR_AUTH'});\n            const usernameInput = document.getElementById(\n              'username'\n            ) as HTMLInputElement;\n            const passwordInput = document.getElementById(\n              'password'\n            ) as HTMLInputElement;\n            usernameInput.value = '';\n            passwordInput.value = '';\n          } else {\n            window.location.href = '/';\n          }\n        })\n    } else {\n      dispatch({type: 'LOGIN_INFORMATION_INCOMPLETE'});\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({type: 'CLOSE_MODAL'});\n  };\n\n  return (\n    <div className=\"general-login-container\">\n      <form className=\"login-form\">\n        <h2>Login</h2>\n        <div className=\"border-div\"></div>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Usuario\"\n          id=\"username\"\n          autoComplete=\"off\"\n          onChange={(e: any) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Contraseña\"\n          autoComplete=\"off\"\n          id=\"password\"\n          onChange={(e: any) => setPassword(e.target.value)}\n        />\n        <button onClick={handleSubmit} className=\"btn\">\n          Iniciar sesión\n        </button>\n      </form>\n      {state.isModalOpen && (\n        <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n          <h1 className=\"modalLoginh1\">{state.modalContent}</h1>\n          <img className=\"modalLoginImg\" src={errorImage} alt=\"modalImg\" />\n        </Modal>\n      )}\n      <div className=\"img-login-container\">\n        <img src={loginIMG} alt=\"login\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useState, useEffect, useContext} from 'react';\nimport './style/Navbar.css';\nimport {withRouter, Link, NavLink} from 'react-router-dom';\nimport Axios from 'axios';\nimport App from '../App';\nimport {baseURL} from './app/baseURL';\n\nfunction Navbar({switchActive}: any) {\n  const [enable, setEnable] = useState<boolean>(false);\n  const [user, setUser] = useState<string>('');\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\n\n  useEffect(() => {\n    Axios.get(isAuthAPIURL)\n      .then((response) => {\n        const userInfo: any = response.data;\n        setUser(userInfo.user);\n        setEnable(true);\n      })\n  }, [enable]);\n\n  if (enable) {\n    switchActive();\n    return (\n      <div className=\"navbar-user-container\">\n        <NavbarContainer user={user} />\n      </div>\n    );\n  }\n\n  return <></>;\n}\n\nconst NavbarContainer = (props: any) => {\n  return (\n    <div className=\"navbar-container\">\n      <Brand />\n      <NavbarOption classIcon=\"gg-chart\" title=\"Dashboard\" url=\"/\" />\n      <NavbarOption classIcon=\"gg-pen\" title=\"Taller Diseño\" url=\"/diseño\" />\n      <NavbarOption classIcon=\"gg-box\" title=\"Bodega Insumo\" url=\"/warehouse\" />\n      <NavbarOption\n        classIcon=\"gg-shape-half-circle\"\n        title=\"Confección\"\n        url=\"/dressmaking\"\n      />\n      <NavbarOption\n        classIcon=\"gg-browse\"\n        title=\"Bodega Producto\"\n        url=\"/warehouseproducts\"\n      />\n      <NavbarOption classIcon=\"gg-home-alt\" title=\"Tiendas\" url=\"/shops\" />\n      <NavbarOption classIcon=\"gg-add-r\" title=\"Registrar\" url=\"/register\" />\n      <NavbarOption\n        classIcon=\"gg-log-out\"\n        title=\"Cerrar Sesion\"\n        url=\"/logout\"\n      />\n      <UserSection user={props.user} />\n    </div>\n  );\n};\n\nconst Brand = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <div className=\"navbar-brand__icon\">\n        <i className=\"gg-read\"></i>\n      </div>\n      <h5 className=\"navbar-brand__h5\">Rutnev</h5>\n    </div>\n  );\n};\n\ninterface INavbarOption {\n  classIcon: string;\n  title: string;\n  url: string;\n}\n\nconst NavbarOption = (props: INavbarOption) => {\n  const {classIcon, title, url} = props;\n  return (\n    <NavLink\n      exact\n      to={url}\n      className=\"click_navbar-option\"\n      activeClassName=\"clicked_navbar-option\"\n    >\n      <div className=\"navbar-option\">\n        <div className=\"navbar-option__icon\">\n          <i className={classIcon}></i>\n        </div>\n        <h5 className=\"navbar-option__h5\">{title}</h5>\n      </div>\n    </NavLink>\n  );\n};\n\nconst UserSection = (props: any) => {\n  return(\n    <div className=\"user-section\">\n      <div className=\"user-section__icon\">\n          <i className=\"gg-user\"></i>\n        </div>\n      <h4>{props.user}</h4>\n    </div>\n  );\n}\n\nexport default withRouter(Navbar);\n","interface ITiendas {\n  id: number;\n  name: string;\n  latitude: number;\n  longitude: number;\n}\n\nexport const tiendasData: ITiendas[] = [\n  {\n    id: 1,\n    name: 'Tienda Sur',\n    latitude: 11.001643604812687,\n    longitude: -74.81665954890138,\n  },\n  {\n    id: 0,\n    name: 'Tienda Norte',\n    latitude: 11.009774250972912,\n    longitude: -74.81215193217375,\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { MapContainer, Marker, TileLayer } from \"react-leaflet\";\nimport { Chart } from \"react-google-charts\";\nimport L from \"leaflet\";\nimport Select from \"react-select\";\nimport Axios from \"axios\";\n\nimport { baseURL } from \"../components/app/baseURL\";\nimport iconShopImg from \"../assets/shop.png\";\nimport loadingImg from \"../assets/Loading.svg\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport monthsData from \"../components/home/months.json\";\nimport Modal from \"../components/Modal\";\nimport notifyImg from \"../assets/notify.svg\";\n\nimport \"./style/Home.css\";\nimport { tiendasData } from \"../components/home/tiendasData\";\n\nconst Home = () => {\n  const [isShopClicked, setIsShopClicked] = useState<boolean>(false);\n  const [infoShopClicked, setInfoShopClicked] = useState({ id: \"\", name: \"\" });\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [dataDatesFilter, setDataDatesFilter] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [modalContent, setModalContent] = useState<string>(\"\");\n  const [percentageSales, setPercentageSales] = useState([[\"Shop\", \"Ventas\"]]);\n  const dashboardPieUrl: string = baseURL + \"api/dashboard_pie\";\n  const dashboardDateFilterURL: string = baseURL + \"api/dashboard_date_filter\";\n\n  useEffect(() => {\n    Axios.post(dashboardPieUrl, {\n      mes: \"05\",\n    }).then((response: any) => {\n      setPercentageSales(response.data);\n    });\n  }, []);\n\n  function getIcon() {\n    return L.icon({\n      iconUrl: iconShopImg,\n      iconSize: [30, 30],\n    });\n  }\n\n  const handleChange = (optionSelected: any) => {\n    const monthValue = optionSelected.value;\n    Axios.post(dashboardPieUrl, {\n      mes: monthValue,\n    }).then((response: any) => {\n      setPercentageSales(response.data);\n    });\n  };\n\n  const handleFilter = () => {\n    const startDateRef = document.getElementById(\n      \"start-date-picker\"\n    ) as HTMLInputElement;\n    const endDateRef = document.getElementById(\n      \"end-date-picker\"\n    ) as HTMLInputElement;\n\n    if (startDateRef.value !== \"\" || endDateRef.value !== \"\") {\n      Axios.post(dashboardDateFilterURL, {\n        fecha_inicial: startDateRef.value,\n        fecha_final: endDateRef.value,\n        idTienda: infoShopClicked.id,\n      }).then((response: any) => {\n        const dataDates = response.data;\n        if (dataDates.length > 1) {\n          setDataDatesFilter(response.data);\n        } else {\n          setDataDatesFilter([]);\n          setModalContent(\"No hay ventas en ese rango de fecha\");\n          setIsModalOpen(true);\n        }\n      });\n    } else {\n      setModalContent(\"Por favor, digite las fechas bien\");\n      setIsModalOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  };\n\n  return (\n    <div className=\"general-container-home\">\n      <div className=\"navbar-home\">\n        <h2 className=\"navbar-home__h2\">Dashboard</h2>\n      </div>\n      <div className=\"map-section\">\n        <div className=\"map-home-container\">\n          <h3>Mapa</h3>\n          <p>\n            En este apartado puedes ver las tiendas en el mapa. Si das\n            click en una de las tiendas, en la esquina inferior derecha\n            aparecerá información de las ventas de esta.\n          </p>\n          <MapContainer\n            center={[11.004462, -74.814401]}\n            zoom={15}\n            scrollWheelZoom={true}\n          >\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {tiendasData.map((tienda: any) => (\n              <Marker\n                key={tienda.id}\n                position={[tienda.latitude, tienda.longitude]}\n                icon={getIcon()}\n                eventHandlers={{\n                  click: () => {\n                    setInfoShopClicked(tienda);\n                    setDataDatesFilter([]);\n                    setIsShopClicked(true);\n                    const startDateRef = document.getElementById(\n                      \"start-date-picker\"\n                    ) as HTMLInputElement;\n                    const endDateRef = document.getElementById(\n                      \"end-date-picker\"\n                    ) as HTMLInputElement;\n                    startDateRef.value = \"\";\n                    endDateRef.value = \"\";\n                  },\n                }}\n              />\n            ))}\n          </MapContainer>\n        </div>\n        <div className=\"stats-home-container\">\n          <h3>Estadísticas</h3>\n          <p>\n            En este apartado puedes ver el porcentaje de ventas correspondiente\n            a cada tienda. Además, puedes filtrar por mes.\n          </p>\n          <div className=\"month-filter-pie-chart-container\">\n            <div className=\"month-select-container\">\n              <Select\n                options={monthsData}\n                placeholder=\"Filtrar por mes\"\n                className=\"month-select-container__select\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"pie-chart-container\">\n              <Chart\n                width={\"100%\"}\n                height={\"100%\"}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={percentageSales}\n                options={{\n                  title: \"Total ventas\",\n                  is3D: true,\n                }}\n                rootProps={{ \"data-testid\": \"1\" }}\n              />\n            </div>\n          </div>\n          <div className=\"specific-stats-for-shops-container\">\n            {!isShopClicked && (\n              <>\n                <h3>Estadisticas especificas de la tienda</h3>\n                <p>\n                  Si haces click en uno de los iconos de tiendas que se\n                  encuentran en el mapa, se desplegará aquí un diagrama de\n                  barras sobre las ventas de la tienda en específico.\n                </p>\n                <div className=\"pie-chart-img-container\">\n                  <img src={loadingImg} alt=\"loading\" />\n                </div>\n              </>\n            )}\n            {isShopClicked && (\n              <>\n                <h3>Ventas de la {infoShopClicked.name}</h3>\n                <p>\n                  En este apartado se muestra las ventas de la{\" \"}\n                  {infoShopClicked.name}. Para ver el gráfico de barras, utiliza\n                  el filtro.\n                </p>\n                <div className=\"filter-date-container\">\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date: any) => {\n                      setStartDate(date);\n                    }}\n                    selectsStart\n                    startDate={startDate}\n                    endDate={endDate}\n                    dateFormat=\"yyyy-MM-dd\"\n                    placeholderText=\"Selecciona la fecha inicial\"\n                    className=\"start-date-picker\"\n                    id=\"start-date-picker\"\n                  />\n                  <DatePicker\n                    selected={endDate}\n                    onChange={(date: any) => setEndDate(date)}\n                    selectsEnd\n                    startDate={startDate}\n                    endDate={endDate}\n                    minDate={startDate}\n                    dateFormat=\"yyyy-MM-dd\"\n                    placeholderText=\"Selecciona la fecha final\"\n                    className=\"end-date-picker\"\n                    id=\"end-date-picker\"\n                  />\n                  <button\n                    className=\"btn\"\n                    id=\"filter-button\"\n                    onClick={handleFilter}\n                  >\n                    Filtrar por fecha\n                  </button>\n                </div>\n                {dataDatesFilter.length === 0 && (\n                  <div className=\"bar-chart-img-container\">\n                    <img src={loadingImg} alt=\"loading\" />\n                  </div>\n                )}\n                {dataDatesFilter.length !== 0 && (\n                  <div className=\"bar-chart-container\">\n                    <Chart\n                      width={\"500px\"}\n                      height={\"300px\"}\n                      chartType=\"Bar\"\n                      loader={<div>Loading Chart</div>}\n                      data={dataDatesFilter}\n                      options={{\n                        chart: {\n                          title:\n                            \"Gráfico de barras de las ventas de la tienda \",\n                        },\n                      }}\n                      rootProps={{ \"data-testid\": \"2\" }}\n                    />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalHome\">{modalContent}</h1>\n        <img className=\"modalHomeImg\" src={notifyImg} alt=\"modalImg\" />\n      </Modal>\n    </div>\n  );\n};\n\nexport default withRouter(Home);\n","import React, {useEffect} from 'react';\nimport './style/SuccessfulModalDressMaking.css';\n\n// INTERFACES\ninterface IWareHouseElements {\n  codigo: number;\n  color: string;\n  metros?: number;\n  cantidad?: number;\n  descripcion: string;\n  nombre_imagen: string;\n  timestamp: string;\n  remainingAmount: string;\n}\n\nconst SuccessfulModalDressMaking = ({\n  modalContent,\n  checkNumber,\n  closeModal,\n}: any) => {\n  useEffect(() => {\n    setTimeout(() => {\n      closeModal();\n    }, 40000);\n  });\n\n  return <NotSuccessfulRequest modalContent={modalContent} />;\n};\n\nconst NotSuccessfulRequest = (modalContent: any) => {\n  const showAmount = (props: IWareHouseElements): number | undefined => {\n    if (props.metros == null) {\n      return props.cantidad;\n    }\n    return props.metros;\n  };\n\n  return (\n    <>\n      <div className=\"container_table\">\n        <div className=\"table_title\">Información</div>\n        <div className=\"table_header\">Insumo insuficiente</div>\n        <div className=\"table_header\">Imagen</div>\n        {modalContent.modalContent.map((props: IWareHouseElements) => {\n          return (\n            <div className=\"items_container\" key={props.codigo}>\n              <div className=\"sub_items_container\">\n                <div className=\"sub_sub_items_container\">\n                  <div className=\"table_item\">Item: {props.codigo}</div>\n                  <div className=\"table_item\">\n                    Descripción: {props.descripcion}\n                  </div>\n                  <div className=\"table_item\">Existencias: {props.metros}</div>\n                  <div className=\"table_item\">\n                    Remanente: {props.remainingAmount}\n                  </div>\n                </div>\n                <div className=\"table_item\">\n                  <img className=\"table_img\" src={props.nombre_imagen} />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default SuccessfulModalDressMaking;\n","export const reducer = (state: any, action: any) => {\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\n    const warningMissingSupplies = action.payload;\n    return {\n      ...state,\n      modalContent: warningMissingSupplies,\n      isInsufficientModalOpen: true,\n      checkNumber: 0,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'SUCCESSFUL_REQUEST') {\n    return {\n      ...state,\n      modalContent: ['Petición realizada con exito'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 1,\n      imgCheckNumber: 1,\n    };\n  }\n  if (action.type === 'WRONG_INPUT') {\n    return {\n      ...state,\n      modalContent: ['Por favor: Ingrese correctamente los campos.'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'WRONG_INPUT_PROCESS') {\n    return {\n      ...state,\n      modalContent: ['Por favor: Ingrese correctamente los campos.'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'DIFF_NEGATIVE') {\n    return {\n      ...state,\n      modalContent: [\n        'Error: Digite una cantidad menor o igual a la cantidad en proceso.',\n      ],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'REFERENCE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      modalContent: ['Error: Esta referencia no existe.'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isModalOpen: false,\n      isInsufficientModalOpen: false,\n      imgCheckNumber: 0,\n    };\n  }\n\n  return {...state, isModalOpen: false, imgCheckNumber: 0};\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/ModalAreYouSureDressmaking.css';\n\nconst idModalAreYouSureDressmaking: any = document.getElementById(\n  'ModalAreYouSureDressmaking'\n);\n\nconst ModalAreYouSureDressmaking = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const handleAccept = () => {\n    props.subAmountFunction();\n    props.closeModal();\n  };\n\n  if (!props.isOpen) return null;\n  return ReactDOM.createPortal(\n    <div className=\"ModalAYSDressmakingComponent\">\n      <div className=\"ModalAYSDressmakingComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalAYSDressmakingComponent__close-button\"\n        >\n          X\n        </button>\n        <h3 className=\"ModalAYSDressmakingComponent__h3\">¿Estás seguro?</h3>\n        <p className=\"ModalAYSDressmakingComponent__p\">\n          Ten cuidado. Solo presiona el botón de aceptar si estás completamente\n          seguro porque no hay vuelta atrás.\n        </p>\n        <div className=\"ARYDressmakingButtonsContainer\">\n          <button\n            className=\"btn ARYDressmakingButtonsContainer__accept\"\n            onClick={handleAccept}\n          >\n            Aceptar\n          </button>\n          <button\n            className=\"btn ARYDressmakingButtonsContainer__cancel\"\n            onClick={handleClose}\n          >\n            Cancelar\n          </button>\n        </div>\n      </div>\n    </div>,\n    idModalAreYouSureDressmaking\n  );\n};\n\nexport default ModalAreYouSureDressmaking;\n","import React, {useState, useRef, useEffect} from 'react';\n\nimport './style/FilterDropdown.css';\n\nconst Dropdown = ({options, id, label, prompt, value, onChange}: any) => {\n  const [open, setOpen] = useState(false);\n  const [inputOpen, setInputOpen] = useState(false);\n  const [query, setQuery] = useState<string>('');\n  const ref = useRef(null);\n\n  useEffect(() => {\n    document.addEventListener('click', close);\n    return () => document.removeEventListener('click', close);\n  }, []);\n\n  const close = (e: any) => {\n    setOpen(e && e.target === ref.current);\n  };\n\n  const filter = (options: any) => {\n    return options.filter(\n      (option: any) =>\n        option[label].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n    );\n  };\n\n  const displayValue = () => {\n    if (query.length > 0) return query;\n    if (value) return value[label];\n    return '';\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <div\n        className=\"control\"\n        onClick={() => {\n          setOpen((prev) => !prev);\n          if (inputOpen) setOpen(false);\n        }}\n      >\n        <div className=\"selected-value\">\n          <input\n            type=\"number\"\n            id=\"valueInput\"\n            ref={ref}\n            placeholder={value ? value[label] : prompt}\n            value={displayValue()}\n            onChange={(e: any) => {\n              setQuery(e.target.value);\n              onChange(e.target.value);\n            }}\n            onClick={() => setOpen((prev) => !prev)}\n          />\n        </div>\n        <div className={`arrow ${open ? 'open' : null}`} />\n      </div>\n      <div className={`options ${open ? 'open' : null}`}>\n        {filter(options).map((option: any) => {\n          return (\n            <div\n              key={option[id]}\n              className={`option ${value === option ? 'selected' : null}`}\n              onClick={() => {\n                setQuery('');\n                onChange(option);\n                setOpen(false);\n              }}\n            >\n              {option[label]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\n// REDUCER\nimport { reducer } from \"../components/dressmaking/ReducerDressMaking\";\nimport \"./style/DressMaking.css\";\nimport \"../components/dressmaking/style/buttonStyle.css\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport { updateSourceFile } from \"typescript\";\nimport ModalAreYouSureDressmaking from \"../components/dressmaking/ModalAreYouSureDressmaking\";\nimport FilterDropdown from \"../components/FilterDropdown\";\n\n// INTERFACES\ninterface IReference {\n  referencia: number;\n  id_talla: number;\n  descripcion: string;\n  color: string;\n  nombre_imagen: string;\n  codigoycantidad: string;\n}\n\nconst defaultState: any = {\n  modalContent: [],\n  isModalOpen: false,\n  isInsufficientModalOpen: false,\n  checkNumber: 0,\n  imgCheckNumber: 0,\n};\n\nconst DressMaking: React.FC = () => {\n  const [references, setReferences] = useState<IReference[]>([]);\n  const [amount, setAmount] = useState<string>(\"\");\n  const [selectedReference, setSelectedReference] = useState<string>(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [approvedRequests, setApprovedRequests] = useState<any>([]);\n  const [requestsHistory, setRequestsHistory] = useState<any>([]);\n  const [numberInput, setNumberInput] = useState<string>(\"\");\n  const refContainer: any = useRef(null);\n  const [isOpenARYModal, setIsOpenARYModal] = useState<boolean>(false);\n  const [infoProcess, setInfoProcess] = useState<any>({});\n  const [valueReferenceSelect, setValueReferenceSelect] = useState<any>(null);\n  const [toggleState, setToggleState] = useState(1);\n  const dbReferencesURL: string = baseURL + \"api/references\";\n  const dbSuppliesURL: string = baseURL + \"api/suppliesrequest\";\n  const dbWareHouseRequest: string = baseURL + \"api/requesttowarehouse\";\n  const dbApprovedRequests: string = baseURL + \"api/getapprovedrequests\";\n  const dbUpdateDressMakingProcess: string =\n    baseURL + \"api/updatedressmakingprocess\";\n  const dbRequestHistoryDressmaking: string =\n    baseURL + \"api/getRequestHistoryDressmaking\";\n\n  // HANDLE AMOUNT INPUT\n  const handleInput = (input: any) => {\n    setAmount(input);\n    if (input.includes(\".\") || input.includes(\"-\") || input.includes(\"!\")) {\n      const amountInputHTML: any = document.getElementById(\"amountInput\");\n      amountInputHTML.value = \"\";\n      setAmount(\"\");\n    }\n  };\n\n  // GET REFERENCES\n  useEffect(() => {\n    Axios.get(dbReferencesURL).then((response: AxiosResponse) => {\n      setReferences(response.data);\n    });\n\n    Axios.get(dbApprovedRequests).then((response: AxiosResponse) => {\n      setApprovedRequests(response.data);\n    });\n\n    Axios.get(dbRequestHistoryDressmaking).then((response: AxiosResponse) => {\n      setRequestsHistory(response.data);\n    });\n  }, []);\n\n  const suppliesRequest = () => {\n    let ReferenceSelected = \"\";\n    let isReferenceExist = 0;\n    const correctAmount = parseFloat(amount);\n\n    if (valueReferenceSelect === null) {\n      ReferenceSelected = \"\";\n    } else if (typeof valueReferenceSelect === \"object\") {\n      ReferenceSelected = valueReferenceSelect.referencia.toString();\n    } else if (typeof valueReferenceSelect === \"string\") {\n      ReferenceSelected = valueReferenceSelect;\n    }\n\n    references.map((val: any) => {\n      if (val.referencia === ReferenceSelected) {\n        isReferenceExist += 1;\n        return isReferenceExist;\n      } else {\n        return isReferenceExist;\n      }\n    });\n\n    let enableInput = ReferenceSelected !== \"\";\n    if (Number.isInteger(correctAmount) && correctAmount > 0 && enableInput) {\n      if (isReferenceExist === 1) {\n        Axios.post(dbWareHouseRequest, {\n          actualAmount: amount,\n          referenceSelection: ReferenceSelected,\n        }).then((response: AxiosResponse): void => {\n          if (response.data === \"SUCCESSFUL_REQUEST\") {\n            setAmount(\"\");\n            setValueReferenceSelect(null);\n            refContainer.current.value = \"\";\n            dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n          } else {\n            dispatch({ type: \"INSUFFICIENT_SUPPLIES\", payload: response.data });\n          }\n        });\n      } else {\n        dispatch({ type: \"REFERENCE_DOES_NOT_EXIST\" });\n      }\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n      refContainer.current.value = \"\";\n    }\n  };\n\n  const verificationARYModal = (\n    referencia: any,\n    id: any,\n    amount: any,\n    numero_de_orden: any,\n    HTMLElement: any\n  ) => {\n    console.log(\"REFERENCIA\", referencia)\n    console.log(\"REFERENCIA\", numero_de_orden)\n    const valueInput = parseFloat(HTMLElement.value);\n    const inputCondition = valueInput > 0 && Number.isInteger(valueInput);\n    if (inputCondition) {\n      let diff = parseFloat(amount) - valueInput;\n      if (diff >= 0) {\n        setIsOpenARYModal(true);\n        setInfoProcess({\n          reference: referencia,\n          id,\n          amount,\n          valueInput,\n          numero_de_orden,\n          HTMLElement,\n        });\n      } else {\n        dispatch({ type: \"DIFF_NEGATIVE\" });\n      }\n    } else {\n      setIsOpenARYModal(false);\n      dispatch({ type: \"WRONG_INPUT_PROCESS\" });\n    }\n  };\n\n  const handlerSubtract = () => {\n    let diff = infoProcess.amount - infoProcess.valueInput;\n    infoProcess.HTMLElement.value = \"\";\n    console.log(\"INFO PROCESS:\", infoProcess)\n    Axios.post(dbUpdateDressMakingProcess, {\n      referencia: infoProcess.reference,\n      id: infoProcess.id,\n      diff,\n      amount: infoProcess.valueInput,\n      numero_de_orden: infoProcess.numero_de_orden,\n    }).then((response: AxiosResponse) => {\n      infoProcess.valueInput = null;\n      Axios.get(dbApprovedRequests).then((response: AxiosResponse) => {\n        setApprovedRequests(response.data);\n      });\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenARYModal(false);\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-dressmaking\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-dressmaking\">\n      <div className=\"navbar-dressmaking\">\n        <h2 className=\"navbar-dressmaking__h2\">Taller confección</h2>\n        <div className=\"navbar-dressmaking-otpions\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\n                : \"tabs-dressmaking\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a href=\"#ressmaking-request-container\" onClick={handleNavbarClick}>\n              Enviar petición\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\n                : \"tabs-dressmaking\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#dressmaking-process-container\"\n              onClick={handleNavbarClick}\n            >\n              Artículos en proceso\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\n                : \"tabs-dressmaking\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a href=\"#requests-history-section\" onClick={handleNavbarClick}>\n              Historial de peticiones\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-dressmaking-section\" id=\"scroll-dressmaking\">\n        <div\n          className=\"dressmaking-request-container\"\n          id=\"ressmaking-request-container\"\n        >\n          <div className=\"dressmaking-request-card\">\n            <div className=\"dressmaking-request-card__h2\">\n              Enviar petición a Bodega Insumos\n            </div>\n            <div className=\"dressmaking-request-form\">\n              <div className=\"filter-dropdown-request-dressmaking\">\n                <FilterDropdown\n                  options={references}\n                  id=\"referencia\"\n                  label=\"referencia\"\n                  prompt=\"Seleccionar referencia\"\n                  value={valueReferenceSelect}\n                  onChange={(val: any) => setValueReferenceSelect(val)}\n                />\n              </div>\n              <input\n                ref={refContainer}\n                id=\"actualAmount\"\n                name=\"actualAmount\"\n                className=\"actualAmount\"\n                placeholder=\"cantidad\"\n                type=\"number\"\n                value={amount}\n                autoComplete=\"off\"\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n              />\n              <button className=\"btn\" type=\"button\" onClick={suppliesRequest}>\n                Enviar\n              </button>\n            </div>\n          </div>\n\n          <div className=\"information-dressmaking-request-container\">\n            <h2 className=\"information-dressmaking-request-container__h2\">\n              Enviar petición a Bodega Insumos\n            </h2>\n            <p className=\"information-dressmaking-request-container__p\">\n              ¿Necesitas confeccionar un nuevo artículo? Entonces envía una\n              petición a Bodega Insumos para obtener los insumos necesarios para\n              confeccionar este artículo. Para esto solo escoge la referencia\n              del artículo que quieres hacer, cuantos artículos quieres realizar\n              y preciona el botón enviar. Así de fácil :)\n            </p>\n          </div>\n        </div>\n        <div\n          className=\"dressmaking-process-container\"\n          id=\"dressmaking-process-container\"\n        >\n          <h3>Artículos en proceso</h3>\n          <p>\n            En este apartado se muestra los artículos que se están produciendo.\n            Puedes ir descontando la cantidad en proceso de los artículos a\n            medida que los vas produciendo. Solo digita la cantidad producida y\n            presiona aceptar.{\" \"}\n          </p>\n          {approvedRequests.length == 0 && (\n            <>\n              <div className=\"no-data-image-approved-req-dressmaking-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-approved-req-dressmaking-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-approved-req-dressmaking-paragraph\">\n                Aún no hay artículos en proceso\n              </p>\n            </>\n          )}\n          {approvedRequests.length !== 0 && (\n            <div className=\"approved-requests-dressmaking-container\">\n              {approvedRequests.map((item: any) => {\n                return (\n                  <div className=\"requestDressmakingContainer\">\n                    <h4 className=\"requestDressmakingContainer__h4\">\n                      Referencia en proceso\n                    </h4>\n                    <div className=\"requestDressmakingContainer__reference\">\n                      Petición: #{item.id}\n                    </div>\n                    <div className=\"requestDressmakingContainer__reference\">\n                      Referencia: {item.referencia}\n                    </div>\n                    <div className=\"requestDressmakingContainer__amount\">\n                      Cantidad en proceso: {item.cantidad}\n                    </div>\n                    <div className=\"requestDressmakingContainer__timestamp\">\n                      Fecha: {item.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <input\n                      className={\"h\" + item.id}\n                      id=\"requestDressmakingContainer__amountInput\"\n                      type=\"number\"\n                      placeholder=\"Digite la cantidad terminada\"\n                    />\n                    <button\n                      className=\"btn requestDressmakingContainer__accept\"\n                      onClick={() => {\n                        verificationARYModal(\n                          item.referencia,\n                          item.id,\n                          item.cantidad,\n                          item.numero_de_orden,\n                          document.querySelector(\".h\" + item.id)\n                        );\n                      }}\n                    >\n                      Aceptar\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"requests-history-section\" id=\"requests-history-section\">\n          <h3>Historial de peticiones</h3>\n          <p>\n            Aquí se despliega el historial de peticiones realizadas de taller\n            confección a bodega insumos.\n          </p>\n          <div className=\"requets-history-dressmaking-container\">\n            <div className=\"label-history-request-dressmanking\">\n              <div className=\"label-history-request-dressmanking__number-of-order\">\n                Número de orden\n              </div>\n              <div className=\"label-history-request-dressmanking__reference\">\n                Referencia\n              </div>\n              <div className=\"label-history-request-dressmanking__amount\">\n                Cantidad\n              </div>\n              <div className=\"label-history-request-dressmanking__decision\">\n                Decisión\n              </div>\n              <div className=\"label-history-request-dressmanking__timestamp\">\n                Fecha\n              </div>\n            </div>\n            {requestsHistory.map((request: any) => {\n              return (\n                <div className=\"request-card-container\">\n                  <div className=\"request-card-container__order\">\n                    {request.numero_de_orden}\n                  </div>\n                  <div className=\"request-card-container__reference\">\n                    {request.referencia}\n                  </div>\n                  <div className=\"request-card-container__amount\">\n                    {request.cantidad}\n                  </div>\n                  <div className=\"request-card-container__decision\">\n                    {request.decision}\n                  </div>\n                  <div className=\"request-card-container__date\">\n                    {\" \"}\n                    {request.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      {state.isInsufficientModalOpen && (\n        <SuccessfulModalDressMaking\n          modalContent={state.modalContent}\n          closeModal={closeModal}\n          checkNumber={state.checkNumber}\n        />\n      )}\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n        {state.imgCheckNumber === 1 && (\n          <img\n            className=\"modalWarehouseImg\"\n            src={completeImage}\n            alt=\"modalImg\"\n          />\n        )}\n        {state.imgCheckNumber === 2 && (\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\n        )}\n      </Modal>\n      <ModalAreYouSureDressmaking\n        isOpen={isOpenARYModal}\n        closeModal={closeModal}\n        subAmountFunction={handlerSubtract}\n      />\n    </div>\n  );\n};\n\nexport default DressMaking;\n","import React, {useEffect, useState} from 'react';\n\nimport notFoundImage from '../../assets/Not Found.svg';\nimport './style/ModalInventoryWareHouse.css';\n\nconst ModalInvetoryBodega = ({modalContent, closeModal}: any) => {\n  const handleClose = () => {\n    closeModal();\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  const handlerSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  return (\n    <div className=\"container_table-bodega\">\n      <div className=\"table_title-bodega\">Información</div>\n      <div className=\"search-warehouse-container\">\n        <i className=\"gg-search\"></i>\n        <input\n          type=\"search\"\n          placeholder=\"Buscar por código...\"\n          className=\"search-filter-design-warehouse\"\n          onChange={(e: any) => handlerSearch(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"table-header-container-warehouse\">\n        <div className=\"table_header-bodega\">Insumo</div>\n        <div className=\"table_header-bodega\">Imagen</div>\n      </div>\n      <div className=\"scroll-modal-inventory\">\n        {modalContent\n          .filter((val: any) => {\n            iterator += 1;\n            if (searchTerm === '') {\n              return val;\n            } else if (\n              val.codigo\n                .toString()\n                .slice(0, searchTerm.length)\n                .includes(searchTerm)\n            ) {\n              enableEmpty = false;\n              return val;\n            } else if (iterator == modalContent.length && enableEmpty == true) {\n              showEmptySearch = true;\n            }\n          })\n          .map((props: any) => {\n            return (\n              <div className=\"items_container-bodega\" key={props.codigo}>\n                <div className=\"sub_items_container-bodega\">\n                  <div className=\"sub_sub_items_container-bodega\">\n                    <div className=\"table_item-bodega\">\n                      Código: {props.codigo}\n                    </div>\n                    <div className=\"table_item-bodega\">\n                      Descripción: {props.descripcion}\n                    </div>\n                    <div className=\"table_item-bodega\">\n                      Cantidad: {props.metros != null ? props.metros : props.cantidad}\n                    </div>\n                  </div>\n                  <div className=\"table_item-bodega\">\n                    <img\n                      className=\"table_img-bodega\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        {showEmptySearch && (\n          <img\n            className=\"notFoundImgWarehouse\"\n            src={notFoundImage}\n            alt=\"Not found\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModalInvetoryBodega;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/ModalinsufficientSupplies.css';\n\nconst insufficientSuppliesID: any = document.getElementById(\n  'insufficientSuppliesModal'\n);\n\nconst ModalinsufficientSupplies = (props: any) => {\n  const handlerButtonReject = () => {\n    props.handlerReject(props.infoRequest.index);\n    props.closeModal();\n  };\n  console.log(props.arrayNoSupplies);\n  const handleClose = () => {\n    props.closeModal();\n  };\n  if (!props.isOpen) return null;\n  return ReactDOM.createPortal(\n    <div className=\"ModalNoSuppliesComponent\">\n      <div className=\"ModalNoSuppliesComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalNoSuppliesComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>\n          Error: En el inventario no se encuentran los insumos suficientes\n        </h4>\n        <p>\n          No se puede aceptar esta petición debido a que en Bodega no hay los\n          insumos suficientes para cumplir con la producción. Por favor, rechace\n          esta petición.\n        </p>\n        <div className=\"containerNoSupplies_table\">\n          <div className=\"tableNoSupplies_title\">Insumos insuficientes</div>\n          <div className=\"tableNoSupplies_header\">Insumo insuficiente</div>\n          <div className=\"tableNoSupplies_header\">Imagen</div>\n          {props.arrayNoSupplies.map((val: any) => {\n            return (\n              <div className=\"itemsNoSupplies_container\" key={val.codigo}>\n                <div className=\"sub_itemsNoSupplies_container\">\n                  <div className=\"sub_sub_itemsNoSupplies_container\">\n                    <div className=\"tableNoSupplies_item\">\n                      Item: {val.codigo}\n                    </div>\n                    <div className=\"tableNoSupplies_item\">\n                      Descripción: {val.descripcion}\n                    </div>\n                    <div className=\"tableNoSupplies_item\">\n                      Existencias: {val.cantidad != null ? val.cantidad : val.metros}\n                    </div>\n                    <div className=\"tableNoSupplies_item\">\n                      Faltante: {val.remainingAmount}\n                    </div>\n                  </div>\n                  <div className=\"tableNoSupplies_item\">\n                    <img\n                      className=\"tableNoSupplies_img\"\n                      src={val.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div\n          className=\"InsuficcientButtonRejectContainer\"\n          onClick={handlerButtonReject}\n        >\n          <button className=\"btn\">Rechazar petición</button>\n        </div>\n      </div>\n    </div>,\n    insufficientSuppliesID\n  );\n};\n\nexport default ModalinsufficientSupplies;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport Axios from 'axios';\n\nimport './style/ModalDecisionSupplies.css';\nimport {baseURL} from '../app/baseURL';\n\nconst idModalDecisionSupplies: any = document.getElementById(\n  'ModalDecisionSupplies'\n);\n\nconst ModalDecisionSupplies = (props: any) => {\n  const informationSuppliesURL: string = baseURL + 'api/temporal';\n  const [informationSupplies, setInformationSupplies] = useState([]);\n\n  useEffect(() => {\n    if (props.isOpen) {\n      Axios.post(informationSuppliesURL, {\n        referenceSelection: props.infoRequest.reference,\n        actualAmount: props.infoRequest.amount,\n      })\n        .then((response: any) => {\n          setInformationSupplies(response.data);\n        })\n    }\n  }, [props.isOpen]);\n\n  const handlerButtonReject = () => {\n    props.handlerReject(props.infoRequest.index);\n    props.closeModal();\n  };\n\n  const handlerButtonAccept = () => {\n    props.handlerAccept(props.infoRequest.index);\n    props.closeModal();\n  };\n\n  const handlerClose = () => {\n    props.closeModal();\n  };\n\n  if (!props.isOpen) return null;\n\n  return ReactDOM.createPortal(\n    <div className=\"ModalDecisionSuppliesComponent\">\n      <div className=\"ModalDecisionSuppliesComponent__container\">\n        <button\n          onClick={handlerClose}\n          className=\"ModalDecisionSuppliesComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>Información de los insumos</h4>\n        <p>\n          Si aceptas esta decisión, estos serán los insumos que se verán\n          afectados.\n        </p>\n        <div className=\"containerDecisionSupplies_table\">\n          <div className=\"tableDecisionSupplies_title\">Insumos Necesarios</div>\n          <div className=\"tableDecisionSupplies_header\">\n            Información del insumo\n          </div>\n          <div className=\"tableDecisionSupplies_header\">Imagen</div>\n          {informationSupplies.map((props: any) => {\n            return (\n              <div\n                className=\"itemsDecisionSupplies_container\"\n                key={props.codigo}\n              >\n                <div className=\"sub_itemsDecisionSupplies_container\">\n                  <div className=\"sub_sub_itemsDecisionSupplies_container\">\n                    <div className=\"tableDecisionSupplies_item\">\n                      Item: {props.codigo}\n                    </div>\n                    <div className=\"tableDecisionSupplies_item\">\n                      Color: {props.color}\n                    </div>\n                    <div className=\"tableDecisionSupplies_item\">\n                      Descripción: {props.descripcion}\n                    </div>\n                    <div className=\"tableDecisionSupplies_item\">\n                      Consumo: {props.amount}\n                      {props.metros ? ' metros' : ''}\n                    </div>\n                  </div>\n                  <div className=\"tableDecisionSupplies_item\">\n                    <img\n                      className=\"tableDecisionSupplies_img\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"DecisionButtonsContainer\">\n          <button\n            className=\"btn DecisionButtonsContainer__accept\"\n            onClick={handlerButtonAccept}\n          >\n            Aceptar\n          </button>\n          <button\n            className=\"btn DecisionButtonsContainer__reject\"\n            onClick={handlerButtonReject}\n          >\n            Rechazar\n          </button>\n        </div>\n      </div>\n    </div>,\n    idModalDecisionSupplies\n  );\n};\n\nexport default ModalDecisionSupplies;\n","export const reducer = (state: any, action: any) => {\n\n  if (action.type === 'SUCCESSFUL_FORM') {\n    return {\n      ...state,\n      modalFormContent:\n        '¡Felicitaciones! Se ha agregado un nuevo insumo correctamente',\n      isFormModalOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 1,\n    };\n  }\n\n  if (action.type === 'SUCCESSFUL_UPDATE') {\n    return {\n      ...state,\n      modalUpdateContent: 'Inventario añadido exitosamente',\n      isModalUpdateOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 1,\n    };\n  }\n\n  if (action.type === 'EXISTING_CODE') {\n    return {\n      ...state,\n      modalFormContent:\n        'Este codigo ya existe en el inventario. Por favor dirigirse a la sección Añadir a Insumo registrado',\n      isFormModalOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'SUCCESSFUL_ADDING') {\n    return {\n      ...state,\n      modalFormContent: 'Insumo añadido correctamente',\n      isModalOpen: false,\n      isFormModalOpen: true,\n    };\n  }\n\n  if (action.type === 'WRONG_INPUT') {\n    return {\n      ...state,\n      modalUpdateContent:\n        'OJO: Por favor ingrese correctamente todos los campos',\n      isModalUpdateOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      modalUpdateContent: 'Error: Este código no existe',\n      isModalUpdateOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\n    return {\n      ...state,\n      isOpenNoSupplies: true,\n      modalContent: action.payload,\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isModalOpen: false,\n      isOpenNoSupplies: false,\n      imgCheckNumber: 0,\n    };\n  }\n  return {\n    ...state,\n    isModalOpen: false,\n    isFormModalOpen: false,\n    isModalUpdateOpen: false,\n    isOpenNoSupplies: false,\n    isModalSuppliesOpen: false\n  };\n};\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport \"./style/Warehouse.css\";\nimport ModalInvetoryWareHouse from \"../components/warehouse/ModalInventoryWareHouse\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport ModalinsufficientSupplies from \"../components/warehouse/ModalinsufficientSupplies\";\nimport ModalDecisionSupplies from \"../components/warehouse/ModalDecisionSupplies\";\nimport { reducer } from \"../components/warehouse/ReducerWarehouse\";\nimport FilterDropdown from \"../components/FilterDropdown\";\n\nconst defaultState: any = {\n  isModalOpen: false,\n  isFormModalOpen: false,\n  isModalUpdateOpen: false,\n  isOpenNoSupplies: false,\n  modalContent: [],\n  modalFormContent: \"\",\n  modalUpdateContent: \"\",\n  checkNumber: 0,\n  imgCheckNumber: 0,\n};\n\nfunction WareHouse() {\n  const [code, setCode] = useState<string>(\"\");\n  const [color, setColor] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [img, setImg] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [queryData, setQueryData] = useState<any>([]);\n  const [updateCode, setUpdateCode] = useState<string>(\"\");\n  const [updateAmount, setUpdateAmount] = useState<string>(\"\");\n  const [dressMakingReq, setDressMakingReq] = useState<any>([]);\n  const [suppliesData, setSuppliesData] = useState<any>([]);\n  const [reRenderUpdate, setReRenderUpdate] = useState<boolean>(false);\n  const [infoRequest, setInfoRequest] = useState({});\n  const [isOpenDecision, setIsOpenDecision] = useState<boolean>(false);\n  const [valueCode, setValueCode] = useState<any>(null);\n  const [valueSupplieDropdown, setValueSupplieDropdown] = useState<any>(null)\n  const [toggleState, setToggleState] = useState(1);\n  const [switchUseEffect, setSwitchUseEffect] = useState<boolean>(false);\n  const saveClothAPIURL: string = baseURL + \"api/savecloth\";\n  const invetoryBodegaAPIURL: string = baseURL + \"api/invetorywarehouse\";\n  const invetoryWareHouseAPIURL: string = baseURL + \"api/invetorywarehouse\";\n  const updateInventoryWareHouseURL: string =\n    baseURL + \"api/updatewarehouseinventory\";\n  const getDressMakingRequest: string = baseURL + \"api/dressmakingrequest\";\n  const dbSuppliesURL: string = baseURL + \"api/suppliesrequest\";\n  const dbSaveDecision: string = baseURL + \"api/savewarehousedecision\";\n  const suppliesDataDropdown = [\n    {\n      id: \"1\",\n      value: \"Tela\",\n    },\n    {\n      id: \"2\",\n      value: \"Insumo\",\n    },\n  ];\n\n  useEffect(() => {\n    Axios.get(invetoryWareHouseAPIURL).then((response: AxiosResponse) => {\n      setQueryData(response.data);\n      console.log(response.data);\n      // triggerListeners(setType, setUpdateCode);\n    });\n\n    Axios.get(getDressMakingRequest).then((response: AxiosResponse) => {\n      setDressMakingReq(response.data);\n    });\n\n    Axios.get(invetoryBodegaAPIURL)\n      .then((response: AxiosResponse) => {\n        setSuppliesData(response.data);\n      })\n      .catch((error) => {\n        if (error) throw error;\n      });\n  }, [switchUseEffect]);\n\n  interface ICloth {\n    code: string;\n    color: string;\n    amount: string;\n    description: string;\n    img: string;\n    type: string;\n  }\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    let enableAmount = false;\n    let supplieSelected = \"\";\n    let isCodeExist = 0;\n\n    if (valueSupplieDropdown === null) {\n      supplieSelected = \"\";\n    } else if (typeof valueSupplieDropdown === \"object\") {\n      supplieSelected = valueSupplieDropdown.value.toString();\n    } else if (typeof valueSupplieDropdown === \"string\") {\n      supplieSelected = valueSupplieDropdown;\n    }\n\n    const newCloth: ICloth = {\n      code,\n      color,\n      amount,\n      description,\n      img,\n      type: supplieSelected,\n    };\n\n    if (type == \"Tela\") {\n      enableAmount = parseFloat(amount) > 0;\n    } else {\n      enableAmount = Number.isInteger(parseInt(amount)) && parseInt(amount) > 0;\n    }\n    let enableItems =\n      code !== \"\" &&\n      color !== \"\" &&\n      description !== \"\" &&\n      img !== \"\" &&\n      supplieSelected !== \"\";\n    if (enableAmount && enableItems) {\n      let codigoInput = document.getElementById(\"codigo\") as HTMLInputElement;\n      let colorInput = document.getElementById(\"color\") as HTMLInputElement;\n      let amountInput = document.getElementById(\"amount\") as HTMLInputElement;\n      let descripcionInput = document.getElementById(\n        \"descripcion\"\n      ) as HTMLInputElement;\n      let imgInput = document.getElementById(\"url-img\") as HTMLInputElement;\n      let selectedOption: any = document.querySelector(\n        \".selected-option-bodega\"\n      );\n      Axios.post(saveClothAPIURL, {\n        newCloth,\n      })\n        .then((response: AxiosResponse) => {\n          if (response.data == \"SUCCESSFUL_ADDING\") {\n            dispatch({ type: \"SUCCESSFUL_FORM\" });\n            codigoInput.value = \"\";\n            colorInput.value = \"\";\n            amountInput.value = \"\";\n            descripcionInput.value = \"\";\n            imgInput.value = \"\";\n            setValueSupplieDropdown(null);\n            Axios.get(invetoryWareHouseAPIURL).then(\n              (response: AxiosResponse) => {\n                setQueryData(response.data);\n              }\n            );\n            setSwitchUseEffect(!switchUseEffect);\n          }\n          if (response.data == \"EXISTING_CODE\") {\n            dispatch({ type: \"EXISTING_CODE\" });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  // UPDATE INVENTORY\n  const handleUpdateInventory = () => {\n    let codeSelected = \"\";\n    let isCodeExist = 0;\n    let inputUpdateAmount = document.getElementById(\n      \"amount-update-inventory\"\n    ) as HTMLInputElement;\n\n    if (valueCode === null) {\n      codeSelected = \"\";\n    } else if (typeof valueCode === \"object\") {\n      codeSelected = valueCode.codigo.toString();\n    } else if (typeof valueCode === \"string\") {\n      codeSelected = valueCode;\n    }\n\n    queryData.map((val: any) => {\n      if (val.codigo === codeSelected) {\n        isCodeExist += 1;\n        return isCodeExist;\n      } else {\n        return isCodeExist;\n      }\n    });\n\n    let enableAmount =\n      Number.isInteger(parseInt(updateAmount)) && parseInt(updateAmount) > 0;\n      console.log(enableAmount);\n    let enableCode = codeSelected !== \"\";\n\n    if (enableAmount && enableCode) {\n      if (isCodeExist === 1) {\n        let payloadUpdate = {\n          code: codeSelected,\n          amount: updateAmount,\n        };\n        setValueCode(null);\n        inputUpdateAmount.value = \"\";\n        setUpdateAmount(\"0\");\n        Axios.post(updateInventoryWareHouseURL, payloadUpdate).then(\n          (response: any) => {\n            if (response.data == \"SUCCESSFUL_UPDATE\") {\n              dispatch({ type: \"SUCCESSFUL_UPDATE\" });\n              setSwitchUseEffect(!switchUseEffect);\n            }\n          }\n        );\n      } else {\n        dispatch({ type: \"CODE_DOES_NOT_EXIST\" });\n      }\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const handlerApprove = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSuppliesURL, {\n      actualAmount: dressMakingReq[index].cantidad,\n      referenceSelection: dressMakingReq[index].referencia,\n      checkAccept: true,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_REQUEST\") {\n        Axios.post(dbSaveDecision, {\n          ...dressMakingReq[index],\n          idDecision: 1,\n        }).then((response: AxiosResponse): void => {});\n        let filterResult = dressMakingReq.filter(\n          (item: any) => item.id != dressMakingReq[index].id\n        );\n        setDressMakingReq(filterResult);\n      }\n    });\n  };\n\n  const handlerRefuse = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSaveDecision, {\n      ...dressMakingReq[index],\n      idDecision: 0,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_SAVING\") {\n        let filterResult = dressMakingReq.filter(\n          (item: any) => item.id != dressMakingReq[index].id\n        );\n        setDressMakingReq(filterResult);\n      } else {\n      }\n    });\n  };\n\n  const handlerDecision = (index: any) => {\n    setInfoRequest({\n      index,\n      amount: dressMakingReq[index].cantidad,\n      reference: dressMakingReq[index].referencia,\n    });\n    Axios.post(dbSuppliesURL, {\n      actualAmount: dressMakingReq[index].cantidad,\n      referenceSelection: dressMakingReq[index].referencia,\n      checkAccept: false,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_REQUEST\") {\n        setIsOpenDecision(true);\n      } else {\n        dispatch({ type: \"INSUFFICIENT_SUPPLIES\", payload: response.data });\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenDecision(false);\n    dispatch({ tpye: \"CLOSE_MODAL\" });\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-warehouse\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-warehouse\">\n      <div className=\"navbar-warehouse\">\n        <h2 className=\"navbar-warehouse__h2\">Bodega Insumos</h2>\n        <div className=\"navbar-warehouse-otpions\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a href=\"#new-supplies-section\" onClick={handleNavbarClick}>\n              Registrar nuevos insumos\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#inventory-warehouse-modal-section\"\n              onClick={handleNavbarClick}\n            >\n              Inventario\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a href=\"#update-section\" onClick={handleNavbarClick}>\n              Actualizar insumos existentes\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 4\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(4)}\n          >\n            <a href=\"#request-section\" onClick={handleNavbarClick}>\n              Peticiones\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-warehouse\" id=\"scroll-warehouse\">\n        <div className=\"body-warehouse-information\" id=\"new-supplies-section\">\n          <div className=\"warehouse-form-container\">\n            <form className=\"warehouse-form\">\n              <h2>Registrar nuevos insumos</h2>\n              <div className=\"border-div\"></div>\n              <input\n                type=\"text\"\n                id=\"codigo\"\n                placeholder=\"Código\"\n                onChange={(e: any) => setCode(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                id=\"color\"\n                placeholder=\"Color\"\n                onChange={(e: any) => setColor(e.target.value)}\n              />\n              <input\n                type=\"number\"\n                id=\"amount\"\n                placeholder=\"Metros/Cantidad\"\n                onChange={(e: any) => setAmount(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                id=\"descripcion\"\n                placeholder=\"Descripción\"\n                className=\"descriptionInput\"\n                onChange={(e: any) => setDescription(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                id=\"url-img\"\n                placeholder=\"URL de la imágen\"\n                onChange={(e: any) => setImg(e.target.value)}\n              />\n              <div className=\"filterDropdownSupplieWarehouse\">\n                <FilterDropdown\n                  options={suppliesDataDropdown}\n                  id=\"id\"\n                  label=\"value\"\n                  prompt=\"Seleccionar tela o insumo\"\n                  value={valueSupplieDropdown}\n                  onChange={(val: any) => setValueSupplieDropdown(val)}\n                />\n              </div>\n              <button className=\"btn\" onClick={handleSubmit}>\n                Enviar\n              </button>\n            </form>\n          </div>\n          <div className=\"information-add-supplies-container\">\n            <h2 className=\"information-add-supplies-container__h2\">\n              Registrar nuevos insumos\n            </h2>\n            <p className=\"information-add-supplies-container__p\">\n              ¿Has recibido stock de insumos nuevos? En este apartado puedes\n              agregar estos insumos nuevos al inventario. Sólo digita el código\n              con el cual identificarás el insumo, el color, metros o cantidad\n              dependiendo si es tela o otro elemento (botones, correderas, etc),\n              una descripción, el URL de la imágen y selecciona si es tela o\n              insumo (si es un botón, corredera, etc). Por último, presiona el\n              botón de enviar y listo :)\n            </p>\n          </div>\n        </div>\n\n        <div\n          className=\"inventory-warehouse-modal-section\"\n          id=\"inventory-warehouse-modal-section\"\n        >\n          <h3>Inventario de los insumos</h3>\n          <p>\n            En este apartado se despliega el inventario de los insumos (telas,\n            botones, correderas, etcétera).\n          </p>\n          <ModalInvetoryWareHouse\n            modalContent={suppliesData}\n            closeModal={closeModal}\n          />\n        </div>\n\n        <div className=\"update-container\" id=\"update-section\">\n          <div className=\"update-container-card\">\n            <div className=\"update-container__h2\">\n              Actualizar insumos registrados\n            </div>\n            <div className=\"update-container-form\">\n              <div className=\"filterDropdownUpdateWarehouse\">\n                <FilterDropdown\n                  options={queryData}\n                  id=\"codigo\"\n                  label=\"codigo\"\n                  prompt=\"Seleccionar código\"\n                  value={valueCode}\n                  onChange={(val: any) => setValueCode(val)}\n                />\n              </div>\n              <input\n                type=\"number\"\n                id=\"amount-update-inventory\"\n                placeholder=\"Cantidad\"\n                className=\"amount-update-inventory\"\n                onChange={(e: any) => setUpdateAmount(e.target.value)}\n              />\n              <button className=\"btn\" onClick={handleUpdateInventory}>\n                {\" \"}\n                Actualizar\n              </button>\n            </div>\n          </div>\n\n          <div className=\"information-update-container\">\n            <h2 className=\"information-update-container__h2\">\n              Actualizar cantidad a un insumo registrado\n            </h2>\n            <p className=\"information-update-container__p\">\n              ¿Has recibido más stock de insumos ya registrados en tu\n              inventario? En este apartado puedes actualizar estos insumos\n              existentes. Solo escoge el codigo, digita la cantidad y presiona\n              el botón actualizar. Así de sencillo :)\n            </p>\n          </div>\n        </div>\n\n        <div className=\"warehouseReqSection\" id=\"request-section\">\n          <h3>Peticiones</h3>\n          <p>\n            En este apartado se muestran las peticiones realizadas por taller\n            confección. Recuerda presionar el botón 'Tomar decisión' para\n            aceptar o rechazar las peticiones.\n          </p>\n          {dressMakingReq.length == 0 && (\n            <>\n              <div className=\"no-data-image-warehouse-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-warehouse-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-warehouse-paragraph\">\n                Aún no hay peticiones\n              </p>\n            </>\n          )}\n          {dressMakingReq.length !== 0 && (\n            <div className=\"dressmakingReqContainer\">\n              {dressMakingReq.map((req: any, index: any) => {\n                return (\n                  <div key={index} className=\"requestWarehouseContainer\">\n                    <h4 className=\"requestWarehouseContainer__h4\">\n                      Petición de taller confección\n                    </h4>\n                    <div className=\"requestWarehouseContainer__reference\">\n                      Referencia: {req.referencia}\n                    </div>\n                    <div className=\"requestWarehouseContainer__reference\">\n                      Cantidad: {req.cantidad}\n                    </div>\n                    <div className=\"requestWarehouseDecisionBTNContainer\">\n                      <button\n                        className=\"btn\"\n                        onClick={() => {\n                          handlerDecision(index);\n                        }}\n                      >\n                        Tomar decisión\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <ModalinsufficientSupplies\n          isOpen={state.isOpenNoSupplies}\n          closeModal={closeModal}\n          arrayNoSupplies={state.modalContent}\n          infoRequest={infoRequest}\n          handlerReject={handlerRefuse}\n        />\n        <ModalDecisionSupplies\n          isOpen={isOpenDecision}\n          closeModal={closeModal}\n          infoRequest={infoRequest}\n          handlerReject={handlerRefuse}\n          handlerAccept={handlerApprove}\n        />\n        <Modal isOpen={state.isFormModalOpen} closeModal={closeModal}>\n          <h1 className=\"modalWarehouseh1\">{state.modalFormContent}</h1>\n          {state.imgCheckNumber === 1 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={completeImage}\n              alt=\"modalImg\"\n            />\n          )}\n          {state.imgCheckNumber === 2 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={errorImage}\n              alt=\"modalImg\"\n            />\n          )}\n        </Modal>\n        <Modal isOpen={state.isModalUpdateOpen} closeModal={closeModal}>\n          <h1 className=\"modalWarehouseh1\">{state.modalUpdateContent}</h1>\n          {state.imgCheckNumber === 1 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={completeImage}\n              alt=\"modalImg\"\n            />\n          )}\n          {state.imgCheckNumber === 2 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={errorImage}\n              alt=\"modalImg\"\n            />\n          )}\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nconst triggerListeners = (setType: any, setUpdateCode: any) => {\n  var selectedOption: any = document.querySelector(\".selected-option-bodega\");\n  var options: any = document.querySelectorAll(\".option-bodega\");\n\n  selectedOption.addEventListener(\"click\", () => {\n    selectedOption.parentElement.classList.toggle(\"active-bodega\");\n  });\n\n  options.forEach((option: any) => {\n    option.addEventListener(\"click\", () => {\n      setTimeout(() => {\n        selectedOption.innerHTML = option.innerHTML;\n        // SET CURRENT REFERENCE VALUE\n        setType(option.innerHTML);\n      }, 300);\n\n      selectedOption.parentElement.classList.remove(\"active-bodega\");\n    });\n  });\n};\n\nexport default withRouter(WareHouse);\n","export const reducer = (state: any, action: any) => {\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\n    const warningMissingSupplies = action.payload;\n    return {\n      ...state,\n      modalContent: warningMissingSupplies,\n      isModalOpen: true,\n      checkNumber: 0,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'SUCCESSFUL_REQUEST') {\n    return {\n      ...state,\n      modalContent: ['La referencia se ha guardado correctamente'],\n      isModalOpen: true,\n      checkNumber: 1,\n      imgCheckNumber: 1,\n    };\n  }\n  if (action.type === 'FAILED_REQUEST') {\n    return {\n      ...state,\n      modalContent: ['La petición no ha tenido exito'],\n      isModalOpen: true,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'INVALID_REFERENCE') {\n    return {\n      ...state,\n      modalContent: ['Ya existe la referencia que desea ingresar'],\n      isModalOpen: true,\n      checkNumber: 3,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'WRONG_INPUT') {\n    return {\n      ...state,\n      modalContent: ['Ingrese correctamente los campos'],\n      isModalOpen: true,\n      checkNumber: 4,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      isModalOpen: true,\n      modalContent: ['El codigo talla no existe'],\n      checkNumber: 5,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'SUCCESSFUL_SAMPLE_INVENTORY') {\n    const sampleInventory = action.payload;\n    return {\n      ...state,\n      isInventoryModalOpen: true,\n      modalInventoryContent: sampleInventory,\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isModalOpen: false,\n      isInventoryModalOpen: false,\n      imgCheckNumber: 0,\n    };\n  }\n\n  return {\n    ...state,\n    isModalOpen: false,\n    isInventoryModalOpen: false,\n    imgCheckNumber: 0,\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/ModalInformationDesign.css';\n\nconst informationModalID: any = document.getElementById('informationModal');\n\nconst ModalInformationDesign = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n  if (!props.isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <div className=\"ModalInfoComponent\">\n      <div className=\"ModalInfoComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalInfoComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>Referencia: {props.reference}</h4>\n        <p>Estos son los insumos que consume la referencia {props.reference}</p>\n        <div className=\"ModalInfoComponent__titleInformation\">\n          <div>Insumo</div>\n          <div>Imagen</div>\n        </div>\n        <div className=\"scroll-design-information-modal\">\n          {props.referenceArray.map((props: any) => {\n            return (\n              <div className=\"items_container-design\" key={props.codigo}>\n                <div className=\"items-information-design\">\n                  <div className=\"item-information-design__ref\">\n                    Referencia: {props.codigo}\n                  </div>\n                  <div className=\"item-information-design__amount\">\n                    Consumo: {props.consumptionAmount}\n                  </div>\n                  <div className=\"item-information-design__description\">\n                    Descripción: {props.descripcion}\n                  </div>\n                  <div className=\"item-information-design__color\">\n                    Color: {props.color}\n                  </div>\n                </div>\n                <div className=\"item-information-design\">\n                  <img\n                    className=\"item-information-image\"\n                    src={props.nombre_imagen}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>,\n    informationModalID\n  );\n};\n\nexport default ModalInformationDesign;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { baseURL } from \"../app/baseURL\";\n\nimport notFoundImage from \"../../assets/Not Found.svg\";\nimport ModalInformationDesign from \"./ModalInformationDesign\";\nimport \"./style/ModalDesignInventory.css\";\n\nconst ModalDesignInventory = ({ modalContent, closeModal }: any) => {\n  useEffect(() => {\n    setTimeout(() => {\n      closeModal();\n    }, 40000);\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [referenceNumber, setReferenceNumber] = useState<string>(\"\");\n  const [referenceArray, setReferenceArray] = useState([]);\n  const getreferenceconsumptionURL = baseURL + \"api/getreferenceconsumption\";\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  const handlerSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  const handlerInfoModal = (payload: any) => {\n    setIsModalOpen(true);\n    setReferenceNumber(payload);\n    const referenceSelection = payload;\n    Axios.post(getreferenceconsumptionURL, { referenceSelection })\n      .then((response) => {\n        setReferenceArray(response.data);\n      })\n  };\n\n  const closeModalInfo = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"container_table-design\">\n      <div className=\"table_title-design\">Información</div>\n      <div className=\"search-design-container\">\n        <i className=\"gg-search\"></i>\n        <input\n          type=\"search\"\n          placeholder=\"Buscar...\"\n          className=\"search-filter-design\"\n          onChange={(e: any) => handlerSearch(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"sample-image-container\">\n        <div className=\"table_header-design-sample\">Muestra</div>\n        <div className=\"table_header-design-img\">Imagen</div>\n      </div>\n      <div className=\"scroll-modal-design\">\n        {modalContent\n          .filter((val: any) => {\n            iterator += 1;\n            if (searchTerm === \"\") {\n              return val;\n            } else if (\n              val.referencia\n                .toString()\n                .slice(0, searchTerm.length)\n                .includes(searchTerm)\n            ) {\n              enableEmpty = false;\n              return val;\n            } else if (iterator == modalContent.length && enableEmpty == true) {\n              showEmptySearch = true;\n            }\n          })\n          .map((props: any) => {\n            return (\n              <div className=\"items_container-design\" key={props.referencia}>\n                <div className=\"items-information-container\">\n                  <div className=\"items-information-ref\">\n                    Referencia: {props.referencia}\n                  </div>\n                  <div className=\"items-information-size\">\n                    Talla: {props.talla}\n                  </div>\n                  <div className=\"items-information-description\">\n                    Descripción: {props.descripcion}\n                  </div>\n                  <div className=\"items-information-color\">\n                    Color: {props.color}\n                  </div>\n                  <div className=\"items-information-valuePerUnit\">\n                    Valor de la unidad: {props.valor_unidad}\n                  </div>\n                  <button\n                    className=\"btn\"\n                    id=\"handleInfoModal\"\n                    onClick={() => handlerInfoModal(props.referencia)}\n                  >\n                    Información de consumo\n                  </button>\n                </div>\n                <div className=\"table_item-design\">\n                  <img className=\"table_img-design\" src={props.nombre_imagen} />\n                </div>\n              </div>\n            );\n          })}\n        {showEmptySearch && (\n          <img className=\"notfoundImg\" src={notFoundImage} alt=\"Not Found\" />\n        )}\n      </div>\n      <ModalInformationDesign\n        isOpen={isModalOpen}\n        closeModal={closeModalInfo}\n        reference={referenceNumber}\n        referenceArray={referenceArray}\n      />\n    </div>\n  );\n};\n\nexport default ModalDesignInventory;\n","import React from 'react';\n\nimport './style/ModalDesign.css';\n\nconst ModalDesign = ({modalContent, closeModal}: any) => {\n  setTimeout(() => {\n    closeModal();\n  }, 5000);\n  return (\n    <div className=\"ModalDesignContainer\">\n      <h4>{modalContent}</h4>\n    </div>\n  );\n};\n\nexport default ModalDesign;\n","import React, {useEffect, useState, useReducer} from 'react';\nimport ReactDOM from 'react-dom';\nimport Axios from 'axios';\n\nimport './style/ModalDesignAddSupplies.css';\nimport {baseURL} from '../app/baseURL';\nimport ModalDesign from './ModalDesign';\nimport ModalDesignInventory from './ModalDesignInventory';\nimport FilterDropdown from '../FilterDropdown';\nimport {type} from 'node:os';\n\nconst addSuppliesID: any = document.getElementById('addSupplies');\n\nconst reducer = (state: any, action: any) => {\n  if (action.type === 'WRONG_INFORMATION') {\n    return {\n      ...state,\n      isOpen: true,\n      modalContent: 'Por favor digite bien todos los campos',\n    };\n  }\n\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      isOpen: true,\n      modalContent: 'Esté código no existe. Por favor digitar otro',\n    };\n  }\n\n  if (action.type === 'CODE_EXIST') {\n    return {\n      ...state,\n      isOpen: true,\n      modalContent: 'Error: Este código ya está agregado',\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isOpen: false,\n    };\n  }\n\n  return {\n    ...state,\n    isOpen: false,\n  };\n};\n\ninterface IWareHouseSupplies {\n  codigo: number;\n  color: string;\n  metros: number;\n  cantidad: number;\n  descripcion: string;\n  nombre_imagen: string;\n  timestamp: string;\n}\n\ninterface ISupplyInformation {\n  supplyCode: string;\n  supplyAmount: string;\n}\n\ninterface IDefaultState {\n  isModalOpen: boolean;\n  modalContent: string;\n}\n\nconst defaultState: IDefaultState = {\n  isModalOpen: false,\n  modalContent: '',\n};\n\nconst ModalDesignAddSupplies = (props: any) => {\n  const [valueSelect, setValueSelect] = useState<any>(null);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [dBWareHouseSupplies, setdBWareHouseSupplies] = useState<\n    IWareHouseSupplies[]\n  >([]);\n  const [addedInformation, setAddedInformation] = useState<\n    ISupplyInformation[]\n  >([]);\n  const dbWareHouseCodesURL: string = baseURL + 'api/warehousecodes';\n  const [inputAmount, setInputAmount] = useState<string>('');\n  const [selectedOption, setSelectedOption] = useState<any>(\n    'Seleccionar insumo'\n  );\n  let optionSelectCode: any = [];\n  let valueSelectComp: any = '';\n  let inputSelectIterator = 0;\n  let inputSelectAddedInfo = 0;\n\n  useEffect(() => {\n    Axios.get(dbWareHouseCodesURL).then((response: any) => {\n      setdBWareHouseSupplies(response.data);\n      if (props.isOpen) {\n      }\n    });\n  }, [props.isOpen]);\n\n  const handlerAddSupplies = () => {\n    var amountHTML: any = document.querySelector('.amountSuppliesInput');\n\n    //SELECT COMPROBATION\n    if (valueSelect === null) {\n      valueSelectComp = {\n        codigo: '',\n      };\n    } else if (typeof valueSelect === 'object') {\n      valueSelectComp = valueSelect.codigo.toString();\n    } else if (typeof valueSelect === 'string') {\n      valueSelectComp = valueSelect;\n    }\n\n    dBWareHouseSupplies.map((val: any) => {\n      if (val.codigo === valueSelectComp) {\n        inputSelectIterator += 1;\n        return inputSelectIterator;\n      } else {\n        return inputSelectIterator;\n      }\n    });\n\n    addedInformation.map((val: any) => {\n      if (val.supplyCode === valueSelectComp) {\n        inputSelectAddedInfo += 1;\n        return inputSelectAddedInfo;\n      } else {\n        return inputSelectAddedInfo;\n      }\n    });\n\n    let enableSelector = valueSelectComp !== '' || valueSelectComp !== null;\n    let enableAmount =\n      Number.isInteger(parseInt(amountHTML.value)) &&\n      parseInt(amountHTML.value) > 0;\n    if (enableSelector && enableAmount) {\n      if (inputSelectIterator === 1) {\n        if (inputSelectAddedInfo === 0) {\n          let informationObject: ISupplyInformation = {\n            supplyCode: valueSelectComp,\n            supplyAmount: inputAmount,\n          };\n          setAddedInformation([...addedInformation, informationObject]);\n\n          // SET EMPTY VALUES\n          amountHTML.value = null;\n          setValueSelect(null);\n        } else {\n          dispatch({type: 'CODE_EXIST'});\n        }\n      } else {\n        dispatch({type: 'CODE_DOES_NOT_EXIST'});\n      }\n    } else {\n      dispatch({type: 'WRONG_INFORMATION'});\n    }\n  };\n\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const removeItem = (code: any) => {\n    let newAddedInformation = addedInformation.filter(\n      (item) => item.supplyCode !== code\n    );\n    setAddedInformation(newAddedInformation);\n  };\n\n  const closeModal = () => {\n    dispatch({type: 'CLOSE_MODAL'});\n  };\n\n  if (!props.isOpen) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <div className=\"ModalAddSuppliesComponent\">\n      <div className=\"ModalAddSuppliesComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalAddSuppliesComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>Añadir telas o insumos</h4>\n        <p className=\"ModalAddSuppliesComponent__p\">\n          Aquí puedes añadir las telas y/o insumos que consume esta referencia.\n        </p>\n        <div className=\"addSuppliesZone\">\n          <div style={{width: 250}}>\n            <FilterDropdown\n              options={dBWareHouseSupplies}\n              id=\"codigo\"\n              label=\"codigo\"\n              prompt={'Seleccionar insumo'}\n              value={valueSelect}\n              onChange={(val: any) => setValueSelect(val)}\n            />\n          </div>\n          <input\n            type=\"number\"\n            className=\"amountSuppliesInput\"\n            placeholder=\"Digite la cantidad\"\n            autoComplete=\"off\"\n            onChange={(e) => setInputAmount(e.target.value)}\n          />\n          <button className=\"btn\" onClick={handlerAddSupplies}>\n            Añadir\n          </button>\n        </div>\n        {state.isOpen && (\n          <ModalDesign\n            modalContent={state.modalContent}\n            closeModal={closeModal}\n          />\n        )}\n        <div className=\"added-container-supplies\">\n          {addedInformation.map((item) => {\n            return (\n              <div key={item.supplyCode} className=\"supplie-add\">\n                <h2>Item agregado: </h2>\n                Codigo: {item.supplyCode} - Cantidad: {item.supplyAmount}\n                <button\n                  className=\"removeItemAddSupplies\"\n                  onClick={() => removeItem(item.supplyCode)}\n                >\n                  X\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"buttonAddSuppliesContainer\">\n          <button\n            className=\"buttonAddSuppliesContainer__ready\"\n            onClick={() => {\n              props.suppliesFromDesign(addedInformation);\n              props.closeModal();\n            }}\n          >\n            Listo\n          </button>\n          <button\n            className=\"buttonAddSuppliesContainer__cancel\"\n            onClick={handleClose}\n          >\n            Cancelar\n          </button>\n        </div>\n      </div>\n    </div>,\n    addSuppliesID\n  );\n};\n\nexport default ModalDesignAddSupplies;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { reducer } from \"../components/design/ReducerDesign\";\nimport \"./style/Design.css\";\nimport ModalDesignInventory from \"../components/design/ModalDesignInventory\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport ModalAddSupplies from \"../components/design/ModalDesignAddSupplies\";\nimport FilterDropdown from \"../components/FilterDropdown\";\n\ninterface ISupplyInformation {\n  supplyCode: string;\n  supplyAmount: string;\n}\n\ninterface IWareHouseSupplies {\n  codigo: number;\n  color: string;\n  metros: number;\n  cantidad: number;\n  descripcion: string;\n  nombre_imagen: string;\n  timestamp: string;\n}\n\nconst defaultState: any = {\n  modalContent: [],\n  isModalOpen: false,\n  isInventoryModalOpen: false,\n  modalInventoryContent: [],\n  checkNumber: 0,\n  imgCheckNumber: 0,\n};\n\nconst Design = () => {\n  const dbWareHouseCodesURL: string = baseURL + \"api/warehousecodes\";\n  const dbSaveNewReference: string = baseURL + \"api/savenewreference\";\n  const productionAPIURL: string = baseURL + \"api/production\";\n  const [switchReRender, setSwitchReRender] = useState<boolean>(false);\n  const [isModalDesignOpen, setIsModalDesignOpen] = useState<boolean>(false);\n  const [addReference, setAddReference] = useState<string>(\"\");\n  const [addDescription, setAddDescription] = useState<string>(\"\");\n  const [addColor, setAddColor] = useState<string>(\"\");\n  const [addImageName, setAddImageName] = useState<string>(\"\");\n  const [addValuePerUnit, setAddValuePerUnit] = useState<string>(\"\");\n  const [valueSizeSelect, setValueSizeSelect] = useState<any>(null);\n  const sizesArray: any = [\n    { codigo: \"1\", label: \"XS\" },\n    { codigo: \"2\", label: \"S\" },\n    { codigo: \"3\", label: \"M\" },\n    { codigo: \"4\", label: \"L\" },\n    { codigo: \"5\", label: \"XL\" },\n  ];\n  let addSize: any = \"\";\n  const [addedInformationFromModal, setAddedInformationFromModal] =\n    useState<any>([]);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [modalAddSupplies, setModalAddSupplies] = useState<boolean>(false);\n  const [toggleState, setToggleState] = useState(1);\n\n  useEffect(() => {\n    Axios.get(dbWareHouseCodesURL).then((response: AxiosResponse) => {});\n    Axios.get(productionAPIURL)\n      .then((response: any) => {\n        dispatch({\n          type: \"SUCCESSFUL_SAMPLE_INVENTORY\",\n          payload: response.data,\n        });\n      })\n      .catch((error) => {});\n  }, [switchReRender]);\n\n  const handlerAddSupplies = () => {\n    setModalAddSupplies(true);\n  };\n\n  const handlerSaveNewReference = () => {\n    let selectedOptionSize: any = document.querySelector(\n      \".selected-option-size\"\n    );\n    let isCodeExist = 0;\n\n    if (valueSizeSelect === null) {\n      addSize = \"\";\n    } else if (typeof valueSizeSelect === \"object\") {\n      addSize = valueSizeSelect.codigo.toString();\n    } else if (typeof valueSizeSelect === \"string\") {\n      addSize = valueSizeSelect;\n    }\n\n    sizesArray.map((val: any) => {\n      if (val.codigo === addSize) {\n        isCodeExist += 1;\n        return isCodeExist;\n      } else {\n        return isCodeExist;\n      }\n    });\n\n    const requestPayload = {\n      addReference: addReference,\n      addSize: addSize,\n      addDescription: addDescription,\n      addColor: addColor,\n      addImageName: addImageName,\n      valuePerUnit: addValuePerUnit,\n      addedInformationFromModal,\n    };\n\n    let enable =\n      addReference != \"\" &&\n      addSize != \"\" &&\n      addDescription != \"\" &&\n      addColor != \"\" &&\n      addImageName != \"\" &&\n      addValuePerUnit != \"\" &&\n      addedInformationFromModal.length != 0;\n    if (enable) {\n      if (isCodeExist === 1) {\n        Axios.post(dbSaveNewReference, requestPayload).then(\n          (response: AxiosResponse): void => {\n            if (response.data === \"SUCCESSFUL_REQUEST\") {\n              setEmptyValues();\n              dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n              setSwitchReRender(!switchReRender);\n              setIsModalDesignOpen(true);\n            }\n            if (response.data === \"FAILED_REQUEST\") {\n              dispatch({ type: \"FAILED_REQUEST\" });\n              setIsModalDesignOpen(true);\n            }\n            if (response.data === \"INVALID_REFERENCE\") {\n              dispatch({ type: \"INVALID_REFERENCE\" });\n              setIsModalDesignOpen(true);\n            }\n          }\n        );\n      } else {\n        dispatch({ type: \"CODE_DOES_NOT_EXIST\" });\n        setIsModalDesignOpen(true);\n      }\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n      setIsModalDesignOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({ tpye: \"CLOSE_MODAL\" });\n    setIsModalDesignOpen(false);\n  };\n\n  const setEmptyValues = () => {\n    let addReferenceOption: any = document.querySelector(\n      \".add-reference-input\"\n    );\n    let addDescriptionOption: any = document.querySelector(\n      \".add-description-input\"\n    );\n    let addColorOption: any = document.querySelector(\".add-color-input\");\n    let addImageNameOption: any = document.querySelector(\n      \".add-imagename-input\"\n    );\n\n    let addValuePerUnit: any = document.getElementById(\"value-per-unit-input\");\n\n    addReferenceOption.value = \"\";\n    setValueSizeSelect(null);\n    addDescriptionOption.value = \"\";\n    addColorOption.value = \"\";\n    addImageNameOption.value = \"\";\n    addValuePerUnit.value= \"\";\n    setAddedInformationFromModal([]);\n    setAddReference(\"\");\n    setAddDescription(\"\");\n    setAddColor(\"\");\n    setAddImageName(\"\");\n    setAddValuePerUnit(\"\");\n  };\n\n  const handleInventory = () => {\n    Axios.get(productionAPIURL)\n      .then((response: any) => {\n        dispatch({\n          type: \"SUCCESSFUL_SAMPLE_INVENTORY\",\n          payload: response.data,\n        });\n      })\n      .catch((error) => {});\n  };\n\n  const closeModalAddSupplies = () => {\n    setModalAddSupplies(false);\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-design-section\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-design\">\n      <div className=\"navbar-design\">\n        <h2 className=\"navbar-design__h2\">Taller diseño</h2>\n        <div className=\"navbar-design-options\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-design active-tabs-design\"\n                : \"tabs-design\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a\n              href=\"#add-reference-design-container\"\n              onClick={handleNavbarClick}\n            >\n              Agregar una nueva muestra\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-design active-tabs-design\"\n                : \"tabs-design\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#inventory-design-modal-section\"\n              onClick={handleNavbarClick}\n            >\n              Inventario de las muestras\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-design-section\" id=\"scroll-design-section\">\n        <div\n          className=\"add-reference-design-container\"\n          id=\"add-reference-design-container\"\n        >\n          <form className=\"design-form\">\n            <h2>Agregar muestra</h2>\n            <div className=\"border-design-div\"></div>\n            <p className=\"design-form__information\">\n              En este formulario puedes asociar insumos a una nueva muestra.\n              Digita la referencia, selecciona la talla, agrega una descripcion,\n              digita el color y la URL de la imágen. Luego, presiona el botón\n              'Añadir/Eliminar Insumos' para agregar o eliminar los insumos que\n              consume esta nueva muestra. Por ultimo, presiona el botón de\n              'Guardar'.\n            </p>\n            <input\n              className=\"add-reference-input\"\n              type=\"number\"\n              placeholder=\"Referencia\"\n              onChange={(e) => setAddReference(e.target.value)}\n            />\n            <div className=\"dropdownDesign\">\n              <FilterDropdown\n                options={sizesArray}\n                id=\"codigo\"\n                label=\"label\"\n                prompt=\"Seleccionar la talla\"\n                value={valueSizeSelect}\n                onChange={(val: any) => setValueSizeSelect(val)}\n              />\n            </div>\n            <input\n              className=\"add-description-input\"\n              type=\"text\"\n              placeholder=\"Descripción\"\n              onChange={(e) => setAddDescription(e.target.value)}\n            />\n            <input\n              className=\"add-color-input\"\n              type=\"text\"\n              placeholder=\"Color\"\n              onChange={(e) => setAddColor(e.target.value)}\n            />\n            <input\n              className=\"add-imagename-input\"\n              type=\"text\"\n              placeholder=\"URL de la imágen\"\n              onChange={(e) => setAddImageName(e.target.value)}\n            />\n            <input\n              className=\"value-per-unit-input\"\n              id=\"value-per-unit-input\"\n              type=\"number\"\n              placeholder=\"Valor de la unidad\"\n              onChange={(e) => setAddValuePerUnit(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              className=\"btn\"\n              id=\"insumoBTN\"\n              onClick={handlerAddSupplies}\n            >\n              Añadir/Eliminar Insumos\n            </button>\n            {addedInformationFromModal.length !== 0 && (\n              <button\n                type=\"button\"\n                className=\"btn\"\n                id=\"saveBTN\"\n                onClick={handlerSaveNewReference}\n              >\n                Guardar\n              </button>\n            )}\n          </form>\n          <div className=\"supplies-added-design\">\n            <h3>Insumos agregados</h3>\n            {addedInformationFromModal.length == 0 && (\n              <>\n                <div className=\"no-data-image-container\">\n                  <img\n                    src={noDataImage}\n                    alt=\"no-data\"\n                    className=\"no-data-image-container__img\"\n                  />\n                </div>\n                <p className=\"no-data-paragraph\">\n                  Aún no se han añadido insumos\n                </p>\n              </>\n            )}\n            {addedInformationFromModal.map((item: any) => {\n              return (\n                <div key={item.supplyCode} className=\"insumo-add\">\n                  <h2>Item agregado: </h2>\n                  Codigo: {item.supplyCode} - Cantidad: {item.supplyAmount}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div\n          className=\"inventory-design-modal-section\"\n          id=\"inventory-design-modal-section\"\n        >\n          <h3>Inventario de las muestras</h3>\n          <p>\n            En este apartado se despliega el inventario de las muestras. Si\n            quieres saber que telas e insumos consume una muestra en especifico,\n            presiona el botón 'Información de consumo'.\n          </p>\n          <ModalDesignInventory\n            closeModal={closeModal}\n            modalContent={state.modalInventoryContent}\n          />\n        </div>\n      </div>\n     {isModalDesignOpen && (\n        <Modal isOpen={true} closeModal={closeModal}>\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n        {state.imgCheckNumber === 1 && (\n          <img\n            className=\"modalWarehouseImg\"\n            src={completeImage}\n            alt=\"modalImg\"\n          />\n        )}\n        {state.imgCheckNumber === 2 && (\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\n        )}\n      </Modal>\n     )}\n      <ModalAddSupplies\n        isOpen={modalAddSupplies}\n        // isOpen={true}\n        closeModal={closeModalAddSupplies}\n        suppliesFromDesign={(msg: any) => setAddedInformationFromModal(msg)}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(Design);\n","interface IState {\n  isModalOpen: boolean;\n  modalContent: string;\n  imgCheckNumber: number;\n}\n\ninterface IActions {\n  type: string;\n}\n\nexport const reducer = (state: IState, action: IActions) => {\n  if (action.type === 'ERROR_REGISTER') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: no ha digitado todos los campos',\n    };\n  }\n\n  if (action.type === 'ERROR_ROL') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: No ha escogido un ROL',\n    };\n  }\n\n  if (action.type === 'INVALID PASSWORD') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: Digite una contraseña mayor o igual a 8 caracteres',\n    };\n  }\n\n  if (action.type === 'PASSWORDS_DO_NOT_MATCH') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: las contraseñas NO coinciden',\n    };\n  }\n\n  if (action.type === 'USERNAME_EXIST') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: el usuario ya existe',\n    };\n  }\n\n  if (action.type === 'SUCCESFUL_POST') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 1,\n      modalContent: '¡Genial! ¡Se ha registrado correctamente!',\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {...state, isModalOpen: false};\n  }\n\n  return {...state, isModalOpen: false, modalContent: ''};\n};\n","import React, {useState, useReducer} from 'react';\nimport Axios from 'axios';\n\n//CSS:\nimport './style/Register.css';\n\n//MyModuls:\nimport {baseURL} from '../components/app/baseURL';\nimport Modal from '../components/Modal';\nimport completeImage from '../assets/complete.svg';\nimport errorImage from '../assets/error.svg';\n\n//Assets:\nimport registerImg from '../assets/register.svg';\n\n//Reducer:\n\nimport {reducer} from '../components/register/ReducerRegister';\n\ninterface IDefaultState {\n  isModalOpen: boolean;\n  modalContent: string;\n  imgCheckNumber: number;\n}\n\ninterface IUser {\n  username: string;\n  password: string;\n  idRol: string;\n}\n\nconst defaultState: IDefaultState = {\n  isModalOpen: false,\n  modalContent: '',\n  imgCheckNumber: 0,\n};\n\nconst Register = () => {\n  const [username, setUsername] = useState<string>('');\n  const [passwordForm, setPasswordForm] = useState<string>('');\n  const [validatePasswordForm, setValidatePasswordForm] = useState<string>('');\n  const [idRol, setIdRol] = useState<string>('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const postRegisterURL: string = baseURL + 'api/register';\n\n  //DOM:\n  const usernameInput = document.getElementById('username') as HTMLInputElement;\n  const passwordInput = document.getElementById('password') as HTMLInputElement;\n  const validatePasswordInput = document.getElementById(\n    'validPassword'\n  ) as HTMLInputElement;\n  const idRolInput = document.getElementById('idRol') as HTMLSelectElement;\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    //VALIDATION THE DATA OF THE FORM:\n    if (username && passwordForm && validatePasswordForm && idRol) {\n      if (idRol !== '0') {\n        if (passwordForm.length >= 7) {\n          if (passwordForm === validatePasswordForm) {\n            const newUser: IUser = {username, password: passwordForm, idRol};\n            Axios.post(postRegisterURL, {\n              user: newUser,\n            })\n              .then((response) => {\n                const validationUsername: string = response.data;\n                //VALIDATION IF THE USER EXIST OR NOT:\n                if (validationUsername === '1') {\n                  //THE USERNAME EXIST\n                  dispatch({type: 'USERNAME_EXIST'});\n                } else if (validationUsername === '2') {\n                  //THE USERNAME DOESN'T EXIST\n                  setUsername('');\n                  setPasswordForm('');\n                  setValidatePasswordForm('');\n                  setIdRol('');\n                  usernameInput.value = '';\n                  passwordInput.value = '';\n                  validatePasswordInput.value = '';\n                  idRolInput.value = '0';\n                  dispatch({type: 'SUCCESFUL_POST'});\n                }\n              })\n          } else {\n            dispatch({type: 'PASSWORDS_DO_NOT_MATCH'});\n          }\n        } else {\n          dispatch({type: 'INVALID PASSWORD'});\n        }\n      } else {\n        dispatch({type: 'ERROR_ROL'});\n      }\n    } else {\n      dispatch({type: 'ERROR_REGISTER'});\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({type: 'CLOSE_MODAL'});\n  };\n\n  return (\n    <div className=\"general-register-container\">\n      <form className=\"register-form\">\n        <h2>Registrar usuario</h2>\n        <div className=\"border-div\"></div>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Usuario\"\n          autoComplete=\"off\"\n          id=\"username\"\n          onChange={(e: any) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Contraseña\"\n          autoComplete=\"off\"\n          id=\"password\"\n          onChange={(e: any) => setPasswordForm(e.target.value)}\n        />\n        <p className=\"passwordInfo\">\n          Ingrese una contraseña de al menos 8 caracteres\n        </p>\n        <input\n          type=\"password\"\n          name=\"validPassword\"\n          id=\"validPassword\"\n          placeholder=\"Contraseña nuevamente\"\n          autoComplete=\"off\"\n          onChange={(e: any) => setValidatePasswordForm(e.target.value)}\n        />\n        <select id=\"idRol\" onChange={(e: any) => setIdRol(e.target.value)}>\n          <option value=\"0\">Seleccionar rol</option>\n          <option value=\"1\">Administrador</option>\n          <option value=\"2\">Diseñador</option>\n          <option value=\"3\">Encargado Bodega</option>\n          <option value=\"4\">Cortador</option>\n          <option value=\"5\">Vendedor</option>\n        </select>\n        <button onClick={handleSubmit} className=\"btn\">\n          Registrarse\n        </button>\n        {state.isModalOpen && (\n          <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n            <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n            {state.imgCheckNumber === 1 && (\n              <img\n                className=\"modalWarehouseImg\"\n                src={completeImage}\n                alt=\"modalImg\"\n              />\n            )}\n            {state.imgCheckNumber === 2 && (\n              <img\n                className=\"modalWarehouseImg\"\n                src={errorImage}\n                alt=\"modalImg\"\n              />\n            )}\n          </Modal>\n        )}\n      </form>\n      <div className=\"img-register-container\">\n        <img src={registerImg} alt=\"register\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Axios from 'axios';\nimport {baseURL} from '../components/app/baseURL';\n\nconst Logout = () => {\n  const logoutAPIURL: string = baseURL + 'api/logout';\n\n  useEffect(() => {\n    Axios.post(logoutAPIURL)\n      .then(() => {\n        window.location.href = '/login';\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return <>{/* <h1>Loading...</h1> */}</>;\n};\n\nexport default withRouter(Logout);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./style/ModalWarehouseProductsReq.css\";\nimport errorIMG from \"../../assets/error.svg\";\n\nconst IDWarehouseProductsReq: any = document.getElementById(\n  \"warehouseProductsReq\"\n);\n\nconst ModalWarehouseProductsReq = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const handlerReject = () => {\n    props.handlerRefuse(props.index);\n    props.closeModal();\n  };\n\n  const handlerPartialDelivery = () => {\n    props.handlerPartialDelivery(props.index);\n    props.closeModal();\n  };\n\n  const handlerApprove = () => {\n    props.handlerAccept(props.index);\n    props.closeModal();\n  };\n\n  if (!props.isOpen) return null;\n  if (props.checkReqNumber === 1) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalWarehouseProductsComponent\">\n        <div className=\"ModalWarehouseProductsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalWarehouseProductsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\n            Lotes necesarios para cumplir con el pedido\n          </h2>\n          <p>First in, first out (FIFO)</p>\n          {props.infoReq.map((info: any) => {\n            return (\n              <div className=\"successModalCard\">\n                <h4 className=\"successModalCard__h4\">\n                  Información del producto\n                </h4>\n                <div className=\"successModalCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"successModalCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"successModalCard__order\">\n                  # de orden: {info.numero_de_orden}\n                </div>\n                <div className=\"successModalCard__amount\">\n                  Cantidad: {info.cantidad}\n                </div>\n                <div className=\"successModalCard__date\">\n                  Fecha: {info.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonssuccessModalContiner\">\n            <button\n              className=\"btn buttonsSuccessModalContiner__approve\"\n              onClick={handlerApprove}\n            >\n              Aceptar\n            </button>\n            <button\n              className=\"btn buttonsSuccessModalContiner__reject\"\n              onClick={handlerReject}\n            >\n              Rechazar\n            </button>\n          </div>\n        </div>\n      </div>,\n      IDWarehouseProductsReq\n    );\n  } else if (props.checkReqNumber === 2) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalWarehouseProductsComponent\">\n        <div className=\"ModalWarehouseProductsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalWarehouseProductsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\n            Cantidad insuficiente\n          </h2>\n          <p>\n            No se tienen todos los productos necesarios en bodega. Sin embargo, puedes enviar la cantidad que hay actualmente.\n          </p>\n          {props.infoReq.map((info: any) => {\n            return (\n              <div className=\"successModalCard\">\n                <h4 className=\"successModalCard__h4\">\n                  Información del producto\n                </h4>\n                <div className=\"successModalCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"successModalCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"successModalCard__order\">\n                  # de orden: {info.numero_de_orden}\n                </div>\n                <div className=\"successModalCard__amount\">\n                  Cantidad: {info.cantidad}\n                </div>\n                <div className=\"successModalCard__date\">\n                  Fecha: {info.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonRejectContainer\">\n            <button\n              className=\"btn buttonRejectContainer__approve\"\n              onClick={handlerPartialDelivery}\n            >\n              Aceptar petición parcial\n            </button>\n            <button\n              className=\"btn buttonRejectContainer__Reject\"\n              onClick={handlerReject}\n            >\n              Rechazar petición\n            </button>\n          </div>\n        </div>\n      </div>,\n      IDWarehouseProductsReq\n    );\n  } else {\n    return ReactDOM.createPortal(\n      <div className=\"ModalWarehouseProductsComponent\">\n        <div className=\"ModalWarehouseProductsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalWarehouseProductsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\n            Aviso: No hay existencias.\n          </h2>\n          <div className=\"imgErrorWarehouseProductContainer\">\n            <img\n              src={errorIMG}\n              alt=\"error image\"\n              className=\"imgErrorWarehouseProductContainer__img\"\n            />\n          </div>\n          <div className=\"buttonssuccessModalContiner\">\n            <button\n              className=\"btn buttonsSuccessModalContiner__reject\"\n              onClick={handlerReject}\n            >\n              Rechazar Petición\n            </button>\n          </div>\n        </div>\n      </div>,\n      IDWarehouseProductsReq\n    );\n  }\n};\n\nexport default ModalWarehouseProductsReq;\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\n// REDUCER\nimport { reducer } from \"../components/dressmaking/ReducerDressMaking\";\n// import './style/DressMaking.css';\n// import '../components/dressmaking/style/buttonStyle.css';\nimport { baseURL } from \"../components/app/baseURL\";\nimport notFoundImage from \"../assets/Not Found.svg\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport { StringLiteralLike, updateSourceFile } from \"typescript\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport \"./style/WareHouseProducts.css\";\nimport ModalWarehouseProductsReq from \"../components/warehouseProducts/ModalWarehouseProductsReq\";\n\nconst WareHouseProducts = () => {\n  //INTERFACES\n  interface IWareHouseProducts {\n    numero_lote: string;\n    referencia: string;\n    numero_de_orden: string;\n    cantidad: string;\n    timestamp: string;\n    restante?: string;\n    faltante?: string;\n  }\n\n  interface IShopRequests {\n    numero_de_orden: number;\n    referencia: number;\n    cantidad: number;\n    idTienda: number;\n    timestamp: string;\n    nombre_tienda: string;\n    direccion: string;\n  }\n\n  // STATES STATEMENTS\n  const [wareHouseProducts, setWareHouseProducts] = useState<\n    IWareHouseProducts[]\n  >([]);\n  const [wareHouseProducts_record, setWareHouseProducts_record] = useState<\n    IWareHouseProducts[]\n  >([]);\n  const [shopRequestInfo, setShopRequestInfo] = useState<any>([]);\n  const [actualShopRequests, setActualShopRequest] = useState<IShopRequests[]>(\n    []\n  );\n  const [reference, setReference] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [isOpenModalReq, setIsOpenModalReq] = useState<boolean>(false);\n  const [checkReqNumber, setCheckReqNumber] = useState<number>(0);\n  const [indexModal, setIndexModal] = useState<number>(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [toggleState, setToggleState] = useState(1);\n  const [switch_actual_shop_request, set_switch_actual_shop_request] = useState<boolean>(false);\n\n  const dbWareHouseProducts: string = baseURL + \"api/getwarehouseproducts\";\n  const dbWareHouseProducts_record: string = baseURL + \"api/getwarehouseproducts_record\";\n  const dbShopsRequestProducts: string = baseURL + \"api/shoprequestproducts\";\n  const dbAcceptShopRequest: string = baseURL + \"api/acceptshoprequest\";\n  const dbActualShopsRequests: string = baseURL + \"api/getactualshoprequests\";\n  const dbSaveDecision: string = baseURL + \"api/savewarehouseproductsdecision\";\n  const dbPartialDelivery: string = baseURL + \"api/updatepartialdelivery\";\n\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  useEffect(() => {\n    Axios.get(dbWareHouseProducts).then((response: AxiosResponse) => {\n      setWareHouseProducts(response.data);\n    });\n\n    Axios.get(dbWareHouseProducts_record).then((response: AxiosResponse) => {\n      setWareHouseProducts_record(response.data);\n    });\n\n    Axios.get(dbActualShopsRequests).then((response: AxiosResponse) => {\n      setActualShopRequest(response.data);\n    });\n  }, [switch_actual_shop_request]);\n\n  const handlerShowInfo = (index: number) => {\n    Axios.post(dbShopsRequestProducts, {\n      reference: actualShopRequests[index].referencia,\n      amount: actualShopRequests[index].cantidad,\n    }).then((response: AxiosResponse) => {\n      if (response.data[response.data.length - 1].faltante) {\n        setShopRequestInfo(response.data);\n        setCheckReqNumber(2);\n        setIndexModal(index);\n        setIsOpenModalReq(true);\n      } else if (response.data === \"NO EXISTE\") {\n        setCheckReqNumber(3);\n        setIndexModal(index);\n        setIsOpenModalReq(true);\n      } else {\n        setShopRequestInfo(response.data);\n        setCheckReqNumber(1);\n        setIndexModal(index);\n        setIsOpenModalReq(true);\n      }\n    });\n  };\n\n  const handlerApprove = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSaveDecision, {\n      ...actualShopRequests[index],\n      neededStock: shopRequestInfo,\n      idDecision: 1,\n    }).then((response: AxiosResponse): void => {\n      set_switch_actual_shop_request(!switch_actual_shop_request);\n    });\n    // let filterResult = actualShopRequests.filter(\n    //   (item: IShopRequests) =>\n    //     item.numero_de_orden != actualShopRequests[index].numero_de_orden\n    // );\n    // setActualShopRequest(filterResult);\n  };\n\n  const handlerRefuse = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSaveDecision, {\n      ...actualShopRequests[index],\n      idDecision: 0,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_SAVING\") {\n        set_switch_actual_shop_request(!switch_actual_shop_request);\n        // let filterResult = actualShopRequests.filter(\n        //   (item: IShopRequests) =>\n        //     item.numero_de_orden !== actualShopRequests[index].numero_de_orden\n        // );\n        // setActualShopRequest(filterResult);\n      } \n    });\n\n  };\n\n  const handlerPartialDelivery = (index: number) => {\n    Axios.post(dbPartialDelivery, {\n      ...actualShopRequests[index],\n      neededStock: shopRequestInfo,\n      idDecision: 1,\n    }).then((response: AxiosResponse) => {\n      set_switch_actual_shop_request(!switch_actual_shop_request);\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenModalReq(false);\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-warehouseproducts\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  const handlerSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  return (\n    <div className=\"general-container-warehouseproducts\">\n      <div className=\"navbar-warehouseproducts\">\n        <h2 className=\"navbar-warehouseproducts__h2\">Bodega Productos</h2>\n        <div className=\"navbar-warehouseproducts-otpions\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\n                : \"tabs-warehouseproducts\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a\n              href=\"#products-warehouseproducts-section\"\n              onClick={handleNavbarClick}\n            >\n              Productos terminados\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\n                : \"tabs-warehouseproducts\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#shops-request-warehouseproducts-section\"\n              onClick={handleNavbarClick}\n            >\n              Peticiones\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\n                : \"tabs-warehouseproducts\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a\n              href=\"#history-warehouseproducts-section\"\n              onClick={handleNavbarClick}\n            >\n              Historial\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-warehouseproducts\" id=\"scroll-warehouseproducts\">\n        <div\n          className=\"products-warehouseproducts-section\"\n          id=\"products-warehouseproducts-section\"\n        >\n          <h3 className=\"products-finished-warehouseproducts-section__h3\">\n            Productos terminados\n          </h3>\n          <p className=\"products-finished-warehouseproducts-section__p\">\n            En este apartado se muestra el inventario de los productos\n            terminados listos para ser enviado a las tiendas.\n          </p>\n          <div className=\"container_table-warehouseproducts\">\n            <div className=\"table_title-warehouseproducts \">Información</div>\n            <div className=\"search-warehouseproducts-container\">\n              <i className=\"gg-search\"></i>\n              <input\n                type=\"search\"\n                placeholder=\"Buscar por referencia...\"\n                className=\"search-filter-warehouseproducts\"\n                onChange={(e: any) => handlerSearch(e.target.value)}\n              ></input>\n            </div>\n            <div className=\"sample-image-warehouseproducts-container\">\n              <div className=\"table_header-warehouseproducts-sample\">\n                Producto\n              </div>\n              <div className=\"table_header-warehouseproducts-img\">Imagen</div>\n            </div>\n            <div className=\"scroll-modal-warehouseproducts\">\n              {wareHouseProducts\n                .filter((val: any) => {\n                  iterator += 1;\n                  if (searchTerm === \"\") {\n                    return val;\n                  } else if (\n                    val.referencia\n                      .toString()\n                      .slice(0, searchTerm.length)\n                      .includes(searchTerm)\n                  ) {\n                    enableEmpty = false;\n                    return val;\n                  } else if (iterator == wareHouseProducts.length && enableEmpty == true) {\n                    showEmptySearch = true;\n                  }\n                })\n                .map((props: any) => {\n                  return (\n                    <div\n                      className=\"items_container-warehouseproducts\"\n                      key={props.referencia}\n                    >\n                      <div className=\"items-information-wproducts-container\">\n                        <div className=\"items-information-wp-lot\">\n                          Numero de lote: {props.numero_lote}\n                        </div>\n                        <div className=\"items-information-wp-ref\">\n                          Referencia: {props.referencia}\n                        </div>\n                        <div className=\"items-information-wp-order\">\n                          Numero de orden: {props.numero_de_orden}\n                        </div>\n                        <div className=\"items-information-amount\">\n                          Cantidad: {props.cantidad}\n                        </div>\n                        <div className=\"items-information-timestamp\">\n                          Fecha:{\" \"}\n                          {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                        </div>\n                      </div>\n                      <div className=\"table_item-warehouseproduct\">\n                        <img\n                          className=\"table_img-warehouseproduct\"\n                          src={props.nombre_imagen}\n                        />\n                      </div>\n                    </div>\n                  );\n                })}\n              {showEmptySearch && (\n                <img\n                  className=\"notfoundImg-warehouseproducts\"\n                  src={notFoundImage}\n                  alt=\"Not Found\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"shops-request-warehouseproducts-section\"\n          id=\"shops-request-warehouseproducts-section\"\n        >\n          <h3 className=\"shops-request-warehouseproducts-section__h3\">\n            Peticiones\n          </h3>\n          <p className=\"shops-request-warehouseproducts-section__p\">\n            En este apartado se encuentran la peticiones realizadas por las\n            tiendas que necesitan stock.\n          </p>\n          {actualShopRequests.length == 0 && (\n            <>\n              <div className=\"no-data-image-warehouseproducts-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-warehouseproducts-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-warehouseproducts-paragraph\">\n                Aún no hay peticiones\n              </p>\n            </>\n          )}\n          {actualShopRequests.length !== 0 && (\n            <div className=\"shopsRequestContainer\">\n              {actualShopRequests.map((shop, index) => {\n                return (\n                  <div className=\"shopRequestCard\">\n                    <h4 className=\"shopRequestCard__h4\">\n                      Información de la petición\n                    </h4>\n                    <div className=\"shopRequestCard__order\">\n                      # de orden: {shop.numero_de_orden}\n                    </div>\n                    <div className=\"shopRequestCard__reference\">\n                      Referencia: {shop.referencia}\n                    </div>\n                    <div className=\"shopRequestCard__amount\">\n                      Cantidad: {shop.cantidad}\n                    </div>\n                    <div className=\"shopRequestCard__shop\">\n                      Tienda: {shop.nombre_tienda}\n                    </div>\n                    <div className=\"shopRequestCard_date\">\n                      Fecha: {shop.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <div className=\"shopRequestCard__address\">\n                      Dirección: {shop.direccion ? shop.direccion : \"0\"}\n                    </div>\n                    <button\n                      className=\"btn shopRequestCard__deploy\"\n                      key={index}\n                      data-index={index}\n                      onClick={() => handlerShowInfo(index)}\n                    >\n                      Desplegar requerimientos\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        <div\n          className=\"history-warehouseproducts-section\"\n          id=\"history-warehouseproducts-section\"\n        >\n          <h3 className=\"products-finished-warehouseproducts-section__h3\">\n            Historial\n          </h3>\n          <p className=\"products-finished-warehouseproducts-section__p\">\n            En este apartado se muestra el historial de los productos que han sido enviado a las tiendas.\n          </p>\n          <div className=\"container_table-warehouseproducts\">\n            <div className=\"table_title-warehouseproducts \">Información</div>\n            <div className=\"search-warehouseproducts-container\">\n              <i className=\"gg-search\"></i>\n              <input\n                type=\"search\"\n                placeholder=\"Buscar por referencia...\"\n                className=\"search-filter-warehouseproducts\"\n                onChange={(e: any) => handlerSearch(e.target.value)}\n              ></input>\n            </div>\n            <div className=\"sample-image-warehouseproducts-container\">\n              <div className=\"table_header-warehouseproducts-sample\">\n                Producto\n              </div>\n              <div className=\"table_header-warehouseproducts-img\">Imagen</div>\n            </div>\n            <div className=\"scroll-modal-warehouseproducts\">\n              {wareHouseProducts_record\n                .filter((val: any) => {\n                  iterator += 1;\n                  if (searchTerm === \"\") {\n                    return val;\n                  } else if (\n                    val.referencia\n                      .toString()\n                      .slice(0, searchTerm.length)\n                      .includes(searchTerm)\n                  ) {\n                    enableEmpty = false;\n                    return val;\n                  } else if (iterator == wareHouseProducts_record.length && enableEmpty == true) {\n                    showEmptySearch = true;\n                  }\n                })\n                .map((props: any) => {\n                  return (\n                    <div\n                      className=\"items_container-warehouseproducts\"\n                      key={props.referencia}\n                    >\n                      <div className=\"items-information-wproducts-container\">\n                        <div className=\"items-information-wp-lot\">\n                          Numero de lote: {props.numero_lote}\n                        </div>\n                        <div className=\"items-information-wp-ref\">\n                          Referencia: {props.referencia}\n                        </div>\n                        <div className=\"items-information-wp-order\">\n                          Numero de orden: {props.numero_de_orden}\n                        </div>\n                        <div className=\"items-information-amount\">\n                          Cantidad: {props.cantidad}\n                        </div>\n                        <div className=\"items-information-timestamp\">\n                          Fecha:{\" \"}\n                          {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                        </div>\n                      </div>\n                      <div className=\"table_item-warehouseproduct\">\n                        <img\n                          className=\"table_img-warehouseproduct\"\n                          src={props.nombre_imagen}\n                        />\n                      </div>\n                    </div>\n                  );\n                })}\n              {showEmptySearch && (\n                <img\n                  className=\"notfoundImg-warehouseproducts\"\n                  src={notFoundImage}\n                  alt=\"Not Found\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalWarehouseProductsReq\n        isOpen={isOpenModalReq}\n        closeModal={closeModal}\n        infoReq={shopRequestInfo}\n        checkReqNumber={checkReqNumber}\n        handlerRefuse={handlerRefuse}\n        handlerAccept={handlerApprove}\n        handlerPartialDelivery={handlerPartialDelivery}\n        index={indexModal}\n      />\n    </div>\n  );\n};\n\nexport default WareHouseProducts;\n","import React, { useState } from \"react\";\n\nimport notFoundImage from \"../../assets/Not Found.svg\";\nimport \"./style/InfoShopsInventory.css\";\n\nconst InfoShopsInventory = (props: any) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  const handleSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  const handlerReceived = (index: number) => {\n    props.receivedFunction(index);\n  };\n\n  if (props.checkNumber === 1) {\n    return (\n      <div className=\"container_table-shops\">\n        <div className=\"table_title-shops\">Información</div>\n        <div className=\"search-shops-container\">\n          <i className=\"gg-search\"></i>\n          <input\n            type=\"search\"\n            placeholder=\"Buscar por referencia...\"\n            className=\"search-filter-shops\"\n            onChange={(e: any) => handleSearch(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"sample-image-shops-container\">\n          <div className=\"table_header-shops-sample\">Producto</div>\n          <div className=\"table_header-shops-img\">Imagen</div>\n        </div>\n        <div className=\"scroll-modal-shops\">\n          {props.arrayInformation\n            .filter((val: any) => {\n              iterator += 1;\n              if (searchTerm === \"\") {\n                return val;\n              } else if (\n                val.referencia\n                  .toString()\n                  .slice(0, searchTerm.length)\n                  .includes(searchTerm)\n              ) {\n                enableEmpty = false;\n                return val;\n              } else if (\n                iterator == props.arrayInformation.length &&\n                enableEmpty == true\n              ) {\n                showEmptySearch = true;\n              }\n            })\n            .map((props: any, index: any) => {\n              return (\n                <div className=\"items_container-shops\" key={index}>\n                  <div className=\"items-information-shops-container\">\n                    <div className=\"items-information-shops__lot\">\n                      Numero de lote: {props.numero_lote}\n                    </div>\n                    <div className=\"items-information-shops__ref\">\n                      Referencia: {props.referencia}\n                    </div>\n                    <div className=\"items-information-shops__order\">\n                      Numero de orden tiendas: {props.numero_de_orden}\n                    </div>\n                    <div className=\"items-information-shops__shop\">\n                      Tienda destino: {props.nombre_tienda}\n                    </div>\n                    <div className=\"items-information-shops__amount\">\n                      Cantidad: {props.cantidadTotal}\n                    </div>\n                    <div className=\"items-information-shops__timestamp\">\n                      Fecha: {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <div className=\"items-information-shops-button-container\">\n                      <button\n                        className=\"btn items-information-shops__button\"\n                        onClick={() => handlerReceived(index)}\n                      >\n                        Confirmar Recibido\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"table_item-shops\">\n                    <img\n                      className=\"table_img-shops\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          {showEmptySearch && (\n            <img\n              className=\"notfoundImg-shops\"\n              src={notFoundImage}\n              alt=\"Not Found\"\n            />\n          )}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container_table-shops\">\n        <div className=\"table_title-shops\">Información</div>\n        <div className=\"search-shops-container\">\n          <i className=\"gg-search\"></i>\n          <input\n            type=\"search\"\n            placeholder=\"Buscar por referencia...\"\n            className=\"search-filter-shops\"\n            onChange={(e: any) => handleSearch(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"sample-image-shops-container\">\n          <div className=\"table_header-shops-sample\">Producto</div>\n          <div className=\"table_header-shops-img\">Imagen</div>\n        </div>\n        <div className=\"scroll-modal-shops\">\n          {props.arrayInformation\n            .filter((val: any) => {\n              iterator += 1;\n              if (searchTerm === \"\") {\n                return val;\n              } else if (\n                val.referencia\n                  .toString()\n                  .slice(0, searchTerm.length)\n                  .includes(searchTerm)\n              ) {\n                enableEmpty = false;\n                return val;\n              } else if (\n                iterator == props.arrayInformation.length &&\n                enableEmpty == true\n              ) {\n                showEmptySearch = true;\n              }\n            })\n            .map((props: any, index: any) => {\n              return (\n                <div className=\"items_container-shops\" key={index}>\n                  <div className=\"items-information-shops-container\">\n                    <div className=\"items-information-shops__lot\">\n                      Numero de lote: {props.numero_lote}\n                    </div>\n                    <div className=\"items-information-shops__ref\">\n                      Referencia: {props.referencia}\n                    </div>\n                    <div className=\"items-information-shops__order\">\n                      Numero de orden tiendas: {props.numero_de_orden}\n                    </div>\n                    <div className=\"items-information-shops__shop\">\n                      Tienda: {props.nombre_tienda}\n                    </div>\n                    <div className=\"items-information-shops__amount\">\n                      Cantidad: {props.cantidadTotal}\n                    </div>\n                    <div className=\"items-information-shops__timestamp\">\n                      Fecha: {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                  </div>\n                  <div className=\"table_item-shops\">\n                    <img\n                      className=\"table_img-shops\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          {showEmptySearch && (\n            <img\n              className=\"notfoundImg-shops\"\n              src={notFoundImage}\n              alt=\"Not Found\"\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default InfoShopsInventory;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\n\nimport \"./style/ModalShopsReq.css\";\nimport errorIMG from \"../../assets/error.svg\";\nimport { baseURL } from \"../app/baseURL\";\n\nconst modalShopsReqId: any = document.getElementById(\"ModalShopsReq\");\n\nconst ModalShopsReq = (props: any) => {\n  const url = baseURL + \"api/modalrequiredstock\";\n  const requiredStock = props.requiredStock;\n  const [requiredStockOrdered, setRequiredStockOrdered] = useState<any>([]);\n\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const handleDecision = (decisionNumber: number) => {\n    props.handleDecision(decisionNumber);\n    props.closeModal();\n  };\n\n  useEffect(() => {\n    if (props.checkReqNumber !== 3) {\n      Axios.post(url, requiredStock).then((response: any) => {\n        setRequiredStockOrdered(response.data);\n      });\n    }\n  }, []);\n\n  if (!props.isOpen) return null;\n\n  if (props.checkReqNumber === 1) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalShopsComponent\">\n        <div className=\"ModalShopsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalShopsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalShopsComponent__h2\">\n            Lotes necesarios para cumplir con el pedido\n          </h2>\n          <p>First in, first out (FIFO)</p>\n          {requiredStockOrdered.map((info: any) => {\n            return (\n              <div className=\"ModalShopsCard\">\n                <h4 className=\"ModalShopsCard__h4\">Información del producto</h4>\n                <div className=\"ModalShopsCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"ModalShopsCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"ModalShopsCard__amount\">\n                  Cantidad: {info.cantidadTotal}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonsModalShopsContainer\">\n            <button\n              className=\"btn buttonsModalShopsContainer__approve\"\n              onClick={() => handleDecision(1)}\n            >\n              Aceptar\n            </button>\n            <button\n              className=\"btn buttonsModalShopsContainer__reject\"\n              onClick={() => handleDecision(0)}\n            >\n              Rechazar\n            </button>\n          </div>\n        </div>\n      </div>,\n      modalShopsReqId\n    );\n  } else if (props.checkReqNumber === 2) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalShopsComponent\">\n        <div className=\"ModalShopsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalShopsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalShopsComponent__h2\">\n            ATENCIÓN: No hay el stock exacto\n          </h2>\n          <p>\n            Para cumplir con este pedido faltarían {props.stockMissingAmount}{\" \"}\n            productos. Si así lo deseas pueden enviar la cantidad disponible:{\" \"}\n            {props.stockAvailableAmount} productos.\n          </p>\n          {requiredStockOrdered.map((info: any) => {\n            return (\n              <div className=\"ModalShopsCard\">\n                <h4 className=\"ModalShopsCard__h4\">Información del producto</h4>\n                <div className=\"ModalShopsCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"ModalShopsCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"ModalShopsCard__amount\">\n                  Cantidad: {info.cantidadTotal}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonsModalShopsContainer\">\n            <button\n              className=\"btn buttonsModalShopsContainer__approve\"\n              onClick={() => handleDecision(2)}\n            >\n              Aceptar\n            </button>\n            <button\n              className=\"btn buttonsModalShopsContainer__reject\"\n              onClick={() => handleDecision(0)}\n            >\n              Rechazar\n            </button>\n          </div>\n        </div>\n      </div>,\n      modalShopsReqId\n    );\n  } else {\n    return ReactDOM.createPortal(\n      <div className=\"ModalShopsComponent\">\n        <div className=\"ModalShopsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalShopsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalShopsComponent__h2\">\n            No hay existencias de esta referencia en esta tienda\n          </h2>\n          <div className=\"imgErrorShopsContainer\">\n            <img\n              src={errorIMG}\n              alt=\"error image\"\n              className=\"imgErrorShopsContainer__img\"\n            />\n          </div>\n          <div className=\"buttonsRejectShopsModalContainer\">\n            <button\n              className=\"btn buttonsRejectShopsModalContainer__reject\"\n              onClick={() => handleDecision(0)}\n            >\n              Rechazar Petición\n            </button>\n          </div>\n        </div>\n      </div>,\n      modalShopsReqId\n    );\n  }\n};\n\nexport default ModalShopsReq;\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\n// REDUCER\nimport \"./style/Shops.css\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport FilterDropdown from \"../components/FilterDropdown\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport InfoShopsInventory from \"../components/shops/InfoShopsInventory\";\nimport ModalShopsReq from \"../components/shops/ModalShopsReq\";\nimport { StringLiteralLike, updateSourceFile } from \"typescript\";\n\nconst reducer = (state: any, action: any) => {\n  if (action.type === \"SUCCESSFUL_REQUEST\") {\n    return {\n      ...state,\n      modalContent: \"Petición realizada\",\n      imgCheckNumber: 1,\n      isModalOpen: true,\n    };\n  }\n  if (action.type === \"WRONG_INPUT\") {\n    return {\n      ...state,\n      modalContent: \"Error: Digite todos los campos correctamente\",\n      isModalOpen: true,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === \"CLOSE_MODAL\") {\n    return {\n      ...state,\n      isModalOpen: false,\n      imgCheckNumber: 0,\n      modalContent: \"\",\n    };\n  }\n  return {\n    ...state,\n    isModalOpen: false,\n    modalContent: \"\",\n    imgCheckNumber: 0,\n  };\n};\n\nconst defaultState: any = {\n  isModalOpen: false,\n  modalContent: \"\",\n  imgCheckNumber: 0,\n};\n\nconst Shops = () => {\n  interface IReference {\n    referencia: number;\n    id_talla: number;\n    descripcion: string;\n    color: string;\n    nombre_imagen: string;\n    codigoycantidad: string;\n  }\n  interface IShops {\n    idTienda: number;\n    nombre_tienda: string;\n    direccion: string;\n  }\n\n  const [references, setReferences] = useState<IReference[]>([]);\n  const [shops, setShops] = useState<IShops[]>([]);\n  const [shopsOrigin, setShopsOrigin] = useState<IShops[]>([]);\n  const [shopsDestination, setShopsDestination] = useState<IShops[]>([]);\n  const [valueReferenceSelect, setValueReferenceSelect] = useState<any>(null);\n  const [valueShopSelect, setValueShopSelect] = useState<any>(null);\n  const [amount, setAmount] = useState<string>(\"\");\n  const [selectedReference, setSelectedReference] = useState<string>(\"\");\n  const [selectedShop, setSelectedShop] = useState<string>(\"\");\n  const [approvedRequests, setApprovedRequests] = useState<any>([]);\n  const [numberInput, setNumberInput] = useState<string>(\"\");\n  const [infoDeliveryState, setInfoDeliveryState] = useState<any>([]);\n  const [infoActualInventory, setInfoActualInventory] = useState<any>([]);\n  const [requiredStock, setRequiredStock] = useState<any>([]);\n  const [infoRequestsBetweenShops, setInfoRequestsBetweenShops] = useState<any>(\n    []\n  );\n  const [isShopOriginSelected, setIsShopOriginSelected] =\n    useState<boolean>(false);\n  const [checkReqNumber, setCheckReqNumber] = useState<number>(0);\n  const [indexModal, setIndexModal] = useState<number>(0);\n  const [isOpenModalReq, setIsOpenModalReq] = useState<boolean>(false);\n  const [stockMissingAmount, setStockMissingAmount] = useState<number>(0);\n  const [stockAvailableAmount, setStockAvailableAmount] = useState<number>(0);\n  const [auxiliar, setAuxiliar] = useState<any>([]);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const refInputBetweenShops: any = useRef(null);\n  const refInputReqToWarehouseProducts: any = useRef(null);\n  const [switchUseEffect, setSwitchUseEffect] = useState<boolean>(false);\n\n  // REQUEST BETWEEN SHOPS useStates\n  const [value_reference_request, set_value_reference_request] =\n    useState<any>(null);\n  const [amount_request, set_amount_request] = useState<string>(\"\");\n  const [value_origin_shop, set_value_origin_shop] = useState<any>(null);\n  const [value_destination_shop, set_value_destination_shop] =\n    useState<any>(null);\n  const [toggleState, setToggleState] = useState(1);\n  // DATABASE URLS\n  const dbReferencesURL: string = baseURL + \"api/references\";\n  const dbShopsInfoURL: string = baseURL + \"api/shopsinformation\";\n  const dbProductsRequestURL: string =\n    baseURL + \"api/shopwarehouseproductsrequest\";\n  const dbDeliveryState: string = baseURL + \"api/deliverystate\";\n  const dbActualInventory: string = baseURL + \"api/getactualinventory\";\n  const dbActualRequestsBetweenShops: string =\n    baseURL + \"api/getactualrequestbetweenshops\";\n  const dbUpdateReceivedState: string = baseURL + \"api/updatereceivedstate\";\n  const dbRequestBetweenShops: string = baseURL + \"api/requestsbetweenshops\";\n  const dbDecisionBetweenShops: string = baseURL + \"api/decisionbetweenshops\";\n  const dbSaveNewShopRequest: string = baseURL + \"api/save_newshop_request\";\n\n  useEffect(() => {\n    Axios.get(dbReferencesURL).then((response: AxiosResponse) => {\n      setReferences(response.data);\n    });\n\n    Axios.get(dbShopsInfoURL).then((response: AxiosResponse) => {\n      setShops(response.data);\n      setShopsOrigin(response.data);\n      setShopsDestination(response.data);\n    });\n\n    Axios.get(dbActualInventory).then((response: AxiosResponse) => {\n      setInfoActualInventory(response.data);\n    });\n\n    Axios.get(dbDeliveryState).then((response: AxiosResponse) => {\n      setInfoDeliveryState(response.data);\n    });\n\n    Axios.get(dbActualRequestsBetweenShops).then((response: AxiosResponse) => {\n      setInfoRequestsBetweenShops(response.data);\n    });\n\n    const triggerListeners = (\n      class1: string,\n      class2: string,\n      setNumber: number\n    ) => {\n      var selectedOption: any = document.querySelector(class1);\n      var options: any = document.querySelectorAll(class2);\n\n      selectedOption.addEventListener(\"click\", () => {\n        selectedOption.parentElement.classList.toggle(\"active\");\n      });\n\n      options.forEach((option: any) => {\n        option.addEventListener(\"click\", () => {\n          setTimeout(() => {\n            selectedOption.innerHTML = option.innerHTML;\n            // SET CURRENT REFERENCE VALUE\n            // 0 ==> Reference\n            if (setNumber === 0) {\n              setSelectedReference(option.innerHTML);\n              // 1 ==> Shop id\n            } else if (setNumber === 1) {\n              setSelectedShop(option.getAttribute(\"data-id\"));\n            }\n          }, 300);\n\n          selectedOption.parentElement.classList.remove(\"active\");\n        });\n      });\n    };\n  }, [switchUseEffect]);\n\n  // GENERAL DATABASE CHECK\n  const check_existing_value = async (check_case: number, payload: string) => {\n    try {\n      const response = await Axios.post(baseURL + \"api/check_existing_value\", {\n        check_case,\n        payload,\n      });\n      return response.data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // CHECK THE TYPE DUE TO THE SEARCH DROPDOWN\n  const check_type_case = (case_parameter: any, case_attribute: string) => {\n    let result = \"\";\n    if (typeof case_parameter === \"object\" && case_parameter !== null) {\n      result = case_parameter[case_attribute].toString();\n      return result;\n    } else if (typeof case_parameter === \"string\" && case_parameter !== null) {\n      result = case_parameter;\n      return result;\n    }\n    return result;\n  };\n\n  const productsRequest = async () => {\n    let valueReferenceSelected: string = check_type_case(\n      valueReferenceSelect,\n      \"referencia\"\n    );\n    let valueShopSelected: string = check_type_case(\n      valueShopSelect,\n      \"idTienda\"\n    );\n    let isReferenceExist: boolean = false;\n    let isShopExist: boolean = false;\n\n    const correctAmount = parseFloat(amount);\n\n    // CHECK IN DATABASE ==> return boolean\n    isReferenceExist = await check_existing_value(0, valueReferenceSelected); // O: referencia\n    isShopExist = await check_existing_value(1, valueShopSelected); // 1: idTienda\n\n    let enableInput = valueShopSelected !== \"\";\n    let enableInput2 = valueReferenceSelected !== \"\";\n    if (\n      Number.isInteger(correctAmount) &&\n      correctAmount > 0 &&\n      enableInput &&\n      enableInput2 &&\n      isShopExist &&\n      isReferenceExist\n    ) {\n      Axios.post(dbProductsRequestURL, {\n        actualAmount: amount,\n        referenceSelection: valueReferenceSelected,\n        idShop: valueShopSelected,\n      }).then((response: AxiosResponse): void => {\n        dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n        setValueReferenceSelect(null);\n        setValueShopSelect(null);\n        refInputReqToWarehouseProducts.current.value = \"\";\n      });\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const closeModal = () => {\n    setIsOpenModalReq(false);\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const handlerReceived = (index: number) => {\n    Axios.post(dbUpdateReceivedState, infoDeliveryState[index]).then(\n      (response: AxiosResponse) => {\n        setInfoDeliveryState(response.data[0]);\n        setInfoActualInventory(response.data[1]);\n      }\n    );\n    setSwitchUseEffect(!switchUseEffect);\n  };\n\n  const query_post = async (url: string, payload: any) => {\n    try {\n      const response: AxiosResponse = await Axios.post(url, payload);\n      return response.data;\n    } catch (err) {\n      console.error(\"There is an error\", err);\n      return;\n    }\n  };\n\n  const request_betweenshops_handler = async () => {\n    let valueReferenceSelected: string = check_type_case(\n      value_reference_request,\n      \"referencia\"\n    );\n    let valueOriginShopSelected: string = check_type_case(\n      value_origin_shop,\n      \"idTienda\"\n    );\n    let valueDestinationShopSelected: string = check_type_case(\n      value_destination_shop,\n      \"idTienda\"\n    );\n    let isReferenceExist: boolean = false;\n    let isOShopExist: boolean = false; //Origin\n    let isDShopExist: boolean = false; //Destination\n    const correctAmount = parseFloat(amount_request);\n\n    // CHECK IN DATABASE ==> return boolean\n    isReferenceExist = await check_existing_value(0, valueReferenceSelected); // O: referencia\n    isOShopExist = await check_existing_value(1, valueOriginShopSelected); // 1: idTienda\n    isDShopExist = await check_existing_value(1, valueDestinationShopSelected); // 1: idTienda\n\n    let enableInput = valueReferenceSelected !== \"\" && isReferenceExist;\n    let enableInput2 = valueOriginShopSelected !== \"\" && isOShopExist;\n    let enableInput3 = valueDestinationShopSelected !== \"\" && isDShopExist;\n\n    if (\n      Number.isInteger(correctAmount) &&\n      correctAmount > 0 &&\n      enableInput &&\n      enableInput2 &&\n      enableInput3\n    ) {\n      const data = {\n        cantidad: amount_request,\n        referencia: valueReferenceSelected,\n        tienda_origen: valueOriginShopSelected,\n        tienda_destino: valueDestinationShopSelected,\n      };\n      const response: AxiosResponse[] = await query_post(\n        dbSaveNewShopRequest,\n        data\n      );\n      set_value_reference_request(null);\n      refInputBetweenShops.current.value = \"\";\n      set_value_origin_shop(null);\n      set_value_destination_shop(null);\n      setIsShopOriginSelected(false);\n      setSwitchUseEffect(!switchUseEffect);\n      dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const handler_required_stock = async (index: number) => {\n    const actualTarget = infoRequestsBetweenShops[index];\n    const response: AxiosResponse[] = await query_post(dbRequestBetweenShops, {\n      ...infoRequestsBetweenShops[index],\n    });\n    setAuxiliar([\n      actualTarget.cantidad,\n      actualTarget.tienda_destino,\n      actualTarget.numero_peticion,\n    ]);\n    setIndexModal(index);\n    if (response[0] !== undefined) {\n      const required_stock_size: number = response.length;\n      const amount_number: number = parseInt(actualTarget.cantidad);\n      if (required_stock_size < amount_number) {\n        setCheckReqNumber(2);\n        setStockMissingAmount(amount_number - required_stock_size);\n        setStockAvailableAmount(required_stock_size);\n        setRequiredStock(response);\n        setIsOpenModalReq(true);\n      } else {\n        setCheckReqNumber(1);\n        setRequiredStock(response);\n        setIsOpenModalReq(true);\n      }\n    } else {\n      setCheckReqNumber(3);\n      setIsOpenModalReq(true);\n    }\n  };\n\n  const handler_final_decision = async (id_decision: number) => {\n    if (id_decision === 1) {\n      // ACCEPT\n      const response_decision_state: AxiosResponse | undefined =\n        await query_post(dbDecisionBetweenShops, {\n          numeros_de_entrada: requiredStock,\n          data: {\n            tienda_destino: auxiliar[1],\n            numero_peticion: auxiliar[2],\n            id_decision,\n          },\n        });\n      setSwitchUseEffect(!switchUseEffect);\n    } else if (id_decision === 0) {\n      // REFUSE\n      const response_decision_state: AxiosResponse | undefined =\n        await query_post(dbDecisionBetweenShops, {\n          data: { numero_peticion: auxiliar[2], id_decision },\n        });\n      setSwitchUseEffect(!switchUseEffect);\n    } else if (id_decision === 2) {\n      // PARTIAL\n      const response_decision_state: AxiosResponse | undefined =\n        await query_post(dbDecisionBetweenShops, {\n          numeros_de_entrada: requiredStock,\n          data: {\n            tienda_destino: auxiliar[1],\n            numero_peticion: auxiliar[2],\n            id_decision,\n            envio_real: stockAvailableAmount,\n          },\n        });\n      setSwitchUseEffect(!switchUseEffect);\n    }\n  };\n\n  const handleDropdownChange = (val: any) => {\n    const nameShopSelected = JSON.stringify(val.nombre_tienda).replace(\n      /['\"]+/g,\n      \"\"\n    );\n    Axios.get(dbShopsInfoURL).then((response: AxiosResponse) => {\n      const shopsNames = response.data;\n      const shopsNamesFiltered = shopsNames.filter(\n        (shop: any) => shop.nombre_tienda !== nameShopSelected\n      );\n      setShopsDestination(shopsNamesFiltered);\n      set_value_destination_shop(null);\n      setIsShopOriginSelected(true);\n    });\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\"scroll-shops\") as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-shops\">\n      <div className=\"navbar-shops\">\n        <h2 className=\"navbar-shops__h2\">Tiendas</h2>\n        <div className=\"navbar-shops-otpions\">\n          <div\n            className={\n              toggleState === 1 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a href=\"#shops-request-wp\" onClick={handleNavbarClick}>\n              Peticion a bodega productos\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#products-process-shops-section\"\n              onClick={handleNavbarClick}\n            >\n              Inventario tiendas\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a href=\"#products-send-shops-section\" onClick={handleNavbarClick}>\n              Productos enviados\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 4 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(4)}\n          >\n            <a href=\"#reqs-between-shops-section\" onClick={handleNavbarClick}>\n              Petición entre tiendas\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 5 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(5)}\n          >\n            <a\n              href=\"#active-req-between-shops-section\"\n              onClick={handleNavbarClick}\n            >\n              Peticiones activas entre tiendas\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"scroll-shops-section\" id=\"scroll-shops\">\n        <div className=\"shops-request-wp\" id=\"shops-request-wp\">\n          <div className=\"makeReqShopsContainer\">\n            <h4>Enviar peticiones a Bodega Producto</h4>\n            <div className=\"makeReqShopsContainer__dropdownReference\">\n              <FilterDropdown\n                options={references}\n                id=\"referencia\"\n                label=\"referencia\"\n                prompt=\"Seleccionar referencia\"\n                value={valueReferenceSelect}\n                onChange={(val: any) => setValueReferenceSelect(val)}\n              />\n            </div>\n            <input\n              ref={refInputReqToWarehouseProducts}\n              id=\"makeReqShopsContainer__actualAmount\"\n              name=\"actualAmount\"\n              className=\"makeReqShopsContainer__actualAmount\"\n              placeholder=\"Digite la cantidad\"\n              type=\"number\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                setAmount(e.target.value);\n              }}\n            />\n            <div className=\"makeReqShopsContainer__dropdownShop\">\n              <FilterDropdown\n                options={shops}\n                id=\"idTienda\"\n                label=\"nombre_tienda\"\n                prompt=\"Seleccionar tienda\"\n                value={valueShopSelect}\n                onChange={(val: any) => setValueShopSelect(val)}\n              />\n            </div>\n            <button\n              className=\"btn makeReqButtonContainer\"\n              type=\"button\"\n              onClick={productsRequest}\n            >\n              Enviar\n            </button>\n          </div>\n\n          <div className=\"information-shop-request-wp-container\">\n            <h2 className=\"information-shop-request-wp-container__h2\">\n              Enviar petición a Bodega Productos\n            </h2>\n            <p className=\"information-shop-request-wp-container__p\">\n              ¿Necesitas stock en alguna tienda? Entonces envía una petición a\n              Bodega Productos para enviar productos a una tienda en concreto.\n              Solo escoge la referencia del producto que necesitas, digita\n              cuantos deseas, selecciona la tienda de destino y preciona el\n              botón de enviar. Así de sencillo :)\n            </p>\n          </div>\n        </div>\n\n        <div\n          className=\"products-process-shops-section\"\n          id=\"products-process-shops-section\"\n        >\n          <h3 className=\"products-process-shops-section__h3\">\n            Inventario tiendas\n          </h3>\n          <p className=\"products-process-shops-section__p\">\n            En este apartado se encuentra el inventario de todas las tiendas.\n          </p>\n          <InfoShopsInventory\n            arrayInformation={infoActualInventory}\n            checkNumber={0}\n          />\n        </div>\n\n        <div\n          className=\"products-send-shops-section\"\n          id=\"products-send-shops-section\"\n        >\n          <h3 className=\"products-send-shops-section__h3\">\n            Productos en envio\n          </h3>\n          <p className=\"products-send-shops-section__p\">\n            Aquí se encuentran los productos que están en camino hacia una o\n            varias tiendas. Por favor, informe que ya ha llegado el pedido\n            presionando el botón 'Confirmar recibido'.\n          </p>\n          <InfoShopsInventory\n            arrayInformation={infoDeliveryState}\n            checkNumber={1}\n            receivedFunction={handlerReceived}\n          />\n        </div>\n\n        <div\n          className=\"reqs-between-shops-section\"\n          id=\"reqs-between-shops-section\"\n        >\n          <div className=\"reqs-between-shops\">\n            <h4>Enviar petición entre tiendas</h4>\n            <div className=\"reqs-between-shops__dropdownReference\">\n              <FilterDropdown\n                options={references}\n                id=\"referencia\"\n                label=\"referencia\"\n                prompt=\"Seleccionar referencia\"\n                value={value_reference_request}\n                onChange={(val: any) => set_value_reference_request(val)}\n              />\n            </div>\n            <input\n              ref={refInputBetweenShops}\n              id=\"reqs-between-shops__actualAmount\"\n              name=\"actualAmount\"\n              className=\"reqs-between-shops__actualAmount\"\n              placeholder=\"Digite la cantidad\"\n              type=\"number\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                set_amount_request(e.target.value);\n              }}\n            />\n            <div className=\"reqs-between-shops__dropdownShop\">\n              <FilterDropdown\n                options={shopsOrigin}\n                id=\"idTienda\"\n                label=\"nombre_tienda\"\n                prompt=\"Seleccionar la tienda origen\"\n                value={value_origin_shop}\n                onChange={(val: any) => {\n                  set_value_origin_shop(val);\n                  handleDropdownChange(val);\n                }}\n              />\n            </div>\n            <div className=\"reqs-between-shops__dropdownShop\">\n              {isShopOriginSelected ? (\n                <FilterDropdown\n                  options={shopsDestination}\n                  id=\"idTienda\"\n                  label=\"nombre_tienda\"\n                  prompt=\"Seleccionar la tienda de destino\"\n                  value={value_destination_shop}\n                  onChange={(val: any) => set_value_destination_shop(val)}\n                />\n              ) : null}\n            </div>\n            <div className=\"reqs-between-shops-buttonContainer\">\n              <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={request_betweenshops_handler}\n              >\n                Enviar\n              </button>\n            </div>\n          </div>\n\n          <div className=\"information-between-shops-container\">\n            <h2 className=\"information-between-shops-container__h2\">\n              Enviar petición entre tiendas\n            </h2>\n            <p className=\"information-between-shops-container__p\">\n              ¿Necesitas urgente un producto que solicita un cliente y está en\n              otra tienda? Entonces envía una petición entre tiendas. Solo\n              escoge la referencia del producto que necesitas, digita la\n              cantidad que requieres, escoge la tienda donde se encuentra el\n              producto, luego escoge la tienda de destino y presiona el botón\n              enviar. Así de fácil :)\n            </p>\n          </div>\n        </div>\n\n        <div\n          className=\"active-req-between-shops-section\"\n          id=\"active-req-between-shops-section\"\n        >\n          <h3 className=\"active-req-between-shops-section__h3\">\n            Peticiones activas entre tiendas\n          </h3>\n          <p className=\"active-req-between-shops-section__p\">\n            En este apartado se encuentran la peticiones de las tiendas que han\n            solicitado productos de otras tiendas.\n          </p>\n          {infoRequestsBetweenShops.length == 0 && (\n            <>\n              <div className=\"no-data-image-shops-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-shops-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-shops-paragraph\">\n                Aún no hay peticiones\n              </p>\n            </>\n          )}\n          {infoRequestsBetweenShops.length !== 0 && (\n            <div className=\"activeRequestBetweenShopsContainer\">\n              {infoRequestsBetweenShops.map((shop: any, index: any) => {\n                return (\n                  <div className=\"activeRequestBetweenShopsCard\">\n                    <h4 className=\"activeRequestBetweenShopsCard__h4\">\n                      Información de la petición\n                    </h4>\n                    <div className=\"activeRequestBetweenShopsCard__order\">\n                      # de petición: {shop.numero_peticion}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__reference\">\n                      Referencia: {shop.referencia}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__amount\">\n                      Cantidad: {shop.cantidad}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__shop\">\n                      Tienda Origen: {shop.tienda_origen_nombre}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__shop\">\n                      Tienda Destino: {shop.tienda_destino_nombre}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__date\">\n                      Fecha: {shop.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <button\n                      className=\"btn activeRequestBetweenShopsCard__deploy\"\n                      key={index}\n                      data-index={index}\n                      onClick={() => handler_required_stock(index)}\n                    >\n                      Desplegar requerimientos\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n        {state.imgCheckNumber === 1 && (\n          <img\n            className=\"modalWarehouseImg\"\n            src={completeImage}\n            alt=\"modalImg\"\n          />\n        )}\n        {state.imgCheckNumber === 2 && (\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\n        )}\n      </Modal>\n      {isOpenModalReq && (\n        <ModalShopsReq\n          isOpen={true}\n          closeModal={closeModal}\n          checkReqNumber={checkReqNumber}\n          indexReq={indexModal}\n          handleDecision={handler_final_decision}\n          stockMissingAmount={stockMissingAmount}\n          stockAvailableAmount={stockAvailableAmount}\n          requiredStock={requiredStock}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Shops;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nfunction LoginRedirect({\n  isAuth: isAuth,\n  component: Component,\n  enable: enable,\n  ...rest\n}: any) {\n  return (\n    <div>\n      <Route\n        {...rest}\n        render={(props: any) => {\n          if (!isAuth) {\n            return <Component />;\n          } else {\n            return (\n              <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            );\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LoginRedirect;\n","import React from 'react';\n\nconst Error = () => {\n\n  return (<>\n\n    <h1>Error</h1>\n\n  </>);\n};\n\n export default Error;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nfunction ProtectedRoute({isAuth: isAuth, component: Component, ...rest}: any) {\n  return (\n    <div>\n      <Route\n        {...rest}\n        render={(props: any) => {\n          if (isAuth) {\n            return <Component />;\n          } else {\n            return (\n              <Redirect\n                to={{pathname: '/login', state: {from: props.location}}}\n              />\n            );\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport DressMaking from '../pages/DressMaking';\nimport WareHouse from '../pages/WareHouse';\nimport Diseño from '../pages/Design';\nimport Register from '../pages/Register';\nimport Error from '../pages/Error';\nimport Logout from '../pages/Logout';\nimport WareHouseProducts from '../pages/WareHouseProducts';\nimport Shops from '../pages/Shops';\n\nimport ProtectedRoute from './app/ProtectedRoute';\n\nconst Routes = ({rol, isAuth, enableRoutes}: any) => {\n  if (enableRoutes) {\n    return (\n      <div>\n        <Switch>\n          {rol.idRol === 1 && (\n            <ProtectedRoute\n              exact\n              path=\"/register\"\n              component={Register}\n              isAuth={isAuth}\n            />\n          )}\n          <ProtectedRoute exact path=\"/\" component={Home} isAuth={isAuth} />\n          <Route exact path=\"/dressmaking\" component={DressMaking} />\n          <ProtectedRoute\n            path=\"/warehouse\"\n            component={WareHouse}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/diseño\"\n            component={Diseño}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/logout\"\n            component={Logout}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/warehouseproducts\"\n            component={WareHouseProducts}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/shops\"\n            component={Shops}\n            isAuth={isAuth}\n          />\n          <Route path=\"*\" component={Error} />\n        </Switch>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default Routes;\n","import React, {useState, useEffect, useContext} from 'react';\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\nimport Axios from 'axios';\nimport {myContext} from './components/Context';\n\n//PAGES:\nimport Login from './pages/Login';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport DressMaking from './pages/DressMaking';\nimport WareHouse from './pages/WareHouse';\nimport Diseño from './pages/Design';\nimport Register from './pages/Register';\nimport Error from './pages/Error';\nimport Logout from './pages/Logout';\nimport WareHouseProducts from './pages/WareHouseProducts';\nimport Shops from './pages/Shops';\n\n//PERSONAL MODULES:\nimport LoginRedirect from './components/login/LoginRedirect';\nimport Routes from './components/RoutesComponent';\nimport {baseURL} from './components/app/baseURL';\nimport ProtectedRoute from './components/app/ProtectedRoute';\n\nAxios.defaults.withCredentials = true;\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState<Boolean>(false);\n  const [enable, setEnable] = useState<Boolean>(false);\n  const [enableRoutes, setEnableRoutes] = useState<Boolean>(false);\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\n  const ctx = useContext(myContext);\n  let rol = {\n    idRol: 0,\n  };\n\n  if (ctx) {\n    rol = {\n      idRol: ctx.idRol,\n    };\n  }\n\n  useEffect(() => {\n    Axios.get(isAuthAPIURL)\n      .then((response) => {\n        const userInfo: any = response.data;\n        if (userInfo) {\n          setIsAuth(true);\n          setEnable(true);\n        } else {\n          setIsAuth(false);\n          setEnable(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [isAuth]);\n\n  useEffect(() => {}, [enableRoutes]);\n\n  const switchActive = () => {\n    setEnableRoutes(true);\n  };\n\n  if (enable) {\n    return (\n      <Router>\n        <div className=\"maxDiv-Control-App\">\n          <Navbar switchActive={switchActive} />\n          <div className=\"maxDiv-Control-App__Routes\">\n            <Routes rol={rol} isAuth={isAuth} enableRoutes={enableRoutes} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n  return (\n    <Router>\n      <switch>\n        <LoginRedirect\n          path=\"/login\"\n          component={Login}\n          isAuth={isAuth}\n          enable={enable}\n        />\n        <ProtectedRoute exact path=\"/\" component={Home} isAuth={isAuth} />\n        <ProtectedRoute exact path=\"/dressmaking\" component={DressMaking} />\n        <ProtectedRoute\n          path=\"/warehouse\"\n          component={WareHouse}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/diseño\"\n          component={Diseño}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/logout\"\n          component={Logout}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/warehouseproducts\"\n          component={WareHouseProducts}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute exact path=\"/shops\" component={Shops} isAuth={isAuth} />\n        <ProtectedRoute\n          exact\n          path=\"/register\"\n          component={Register}\n          isAuth={isAuth}\n        />\n      </switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Context from './components/Context';\n\nReactDOM.render(\n  <Context>\n    <App />\n  </Context>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Not Found.78ed35cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Loading.0d06e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Securelogin.647d91f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/shop.723592c7.png\";","module.exports = __webpack_public_path__ + \"static/media/notify.0ada35db.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.68e633cb.svg\";"],"sourceRoot":""}