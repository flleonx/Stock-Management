{"version":3,"sources":["assets/error.svg","assets/complete.svg","assets/no-data.svg","components/app/baseURL.tsx","components/Context.tsx","components/Modal.tsx","components/login/ReducerLogin.tsx","pages/Login.tsx","components/Navbar.tsx","components/home/tiendasData.tsx","pages/Home.tsx","components/dressmaking/SuccessfulModalDressMaking.tsx","components/dressmaking/ReducerDressMaking.tsx","components/dressmaking/ModalAreYouSureDressmaking.tsx","components/FilterDropdown.tsx","pages/DressMaking.tsx","components/warehouse/ModalInventoryWareHouse.tsx","components/warehouse/ModalinsufficientSupplies.tsx","components/warehouse/ModalDecisionSupplies.tsx","components/warehouse/ReducerWarehouse.tsx","pages/WareHouse.tsx","components/design/ReducerDesign.tsx","components/design/ModalInformationDesign.tsx","components/design/ModalDesignInventory.tsx","components/design/ModalDesign.tsx","components/design/ModalDesignAddSupplies.tsx","pages/Design.tsx","components/register/ReducerRegister.tsx","pages/Register.tsx","pages/Logout.tsx","components/warehouseProducts/ModalWarehouseProductsReq.tsx","pages/WareHouseProducts.tsx","components/shops/InfoShopsInventory.tsx","components/shops/ModalShopsReq.tsx","pages/Shops.tsx","components/login/LoginRedirect.tsx","pages/Error.tsx","components/app/ProtectedRoute.tsx","components/RoutesComponent.tsx","App.tsx","index.tsx","assets/Not Found.svg","assets/Loading.svg","assets/Securelogin.svg","assets/shop.png","assets/notify.svg","assets/register.svg"],"names":["module","exports","__webpack_require__","p","baseURL","myContext","createContext","Context","props","_useState","useState","_useState2","Object","slicedToArray","user","setUser","isAuthAPIURL","useEffect","Axios","get","then","response","data","react_default","a","createElement","Provider","value","children","modalID","document","getElementById","Modal","isOpen","ReactDOM","createPortal","className","onClick","closeModal","reducer","state","action","type","objectSpread","isModalOpen","modalContent","Error","defaultState","Login","username","setUsername","_useState3","_useState4","password","setPassword","_useReducer","useReducer","_useReducer2","dispatch","loginAPIURL","name","placeholder","id","autoComplete","onChange","e","target","preventDefault","post","usernameInput","passwordInput","window","location","href","components_Modal","src","errorImage","alt","loginIMG","NavbarContainer","Navbar_Brand","Navbar_NavbarOption","classIcon","title","url","Navbar_UserSection","Brand","NavbarOption","react_router_dom","exact","to","activeClassName","UserSection","withRouter","_ref","switchActive","enable","setEnable","userInfo","Navbar_NavbarContainer","Fragment","tiendasData","latitude","longitude","isShopClicked","setIsShopClicked","infoShopClicked","setInfoShopClicked","_useState5","_useState6","startDate","setStartDate","_useState7","_useState8","endDate","setEndDate","_useState9","_useState10","dataDatesFilter","setDataDatesFilter","_useState11","_useState12","setIsModalOpen","_useState13","_useState14","setModalContent","_useState15","_useState16","percentageSales","setPercentageSales","dashboardPieUrl","dashboardDateFilterURL","mes","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","map","tienda","Marker","key","position","icon","L","iconUrl","iconShopImg","iconSize","eventHandlers","click","startDateRef","endDateRef","react_select_esm","options","monthsData","optionSelected","monthValue","index_esm","width","height","chartType","loader","is3D","rootProps","data-testid","loadingImg","react_datepicker_min_default","selected","date","selectsStart","dateFormat","placeholderText","selectsEnd","minDate","fecha_inicial","fecha_final","idTienda","length","chart","notifyImg","NotSuccessfulRequest","codigo","descripcion","metros","remainingAmount","nombre_imagen","SuccessfulModalDressMaking","checkNumber","setTimeout","SuccessfulModalDressMaking_NotSuccessfulRequest","warningMissingSupplies","payload","isInsufficientModalOpen","imgCheckNumber","idModalAreYouSureDressmaking","ModalAreYouSureDressmaking","handleClose","subAmountFunction","Dropdown","label","prompt","open","setOpen","inputOpen","query","setQuery","ref","useRef","addEventListener","close","removeEventListener","current","prev","concat","filter","option","toString","toLowerCase","indexOf","DressMaking","references","setReferences","amount","setAmount","approvedRequests","setApprovedRequests","requestsHistory","setRequestsHistory","refContainer","isOpenARYModal","setIsOpenARYModal","infoProcess","setInfoProcess","_useState17","_useState18","valueReferenceSelect","setValueReferenceSelect","_useState19","_useState20","toggleState","setToggleState","dbReferencesURL","dbWareHouseRequest","dbApprovedRequests","dbUpdateDressMakingProcess","dbRequestHistoryDressmaking","handleNavbarClick","getAttribute","querySelector","offsetTop","scrollTo","toggleTab","index","components_FilterDropdown","val","ReferenceSelected","isReferenceExist","correctAmount","parseFloat","referencia","enableInput","Number","isInteger","actualAmount","referenceSelection","noDataImage","item","cantidad","timestamp","replace","slice","HTMLElement","valueInput","reference","verificationARYModal","request","numero_de_orden","decision","dressmaking_SuccessfulModalDressMaking","completeImage","dressmaking_ModalAreYouSureDressmaking","diff","ModalInvetoryBodega","searchTerm","setSearchTerm","iterator","enableEmpty","showEmptySearch","handlerSearch","includes","notFoundImage","insufficientSuppliesID","ModalinsufficientSupplies","arrayNoSupplies","handlerReject","infoRequest","idModalDecisionSupplies","ModalDecisionSupplies","informationSuppliesURL","informationSupplies","setInformationSupplies","color","handlerAccept","modalFormContent","isFormModalOpen","modalUpdateContent","isModalUpdateOpen","isOpenNoSupplies","isModalSuppliesOpen","code","setCode","setColor","description","setDescription","img","setImg","queryData","setQueryData","updateAmount","setUpdateAmount","dressMakingReq","setDressMakingReq","_useState21","_useState22","suppliesData","setSuppliesData","_useState23","_useState24","_useState25","_useState26","setInfoRequest","_useState27","_useState28","isOpenDecision","setIsOpenDecision","_useState29","_useState30","valueCode","setValueCode","_useState31","_useState32","valueSupplieDropdown","setValueSupplieDropdown","_useState33","_useState34","_useState35","_useState36","switchUseEffect","setSwitchUseEffect","saveClothAPIURL","invetoryBodegaAPIURL","invetoryWareHouseAPIURL","updateInventoryWareHouseURL","getDressMakingRequest","dbSuppliesURL","dbSaveDecision","console","log","catch","error","handlerRefuse","idDecision","filterResult","tpye","supplieSelected","newCloth","parseInt","codigoInput","colorInput","amountInput","descripcionInput","imgInput","warehouse_ModalInventoryWareHouse","codeSelected","isCodeExist","inputUpdateAmount","enableAmount","payloadUpdate","req","handlerDecision","warehouse_ModalinsufficientSupplies","warehouse_ModalDecisionSupplies","sampleInventory","isInventoryModalOpen","modalInventoryContent","informationModalID","ModalInformationDesign","referenceArray","consumptionAmount","ModalDesignInventory","referenceNumber","setReferenceNumber","setReferenceArray","getreferenceconsumptionURL","talla","valor_unidad","handlerInfoModal","design_ModalInformationDesign","ModalDesign","addSuppliesID","ModalDesignAddSupplies","valueSelect","setValueSelect","dBWareHouseSupplies","setdBWareHouseSupplies","addedInformation","setAddedInformation","dbWareHouseCodesURL","inputAmount","setInputAmount","valueSelectComp","inputSelectIterator","inputSelectAddedInfo","style","amountHTML","supplyCode","enableSelector","informationObject","supplyAmount","toConsumableArray","design_ModalDesign","newAddedInformation","removeItem","suppliesFromDesign","dbSaveNewReference","productionAPIURL","switchReRender","setSwitchReRender","addReference","setAddReference","addDescription","setAddDescription","addColor","setAddColor","addImageName","setAddImageName","addValuePerUnit","setAddValuePerUnit","valueSizeSelect","setValueSizeSelect","sizesArray","addSize","addedInformationFromModal","setAddedInformationFromModal","modalAddSupplies","setModalAddSupplies","setEmptyValues","addReferenceOption","addDescriptionOption","addColorOption","addImageNameOption","requestPayload","valuePerUnit","design_ModalDesignInventory","design_ModalDesignAddSupplies","msg","Register","passwordForm","setPasswordForm","validatePasswordForm","setValidatePasswordForm","idRol","setIdRol","postRegisterURL","validatePasswordInput","idRolInput","newUser","validationUsername","registerImg","logoutAPIURL","err","IDWarehouseProductsReq","ModalWarehouseProductsReq","checkReqNumber","infoReq","info","numero_lote","handlerPartialDelivery","errorIMG","WareHouseProducts","wareHouseProducts","setWareHouseProducts","shopRequestInfo","setShopRequestInfo","actualShopRequests","setActualShopRequest","isOpenModalReq","setIsOpenModalReq","setCheckReqNumber","indexModal","setIndexModal","dbWareHouseProducts","dbShopsRequestProducts","dbActualShopsRequests","dbPartialDelivery","shop","nombre_tienda","direccion","data-index","faltante","handlerShowInfo","warehouseProducts_ModalWarehouseProductsReq","neededStock","InfoShopsInventory","handleSearch","handlerReceived","receivedFunction","arrayInformation","modalShopsReqId","ModalShopsReq","requiredStock","requiredStockOrdered","setRequiredStockOrdered","handleDecision","decisionNumber","cantidadTotal","stockMissingAmount","stockAvailableAmount","Shops","shops","setShops","shopsOrigin","setShopsOrigin","shopsDestination","setShopsDestination","valueShopSelect","setValueShopSelect","infoDeliveryState","setInfoDeliveryState","infoActualInventory","setInfoActualInventory","setRequiredStock","infoRequestsBetweenShops","setInfoRequestsBetweenShops","isShopOriginSelected","setIsShopOriginSelected","_useState37","_useState38","_useState39","_useState40","setStockMissingAmount","_useState41","_useState42","setStockAvailableAmount","_useState43","_useState44","auxiliar","setAuxiliar","refInputBetweenShops","refInputReqToWarehouseProducts","_useState45","_useState46","_useState47","_useState48","value_reference_request","set_value_reference_request","_useState49","_useState50","amount_request","set_amount_request","_useState51","_useState52","value_origin_shop","set_value_origin_shop","_useState53","_useState54","value_destination_shop","set_value_destination_shop","_useState55","_useState56","dbShopsInfoURL","dbProductsRequestURL","dbDeliveryState","dbActualInventory","dbActualRequestsBetweenShops","dbUpdateReceivedState","dbRequestBetweenShops","dbDecisionBetweenShops","dbSaveNewShopRequest","check_existing_value","asyncToGenerator","regenerator_default","mark","_callee","check_case","wrap","_context","next","sent","abrupt","t0","stop","_x","_x2","apply","this","arguments","check_type_case","case_parameter","case_attribute","result","productsRequest","_ref2","_callee2","valueReferenceSelected","valueShopSelected","isShopExist","enableInput2","_context2","idShop","query_post","_ref3","_callee3","_context3","_x3","_x4","request_betweenshops_handler","_ref4","_callee4","valueOriginShopSelected","valueDestinationShopSelected","isOShopExist","isDShopExist","enableInput3","_context4","tienda_origen","tienda_destino","handler_required_stock","_ref5","_callee5","actualTarget","required_stock_size","amount_number","_context5","numero_peticion","undefined","_x5","handler_final_decision","_ref6","_callee6","id_decision","_context6","numeros_de_entrada","envio_real","_x6","shops_InfoShopsInventory","nameShopSelected","JSON","stringify","shopsNamesFiltered","handleDropdownChange","tienda_origen_nombre","tienda_destino_nombre","shops_ModalShopsReq","indexReq","LoginRedirect","isAuth","Component","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","ProtectedRoute","Routes","rol","enableRoutes","app_ProtectedRoute","path","Home","WareHouse","Diseño","Logout","defaults","withCredentials","App","setIsAuth","setEnableRoutes","ctx","useContext","components_Navbar","RoutesComponent","login_LoginRedirect","components_Context","src_App"],"mappings":"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","file":"static/js/main.fb07ccca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.2fc8b26b.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete.c8683c24.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-data.c2258281.svg\";","// DEV\n//  export const baseURL: string = 'http://localhost:52000/';\n\n// PRODUCTION\nexport const baseURL: string = 'http://gestion-inventarios.ddns.net:52000/';\n","import React, {\n  createContext,\n  Props,\n  PropsWithChildren,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport Axios from 'axios';\n\nimport {baseURL} from './app/baseURL';\n\nexport const myContext = createContext<any>({});\nfunction Context(props: PropsWithChildren<any>) {\n  const [user, setUser] = useState<any>();\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\n\n  useEffect(() => {\n    Axios.get(isAuthAPIURL)\n      .then((response) => {\n        setUser(response.data);\n      })\n  }, []);\n\n  return <myContext.Provider value={user}>{props.children}</myContext.Provider>;\n}\n\nexport default Context;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/Modal.css';\n\nconst modalID: any = document.getElementById('modal');\n\nconst Modal = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n  if (!props.isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <div className=\"ModalComponent\">\n      <div className=\"ModalComponent__container\">\n        <button onClick={handleClose} className=\"ModalComponent__close-button\">\n          X\n        </button>\n        {props.children}\n      </div>\n    </div>,\n    modalID\n  );\n};\n\nexport default Modal;\n","interface IState {\n  isModalOpen: boolean;\n  modalContent: string;\n}\n\ninterface IActions {\n  type: string;\n}\n\nexport const reducer = (state: IState, action: IActions) => {\n  if (action.type === 'LOGIN_INFORMATION_INCOMPLETE') {\n    return {\n      ...state,\n      isModalOpen: true,\n      modalContent: 'Error: No ha digitado todos los campos',\n    };\n  }\n\n  if (action.type === 'ERROR_AUTH') {\n    return {\n      ...state,\n      isModalOpen: true,\n      modalContent: 'Error: El Usuario y/o la contraseña son incorrectos',\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {...state, isModalOpen: false};\n  }\n  throw new Error('No matching action Type');\n};\n","import React, {useState, useReducer} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Axios from 'axios';\n\n//CSS:\nimport './style/Login.css';\n\n//My_modules:\nimport {baseURL} from '../components/app/baseURL';\nimport loginIMG from '../assets/Securelogin.svg';\nimport Modal from '../components/Modal';\nimport errorImage from '../assets/error.svg';\n\n//Assets:\n\n//Reducer\nimport {reducer} from '../components/login/ReducerLogin';\n\ninterface IDefaultState {\n  isModalOpen: boolean;\n  modalContent: string;\n}\n\nconst defaultState: IDefaultState = {\n  isModalOpen: false,\n  modalContent: '',\n};\n\nconst Login = () => {\n  const [username, setUsername] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const loginAPIURL: string = baseURL + 'api/login';\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (username && password) {\n      Axios.post(loginAPIURL, {\n        username,\n        password,\n      })\n        .then((response) => {\n          const isAuth: string = response.data;\n          if (isAuth === 'ERROR') {\n            dispatch({type: 'ERROR_AUTH'});\n            const usernameInput = document.getElementById(\n              'username'\n            ) as HTMLInputElement;\n            const passwordInput = document.getElementById(\n              'password'\n            ) as HTMLInputElement;\n            usernameInput.value = '';\n            passwordInput.value = '';\n          } else {\n            window.location.href = '/';\n          }\n        })\n    } else {\n      dispatch({type: 'LOGIN_INFORMATION_INCOMPLETE'});\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({type: 'CLOSE_MODAL'});\n  };\n\n  return (\n    <div className=\"general-login-container\">\n      <form className=\"login-form\">\n        <h2>Login</h2>\n        <div className=\"border-div\"></div>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Usuario\"\n          id=\"username\"\n          autoComplete=\"off\"\n          onChange={(e: any) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Contraseña\"\n          autoComplete=\"off\"\n          id=\"password\"\n          onChange={(e: any) => setPassword(e.target.value)}\n        />\n        <button onClick={handleSubmit} className=\"btn\">\n          Iniciar sesión\n        </button>\n      </form>\n      {state.isModalOpen && (\n        <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n          <h1 className=\"modalLoginh1\">{state.modalContent}</h1>\n          <img className=\"modalLoginImg\" src={errorImage} alt=\"modalImg\" />\n        </Modal>\n      )}\n      <div className=\"img-login-container\">\n        <img src={loginIMG} alt=\"login\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useState, useEffect, useContext} from 'react';\nimport './style/Navbar.css';\nimport {withRouter, Link, NavLink} from 'react-router-dom';\nimport Axios from 'axios';\nimport App from '../App';\nimport {baseURL} from './app/baseURL';\n\nfunction Navbar({switchActive}: any) {\n  const [enable, setEnable] = useState<boolean>(false);\n  const [user, setUser] = useState<string>('');\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\n\n  useEffect(() => {\n    Axios.get(isAuthAPIURL)\n      .then((response) => {\n        const userInfo: any = response.data;\n        setUser(userInfo.user);\n        setEnable(true);\n      })\n  }, [enable]);\n\n  if (enable) {\n    switchActive();\n    return (\n      <div className=\"navbar-user-container\">\n        <NavbarContainer user={user} />\n      </div>\n    );\n  }\n\n  return <></>;\n}\n\nconst NavbarContainer = (props: any) => {\n  return (\n    <div className=\"navbar-container\">\n      <Brand />\n      <NavbarOption classIcon=\"gg-chart\" title=\"Dashboard\" url=\"/\" />\n      <NavbarOption classIcon=\"gg-pen\" title=\"Taller Diseño\" url=\"/diseño\" />\n      <NavbarOption classIcon=\"gg-box\" title=\"Bodega Insumo\" url=\"/warehouse\" />\n      <NavbarOption\n        classIcon=\"gg-shape-half-circle\"\n        title=\"Confección\"\n        url=\"/dressmaking\"\n      />\n      <NavbarOption\n        classIcon=\"gg-browse\"\n        title=\"Bodega Producto\"\n        url=\"/warehouseproducts\"\n      />\n      <NavbarOption classIcon=\"gg-home-alt\" title=\"Tiendas\" url=\"/shops\" />\n      <NavbarOption classIcon=\"gg-add-r\" title=\"Registrar\" url=\"/register\" />\n      <NavbarOption\n        classIcon=\"gg-log-out\"\n        title=\"Cerrar Sesion\"\n        url=\"/logout\"\n      />\n      <UserSection user={props.user} />\n    </div>\n  );\n};\n\nconst Brand = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <div className=\"navbar-brand__icon\">\n        <i className=\"gg-read\"></i>\n      </div>\n      <h5 className=\"navbar-brand__h5\">Rutnev</h5>\n    </div>\n  );\n};\n\ninterface INavbarOption {\n  classIcon: string;\n  title: string;\n  url: string;\n}\n\nconst NavbarOption = (props: INavbarOption) => {\n  const {classIcon, title, url} = props;\n  return (\n    <NavLink\n      exact\n      to={url}\n      className=\"click_navbar-option\"\n      activeClassName=\"clicked_navbar-option\"\n    >\n      <div className=\"navbar-option\">\n        <div className=\"navbar-option__icon\">\n          <i className={classIcon}></i>\n        </div>\n        <h5 className=\"navbar-option__h5\">{title}</h5>\n      </div>\n    </NavLink>\n  );\n};\n\nconst UserSection = (props: any) => {\n  return(\n    <div className=\"user-section\">\n      <div className=\"user-section__icon\">\n          <i className=\"gg-user\"></i>\n        </div>\n      <h4>{props.user}</h4>\n    </div>\n  );\n}\n\nexport default withRouter(Navbar);\n","interface ITiendas {\n  id: number;\n  name: string;\n  latitude: number;\n  longitude: number;\n}\n\nexport const tiendasData: ITiendas[] = [\n  {\n    id: 1,\n    name: 'Tienda Sur',\n    latitude: 11.001643604812687,\n    longitude: -74.81665954890138,\n  },\n  {\n    id: 0,\n    name: 'Tienda Norte',\n    latitude: 11.009774250972912,\n    longitude: -74.81215193217375,\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { MapContainer, Marker, TileLayer } from \"react-leaflet\";\nimport { Chart } from \"react-google-charts\";\nimport L from \"leaflet\";\nimport Select from \"react-select\";\nimport Axios from \"axios\";\n\nimport { baseURL } from \"../components/app/baseURL\";\nimport iconShopImg from \"../assets/shop.png\";\nimport loadingImg from \"../assets/Loading.svg\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport monthsData from \"../components/home/months.json\";\nimport Modal from \"../components/Modal\";\nimport notifyImg from \"../assets/notify.svg\";\n\nimport \"./style/Home.css\";\nimport { tiendasData } from \"../components/home/tiendasData\";\n\nconst Home = () => {\n  const [isShopClicked, setIsShopClicked] = useState<boolean>(false);\n  const [infoShopClicked, setInfoShopClicked] = useState({ id: \"\", name: \"\" });\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [dataDatesFilter, setDataDatesFilter] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [modalContent, setModalContent] = useState<string>(\"\");\n  const [percentageSales, setPercentageSales] = useState([[\"Shop\", \"Ventas\"]]);\n  const dashboardPieUrl: string = baseURL + \"api/dashboard_pie\";\n  const dashboardDateFilterURL: string = baseURL + \"api/dashboard_date_filter\";\n\n  useEffect(() => {\n    Axios.post(dashboardPieUrl, {\n      mes: \"05\",\n    }).then((response: any) => {\n      setPercentageSales(response.data);\n    });\n  }, []);\n\n  function getIcon() {\n    return L.icon({\n      iconUrl: iconShopImg,\n      iconSize: [30, 30],\n    });\n  }\n\n  const handleChange = (optionSelected: any) => {\n    const monthValue = optionSelected.value;\n    Axios.post(dashboardPieUrl, {\n      mes: monthValue,\n    }).then((response: any) => {\n      setPercentageSales(response.data);\n    });\n  };\n\n  const handleFilter = () => {\n    const startDateRef = document.getElementById(\n      \"start-date-picker\"\n    ) as HTMLInputElement;\n    const endDateRef = document.getElementById(\n      \"end-date-picker\"\n    ) as HTMLInputElement;\n\n    if (startDateRef.value !== \"\" || endDateRef.value !== \"\") {\n      Axios.post(dashboardDateFilterURL, {\n        fecha_inicial: startDateRef.value,\n        fecha_final: endDateRef.value,\n        idTienda: infoShopClicked.id,\n      }).then((response: any) => {\n        const dataDates = response.data;\n        if (dataDates.length > 1) {\n          setDataDatesFilter(response.data);\n        } else {\n          setDataDatesFilter([]);\n          setModalContent(\"No hay ventas en ese rango de fecha\");\n          setIsModalOpen(true);\n        }\n      });\n    } else {\n      setModalContent(\"Por favor, digite las fechas bien\");\n      setIsModalOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  };\n\n  return (\n    <div className=\"general-container-home\">\n      <div className=\"navbar-home\">\n        <h2 className=\"navbar-home__h2\">Dashboard</h2>\n      </div>\n      <div className=\"map-section\">\n        <div className=\"map-home-container\">\n          <h3>Mapa</h3>\n          <p>\n            En este apartado puedes puedes ver las tiendas en el mapa. Si das\n            click en una de las tiendas, en la esquina inferior derecha\n            aparecerá información de las ventas de esta.\n          </p>\n          <MapContainer\n            center={[11.004462, -74.814401]}\n            zoom={15}\n            scrollWheelZoom={true}\n          >\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {tiendasData.map((tienda: any) => (\n              <Marker\n                key={tienda.id}\n                position={[tienda.latitude, tienda.longitude]}\n                icon={getIcon()}\n                eventHandlers={{\n                  click: () => {\n                    setInfoShopClicked(tienda);\n                    setDataDatesFilter([]);\n                    setIsShopClicked(true);\n                    const startDateRef = document.getElementById(\n                      \"start-date-picker\"\n                    ) as HTMLInputElement;\n                    const endDateRef = document.getElementById(\n                      \"end-date-picker\"\n                    ) as HTMLInputElement;\n                    startDateRef.value = \"\";\n                    endDateRef.value = \"\";\n                  },\n                }}\n              />\n            ))}\n          </MapContainer>\n        </div>\n        <div className=\"stats-home-container\">\n          <h3>Estadísticas</h3>\n          <p>\n            En este apartado puedes ver el porcentaje de ventas correspondiente\n            a cada tienda. Además, puedes filtrar por mes.\n          </p>\n          <div className=\"month-filter-pie-chart-container\">\n            <div className=\"month-select-container\">\n              <Select\n                options={monthsData}\n                placeholder=\"Filtrar por mes\"\n                className=\"month-select-container__select\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"pie-chart-container\">\n              <Chart\n                width={\"100%\"}\n                height={\"100%\"}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={percentageSales}\n                options={{\n                  title: \"Total ventas\",\n                  is3D: true,\n                }}\n                rootProps={{ \"data-testid\": \"1\" }}\n              />\n            </div>\n          </div>\n          <div className=\"specific-stats-for-shops-container\">\n            {!isShopClicked && (\n              <>\n                <h3>Estadisticas especificas de la tienda</h3>\n                <p>\n                  Si haces click en uno de los iconos de tiendas que se\n                  encuentran en el mapa, se desplegará aquí un diagrama de\n                  barras sobre las ventas de la tienda en específico.\n                </p>\n                <div className=\"pie-chart-img-container\">\n                  <img src={loadingImg} alt=\"loading\" />\n                </div>\n              </>\n            )}\n            {isShopClicked && (\n              <>\n                <h3>Ventas de la {infoShopClicked.name}</h3>\n                <p>\n                  En este apartado se muestra las ventas de la{\" \"}\n                  {infoShopClicked.name}. Para ver el gráfico de barras, utiliza\n                  el filtro.\n                </p>\n                <div className=\"filter-date-container\">\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date: any) => {\n                      setStartDate(date);\n                    }}\n                    selectsStart\n                    startDate={startDate}\n                    endDate={endDate}\n                    dateFormat=\"yyyy-MM-dd\"\n                    placeholderText=\"Selecciona la fecha inicial\"\n                    className=\"start-date-picker\"\n                    id=\"start-date-picker\"\n                  />\n                  <DatePicker\n                    selected={endDate}\n                    onChange={(date: any) => setEndDate(date)}\n                    selectsEnd\n                    startDate={startDate}\n                    endDate={endDate}\n                    minDate={startDate}\n                    dateFormat=\"yyyy-MM-dd\"\n                    placeholderText=\"Selecciona la fecha final\"\n                    className=\"end-date-picker\"\n                    id=\"end-date-picker\"\n                  />\n                  <button\n                    className=\"btn\"\n                    id=\"filter-button\"\n                    onClick={handleFilter}\n                  >\n                    Filtrar por fecha\n                  </button>\n                </div>\n                {dataDatesFilter.length === 0 && (\n                  <div className=\"bar-chart-img-container\">\n                    <img src={loadingImg} alt=\"loading\" />\n                  </div>\n                )}\n                {dataDatesFilter.length !== 0 && (\n                  <div className=\"bar-chart-container\">\n                    <Chart\n                      width={\"500px\"}\n                      height={\"300px\"}\n                      chartType=\"Bar\"\n                      loader={<div>Loading Chart</div>}\n                      data={dataDatesFilter}\n                      options={{\n                        chart: {\n                          title:\n                            \"Gráfico de barras de las ventas de la tienda \",\n                        },\n                      }}\n                      rootProps={{ \"data-testid\": \"2\" }}\n                    />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalHome\">{modalContent}</h1>\n        <img className=\"modalHomeImg\" src={notifyImg} alt=\"modalImg\" />\n      </Modal>\n    </div>\n  );\n};\n\nexport default withRouter(Home);\n","import React, {useEffect} from 'react';\nimport './style/SuccessfulModalDressMaking.css';\n\n// INTERFACES\ninterface IWareHouseElements {\n  codigo: number;\n  color: string;\n  metros?: number;\n  cantidad?: number;\n  descripcion: string;\n  nombre_imagen: string;\n  timestamp: string;\n  remainingAmount: string;\n}\n\nconst SuccessfulModalDressMaking = ({\n  modalContent,\n  checkNumber,\n  closeModal,\n}: any) => {\n  useEffect(() => {\n    setTimeout(() => {\n      closeModal();\n    }, 40000);\n  });\n\n  return <NotSuccessfulRequest modalContent={modalContent} />;\n};\n\nconst NotSuccessfulRequest = (modalContent: any) => {\n  const showAmount = (props: IWareHouseElements): number | undefined => {\n    if (props.metros == null) {\n      return props.cantidad;\n    }\n    return props.metros;\n  };\n\n  return (\n    <>\n      <div className=\"container_table\">\n        <div className=\"table_title\">Información</div>\n        <div className=\"table_header\">Insumo insuficiente</div>\n        <div className=\"table_header\">Imagen</div>\n        {modalContent.modalContent.map((props: IWareHouseElements) => {\n          return (\n            <div className=\"items_container\" key={props.codigo}>\n              <div className=\"sub_items_container\">\n                <div className=\"sub_sub_items_container\">\n                  <div className=\"table_item\">Item: {props.codigo}</div>\n                  <div className=\"table_item\">\n                    Descripción: {props.descripcion}\n                  </div>\n                  <div className=\"table_item\">Existencias: {props.metros}</div>\n                  <div className=\"table_item\">\n                    Remanente: {props.remainingAmount}\n                  </div>\n                </div>\n                <div className=\"table_item\">\n                  <img className=\"table_img\" src={props.nombre_imagen} />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default SuccessfulModalDressMaking;\n","export const reducer = (state: any, action: any) => {\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\n    const warningMissingSupplies = action.payload;\n    return {\n      ...state,\n      modalContent: warningMissingSupplies,\n      isInsufficientModalOpen: true,\n      checkNumber: 0,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'SUCCESSFUL_REQUEST') {\n    return {\n      ...state,\n      modalContent: ['Petición realizada con exito'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 1,\n      imgCheckNumber: 1,\n    };\n  }\n  if (action.type === 'WRONG_INPUT') {\n    return {\n      ...state,\n      modalContent: ['Por favor: Ingrese correctamente los campos.'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'WRONG_INPUT_PROCESS') {\n    return {\n      ...state,\n      modalContent: ['Por favor: Ingrese correctamente los campos.'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'DIFF_NEGATIVE') {\n    return {\n      ...state,\n      modalContent: [\n        'Error: Digite una cantidad menor o igual a la cantidad en proceso.',\n      ],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'REFERENCE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      modalContent: ['Error: Esta referencia no existe.'],\n      isModalOpen: true,\n      isInsufficientModalOpen: false,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isModalOpen: false,\n      isInsufficientModalOpen: false,\n      imgCheckNumber: 0,\n    };\n  }\n\n  return {...state, isModalOpen: false, imgCheckNumber: 0};\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/ModalAreYouSureDressmaking.css';\n\nconst idModalAreYouSureDressmaking: any = document.getElementById(\n  'ModalAreYouSureDressmaking'\n);\n\nconst ModalAreYouSureDressmaking = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const handleAccept = () => {\n    props.subAmountFunction();\n    props.closeModal();\n  };\n\n  if (!props.isOpen) return null;\n  return ReactDOM.createPortal(\n    <div className=\"ModalAYSDressmakingComponent\">\n      <div className=\"ModalAYSDressmakingComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalAYSDressmakingComponent__close-button\"\n        >\n          X\n        </button>\n        <h3 className=\"ModalAYSDressmakingComponent__h3\">¿Estás seguro?</h3>\n        <p className=\"ModalAYSDressmakingComponent__p\">\n          Ten cuidado. Solo presiona el botón de aceptar si estás completamente\n          seguro porque no hay vuelta atrás.\n        </p>\n        <div className=\"ARYDressmakingButtonsContainer\">\n          <button\n            className=\"btn ARYDressmakingButtonsContainer__accept\"\n            onClick={handleAccept}\n          >\n            Aceptar\n          </button>\n          <button\n            className=\"btn ARYDressmakingButtonsContainer__cancel\"\n            onClick={handleClose}\n          >\n            Cancelar\n          </button>\n        </div>\n      </div>\n    </div>,\n    idModalAreYouSureDressmaking\n  );\n};\n\nexport default ModalAreYouSureDressmaking;\n","import React, {useState, useRef, useEffect} from 'react';\n\nimport './style/FilterDropdown.css';\n\nconst Dropdown = ({options, id, label, prompt, value, onChange}: any) => {\n  const [open, setOpen] = useState(false);\n  const [inputOpen, setInputOpen] = useState(false);\n  const [query, setQuery] = useState<string>('');\n  const ref = useRef(null);\n\n  useEffect(() => {\n    document.addEventListener('click', close);\n    return () => document.removeEventListener('click', close);\n  }, []);\n\n  const close = (e: any) => {\n    setOpen(e && e.target === ref.current);\n  };\n\n  const filter = (options: any) => {\n    return options.filter(\n      (option: any) =>\n        option[label].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n    );\n  };\n\n  const displayValue = () => {\n    if (query.length > 0) return query;\n    if (value) return value[label];\n    return '';\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <div\n        className=\"control\"\n        onClick={() => {\n          setOpen((prev) => !prev);\n          if (inputOpen) setOpen(false);\n        }}\n      >\n        <div className=\"selected-value\">\n          <input\n            type=\"number\"\n            id=\"valueInput\"\n            ref={ref}\n            placeholder={value ? value[label] : prompt}\n            value={displayValue()}\n            onChange={(e: any) => {\n              setQuery(e.target.value);\n              onChange(e.target.value);\n            }}\n            onClick={() => setOpen((prev) => !prev)}\n          />\n        </div>\n        <div className={`arrow ${open ? 'open' : null}`} />\n      </div>\n      <div className={`options ${open ? 'open' : null}`}>\n        {filter(options).map((option: any) => {\n          return (\n            <div\n              key={option[id]}\n              className={`option ${value === option ? 'selected' : null}`}\n              onClick={() => {\n                setQuery('');\n                onChange(option);\n                setOpen(false);\n              }}\n            >\n              {option[label]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\n// REDUCER\nimport { reducer } from \"../components/dressmaking/ReducerDressMaking\";\nimport \"./style/DressMaking.css\";\nimport \"../components/dressmaking/style/buttonStyle.css\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport { updateSourceFile } from \"typescript\";\nimport ModalAreYouSureDressmaking from \"../components/dressmaking/ModalAreYouSureDressmaking\";\nimport FilterDropdown from \"../components/FilterDropdown\";\n\n// INTERFACES\ninterface IReference {\n  referencia: number;\n  id_talla: number;\n  descripcion: string;\n  color: string;\n  nombre_imagen: string;\n  codigoycantidad: string;\n}\n\nconst defaultState: any = {\n  modalContent: [],\n  isModalOpen: false,\n  isInsufficientModalOpen: false,\n  checkNumber: 0,\n  imgCheckNumber: 0,\n};\n\nconst DressMaking: React.FC = () => {\n  const [references, setReferences] = useState<IReference[]>([]);\n  const [amount, setAmount] = useState<string>(\"\");\n  const [selectedReference, setSelectedReference] = useState<string>(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [approvedRequests, setApprovedRequests] = useState<any>([]);\n  const [requestsHistory, setRequestsHistory] = useState<any>([]);\n  const [numberInput, setNumberInput] = useState<string>(\"\");\n  const refContainer: any = useRef(null);\n  const [isOpenARYModal, setIsOpenARYModal] = useState<boolean>(false);\n  const [infoProcess, setInfoProcess] = useState<any>({});\n  const [valueReferenceSelect, setValueReferenceSelect] = useState<any>(null);\n  const [toggleState, setToggleState] = useState(1);\n  const dbReferencesURL: string = baseURL + \"api/references\";\n  const dbSuppliesURL: string = baseURL + \"api/suppliesrequest\";\n  const dbWareHouseRequest: string = baseURL + \"api/requesttowarehouse\";\n  const dbApprovedRequests: string = baseURL + \"api/getapprovedrequests\";\n  const dbUpdateDressMakingProcess: string =\n    baseURL + \"api/updatedressmakingprocess\";\n  const dbRequestHistoryDressmaking: string =\n    baseURL + \"api/getRequestHistoryDressmaking\";\n\n  // HANDLE AMOUNT INPUT\n  const handleInput = (input: any) => {\n    setAmount(input);\n    if (input.includes(\".\") || input.includes(\"-\") || input.includes(\"!\")) {\n      const amountInputHTML: any = document.getElementById(\"amountInput\");\n      amountInputHTML.value = \"\";\n      setAmount(\"\");\n    }\n  };\n\n  // GET REFERENCES\n  useEffect(() => {\n    Axios.get(dbReferencesURL).then((response: AxiosResponse) => {\n      setReferences(response.data);\n    });\n\n    Axios.get(dbApprovedRequests).then((response: AxiosResponse) => {\n      setApprovedRequests(response.data);\n    });\n\n    Axios.get(dbRequestHistoryDressmaking).then((response: AxiosResponse) => {\n      setRequestsHistory(response.data);\n    });\n  }, []);\n\n  const suppliesRequest = () => {\n    let ReferenceSelected = \"\";\n    let isReferenceExist = 0;\n    const correctAmount = parseFloat(amount);\n\n    if (valueReferenceSelect === null) {\n      ReferenceSelected = \"\";\n    } else if (typeof valueReferenceSelect === \"object\") {\n      ReferenceSelected = valueReferenceSelect.referencia.toString();\n    } else if (typeof valueReferenceSelect === \"string\") {\n      ReferenceSelected = valueReferenceSelect;\n    }\n\n    references.map((val: any) => {\n      if (val.referencia === ReferenceSelected) {\n        isReferenceExist += 1;\n        return isReferenceExist;\n      } else {\n        return isReferenceExist;\n      }\n    });\n\n    let enableInput = ReferenceSelected !== \"\";\n    if (Number.isInteger(correctAmount) && correctAmount > 0 && enableInput) {\n      if (isReferenceExist === 1) {\n        Axios.post(dbWareHouseRequest, {\n          actualAmount: amount,\n          referenceSelection: ReferenceSelected,\n        }).then((response: AxiosResponse): void => {\n          if (response.data === \"SUCCESSFUL_REQUEST\") {\n            setAmount(\"\");\n            setValueReferenceSelect(null);\n            refContainer.current.value = \"\";\n            dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n          } else {\n            dispatch({ type: \"INSUFFICIENT_SUPPLIES\", payload: response.data });\n          }\n        });\n      } else {\n        dispatch({ type: \"REFERENCE_DOES_NOT_EXIST\" });\n      }\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n      refContainer.current.value = \"\";\n    }\n  };\n\n  const verificationARYModal = (\n    referencia: any,\n    id: any,\n    amount: any,\n    HTMLElement: any\n  ) => {\n    const valueInput = parseFloat(HTMLElement.value);\n    const inputCondition = valueInput > 0 && Number.isInteger(valueInput);\n    if (inputCondition) {\n      let diff = parseFloat(amount) - valueInput;\n      if (diff >= 0) {\n        setIsOpenARYModal(true);\n        setInfoProcess({\n          reference: referencia,\n          id,\n          amount,\n          valueInput,\n          HTMLElement,\n        });\n      } else {\n        dispatch({ type: \"DIFF_NEGATIVE\" });\n      }\n    } else {\n      setIsOpenARYModal(false);\n      dispatch({ type: \"WRONG_INPUT_PROCESS\" });\n    }\n  };\n\n  const handlerSubtract = () => {\n    let diff = infoProcess.amount - infoProcess.valueInput;\n    infoProcess.HTMLElement.value = \"\";\n    Axios.post(dbUpdateDressMakingProcess, {\n      referencia: infoProcess.reference,\n      id: infoProcess.id,\n      diff,\n      amount: infoProcess.valueInput,\n    }).then((response: AxiosResponse) => {\n\n      infoProcess.valueInput = null;\n      Axios.get(dbApprovedRequests).then((response: AxiosResponse) => {\n        setApprovedRequests(response.data);\n      });\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenARYModal(false);\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-dressmaking\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-dressmaking\">\n      <div className=\"navbar-dressmaking\">\n        <h2 className=\"navbar-dressmaking__h2\">Taller confección</h2>\n        <div className=\"navbar-dressmaking-otpions\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\n                : \"tabs-dressmaking\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a href=\"#ressmaking-request-container\" onClick={handleNavbarClick}>\n              Enviar petición\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\n                : \"tabs-dressmaking\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#dressmaking-process-container\"\n              onClick={handleNavbarClick}\n            >\n              Artículos en proceso\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3\n                ? \"tabs-dressmaking active-tabs-dressmaking\"\n                : \"tabs-dressmaking\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a href=\"#requests-history-section\" onClick={handleNavbarClick}>\n              Historial de peticiones\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-dressmaking-section\" id=\"scroll-dressmaking\">\n        <div\n          className=\"dressmaking-request-container\"\n          id=\"ressmaking-request-container\"\n        >\n          <div className=\"dressmaking-request-card\">\n            <div className=\"dressmaking-request-card__h2\">\n              Enviar petición a Bodega Insumos\n            </div>\n            <div className=\"dressmaking-request-form\">\n              <div className=\"filter-dropdown-request-dressmaking\">\n                <FilterDropdown\n                  options={references}\n                  id=\"referencia\"\n                  label=\"referencia\"\n                  prompt=\"Seleccionar referencia\"\n                  value={valueReferenceSelect}\n                  onChange={(val: any) => setValueReferenceSelect(val)}\n                />\n              </div>\n              <input\n                ref={refContainer}\n                id=\"actualAmount\"\n                name=\"actualAmount\"\n                className=\"actualAmount\"\n                placeholder=\"cantidad\"\n                type=\"number\"\n                value={amount}\n                autoComplete=\"off\"\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n              />\n              <button className=\"btn\" type=\"button\" onClick={suppliesRequest}>\n                Enviar\n              </button>\n            </div>\n          </div>\n\n          <div className=\"information-dressmaking-request-container\">\n            <h2 className=\"information-dressmaking-request-container__h2\">\n              Enviar petición a Bodega Insumos\n            </h2>\n            <p className=\"information-dressmaking-request-container__p\">\n              ¿Necesitas confeccionar un nuevo artículo? Entonces envía una\n              petición a Bodega Insumos para obtener los insumos necesarios para\n              confeccionar este artículo. Para esto solo escoge la referencia\n              del artículo que quieres hacer, cuantos artículos quieres realizar\n              y preciona el botón enviar. Así de fácil :)\n            </p>\n          </div>\n        </div>\n        <div\n          className=\"dressmaking-process-container\"\n          id=\"dressmaking-process-container\"\n        >\n          <h3>Artículos en proceso</h3>\n          <p>\n            En este apartado se muestra los artículos que se están produciendo.\n            Puedes ir descontando la cantidad en proceso de los artículos a\n            medida que los vas produciendo. Solo digita la cantidad producida y\n            presiona aceptar.{\" \"}\n          </p>\n          {approvedRequests.length == 0 && (\n            <>\n              <div className=\"no-data-image-approved-req-dressmaking-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-approved-req-dressmaking-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-approved-req-dressmaking-paragraph\">\n                Aún no hay artículos en proceso\n              </p>\n            </>\n          )}\n          {approvedRequests.length !== 0 && (\n            <div className=\"approved-requests-dressmaking-container\">\n              {approvedRequests.map((item: any) => {\n                return (\n                  <div className=\"requestDressmakingContainer\">\n                    <h4 className=\"requestDressmakingContainer__h4\">\n                      Referencia en proceso\n                    </h4>\n                    <div className=\"requestDressmakingContainer__reference\">\n                      Petición: #{item.id}\n                    </div>\n                    <div className=\"requestDressmakingContainer__reference\">\n                      Referencia: {item.referencia}\n                    </div>\n                    <div className=\"requestDressmakingContainer__amount\">\n                      Cantidad en proceso: {item.cantidad}\n                    </div>\n                    <div className=\"requestDressmakingContainer__timestamp\">\n                      Fecha: {item.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <input\n                      className={\"h\" + item.id}\n                      id=\"requestDressmakingContainer__amountInput\"\n                      type=\"number\"\n                      placeholder=\"Digite la cantidad terminada\"\n                    />\n                    <button\n                      className=\"btn requestDressmakingContainer__accept\"\n                      onClick={() => {\n                        verificationARYModal(\n                          item.referencia,\n                          item.id,\n                          item.cantidad,\n                          document.querySelector(\".h\" + item.id)\n                        );\n                      }}\n                    >\n                      Aceptar\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"requests-history-section\" id=\"requests-history-section\">\n          <h3>Historial de peticiones</h3>\n          <p>\n            Aquí se despliega el historial de peticiones realizadas de taller\n            confección a bodega insumos.\n          </p>\n          <div className=\"requets-history-dressmaking-container\">\n            <div className=\"label-history-request-dressmanking\">\n              <div className=\"label-history-request-dressmanking__number-of-order\">\n                Número de orden\n              </div>\n              <div className=\"label-history-request-dressmanking__reference\">\n                Referencia\n              </div>\n              <div className=\"label-history-request-dressmanking__amount\">\n                Cantidad\n              </div>\n              <div className=\"label-history-request-dressmanking__decision\">\n                Decisión\n              </div>\n              <div className=\"label-history-request-dressmanking__timestamp\">\n                Fecha\n              </div>\n            </div>\n            {requestsHistory.map((request: any) => {\n              return (\n                <div className=\"request-card-container\">\n                  <div className=\"request-card-container__order\">\n                    {request.numero_de_orden}\n                  </div>\n                  <div className=\"request-card-container__reference\">\n                    {request.referencia}\n                  </div>\n                  <div className=\"request-card-container__amount\">\n                    {request.cantidad}\n                  </div>\n                  <div className=\"request-card-container__decision\">\n                    {request.decision}\n                  </div>\n                  <div className=\"request-card-container__date\">\n                    {\" \"}\n                    {request.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      {state.isInsufficientModalOpen && (\n        <SuccessfulModalDressMaking\n          modalContent={state.modalContent}\n          closeModal={closeModal}\n          checkNumber={state.checkNumber}\n        />\n      )}\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n        {state.imgCheckNumber === 1 && (\n          <img\n            className=\"modalWarehouseImg\"\n            src={completeImage}\n            alt=\"modalImg\"\n          />\n        )}\n        {state.imgCheckNumber === 2 && (\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\n        )}\n      </Modal>\n      <ModalAreYouSureDressmaking\n        isOpen={isOpenARYModal}\n        closeModal={closeModal}\n        subAmountFunction={handlerSubtract}\n      />\n    </div>\n  );\n};\n\nexport default DressMaking;\n","import React, {useEffect, useState} from 'react';\n\nimport notFoundImage from '../../assets/Not Found.svg';\nimport './style/ModalInventoryWareHouse.css';\n\nconst ModalInvetoryBodega = ({modalContent, closeModal}: any) => {\n  const handleClose = () => {\n    closeModal();\n  };\n\n  const [searchTerm, setSearchTerm] = useState('');\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  const handlerSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  return (\n    <div className=\"container_table-bodega\">\n      <div className=\"table_title-bodega\">Información</div>\n      <div className=\"search-warehouse-container\">\n        <i className=\"gg-search\"></i>\n        <input\n          type=\"search\"\n          placeholder=\"Buscar por código...\"\n          className=\"search-filter-design-warehouse\"\n          onChange={(e: any) => handlerSearch(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"table-header-container-warehouse\">\n        <div className=\"table_header-bodega\">Insumo</div>\n        <div className=\"table_header-bodega\">Imagen</div>\n      </div>\n      <div className=\"scroll-modal-inventory\">\n        {modalContent\n          .filter((val: any) => {\n            iterator += 1;\n            if (searchTerm === '') {\n              return val;\n            } else if (\n              val.codigo\n                .toString()\n                .slice(0, searchTerm.length)\n                .includes(searchTerm)\n            ) {\n              enableEmpty = false;\n              return val;\n            } else if (iterator == modalContent.length && enableEmpty == true) {\n              showEmptySearch = true;\n            }\n          })\n          .map((props: any) => {\n            return (\n              <div className=\"items_container-bodega\" key={props.codigo}>\n                <div className=\"sub_items_container-bodega\">\n                  <div className=\"sub_sub_items_container-bodega\">\n                    <div className=\"table_item-bodega\">\n                      Código: {props.codigo}\n                    </div>\n                    <div className=\"table_item-bodega\">\n                      Descripción: {props.descripcion}\n                    </div>\n                    <div className=\"table_item-bodega\">\n                      Cantidad: {props.metros ? props.metros : props.cantidad}\n                    </div>\n                  </div>\n                  <div className=\"table_item-bodega\">\n                    <img\n                      className=\"table_img-bodega\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        {showEmptySearch && (\n          <img\n            className=\"notFoundImgWarehouse\"\n            src={notFoundImage}\n            alt=\"Not found\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModalInvetoryBodega;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/ModalinsufficientSupplies.css';\n\nconst insufficientSuppliesID: any = document.getElementById(\n  'insufficientSuppliesModal'\n);\n\nconst ModalinsufficientSupplies = (props: any) => {\n  const handlerButtonReject = () => {\n    props.handlerReject(props.infoRequest.index);\n    props.closeModal();\n  };\n  const handleClose = () => {\n    props.closeModal();\n  };\n  if (!props.isOpen) return null;\n  return ReactDOM.createPortal(\n    <div className=\"ModalNoSuppliesComponent\">\n      <div className=\"ModalNoSuppliesComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalNoSuppliesComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>\n          Error: En el inventario no se encuentran los insumos suficientes\n        </h4>\n        <p>\n          No se puede aceptar esta petición debido a que en Bodega no hay los\n          insumos suficientes para cumplir con la producción. Por favor, rechace\n          esta petición.\n        </p>\n        <div className=\"containerNoSupplies_table\">\n          <div className=\"tableNoSupplies_title\">Insumos insuficientes</div>\n          <div className=\"tableNoSupplies_header\">Insumo insuficiente</div>\n          <div className=\"tableNoSupplies_header\">Imagen</div>\n          {props.arrayNoSupplies.map((props: any) => {\n            return (\n              <div className=\"itemsNoSupplies_container\" key={props.codigo}>\n                <div className=\"sub_itemsNoSupplies_container\">\n                  <div className=\"sub_sub_itemsNoSupplies_container\">\n                    <div className=\"tableNoSupplies_item\">\n                      Item: {props.codigo}\n                    </div>\n                    <div className=\"tableNoSupplies_item\">\n                      Descripción: {props.descripcion}\n                    </div>\n                    <div className=\"tableNoSupplies_item\">\n                      Existencias: {props.metros}\n                    </div>\n                    <div className=\"tableNoSupplies_item\">\n                      Faltante: {props.remainingAmount}\n                    </div>\n                  </div>\n                  <div className=\"tableNoSupplies_item\">\n                    <img\n                      className=\"tableNoSupplies_img\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div\n          className=\"InsuficcientButtonRejectContainer\"\n          onClick={handlerButtonReject}\n        >\n          <button className=\"btn\">Rechazar petición</button>\n        </div>\n      </div>\n    </div>,\n    insufficientSuppliesID\n  );\n};\n\nexport default ModalinsufficientSupplies;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport Axios from 'axios';\n\nimport './style/ModalDecisionSupplies.css';\nimport {baseURL} from '../app/baseURL';\n\nconst idModalDecisionSupplies: any = document.getElementById(\n  'ModalDecisionSupplies'\n);\n\nconst ModalDecisionSupplies = (props: any) => {\n  const informationSuppliesURL: string = baseURL + 'api/temporal';\n  const [informationSupplies, setInformationSupplies] = useState([]);\n\n  useEffect(() => {\n    if (props.isOpen) {\n      Axios.post(informationSuppliesURL, {\n        referenceSelection: props.infoRequest.reference,\n        actualAmount: props.infoRequest.amount,\n      })\n        .then((response: any) => {\n          setInformationSupplies(response.data);\n        })\n    }\n  }, [props.isOpen]);\n\n  const handlerButtonReject = () => {\n    props.handlerReject(props.infoRequest.index);\n    props.closeModal();\n  };\n\n  const handlerButtonAccept = () => {\n    props.handlerAccept(props.infoRequest.index);\n    props.closeModal();\n  };\n\n  const handlerClose = () => {\n    props.closeModal();\n  };\n\n  if (!props.isOpen) return null;\n\n  return ReactDOM.createPortal(\n    <div className=\"ModalDecisionSuppliesComponent\">\n      <div className=\"ModalDecisionSuppliesComponent__container\">\n        <button\n          onClick={handlerClose}\n          className=\"ModalDecisionSuppliesComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>Información de los insumos</h4>\n        <p>\n          Si aceptas esta decisión, estos serán los insumos que se verán\n          afectados.\n        </p>\n        <div className=\"containerDecisionSupplies_table\">\n          <div className=\"tableDecisionSupplies_title\">Insumos Necesarios</div>\n          <div className=\"tableDecisionSupplies_header\">\n            Información del insumo\n          </div>\n          <div className=\"tableDecisionSupplies_header\">Imagen</div>\n          {informationSupplies.map((props: any) => {\n            return (\n              <div\n                className=\"itemsDecisionSupplies_container\"\n                key={props.codigo}\n              >\n                <div className=\"sub_itemsDecisionSupplies_container\">\n                  <div className=\"sub_sub_itemsDecisionSupplies_container\">\n                    <div className=\"tableDecisionSupplies_item\">\n                      Item: {props.codigo}\n                    </div>\n                    <div className=\"tableDecisionSupplies_item\">\n                      Color: {props.color}\n                    </div>\n                    <div className=\"tableDecisionSupplies_item\">\n                      Descripción: {props.descripcion}\n                    </div>\n                    <div className=\"tableDecisionSupplies_item\">\n                      Consumo: {props.amount}\n                      {props.metros ? ' metros' : ''}\n                    </div>\n                  </div>\n                  <div className=\"tableDecisionSupplies_item\">\n                    <img\n                      className=\"tableDecisionSupplies_img\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"DecisionButtonsContainer\">\n          <button\n            className=\"btn DecisionButtonsContainer__accept\"\n            onClick={handlerButtonAccept}\n          >\n            Aceptar\n          </button>\n          <button\n            className=\"btn DecisionButtonsContainer__reject\"\n            onClick={handlerButtonReject}\n          >\n            Rechazar\n          </button>\n        </div>\n      </div>\n    </div>,\n    idModalDecisionSupplies\n  );\n};\n\nexport default ModalDecisionSupplies;\n","export const reducer = (state: any, action: any) => {\n\n  if (action.type === 'SUCCESSFUL_FORM') {\n    return {\n      ...state,\n      modalFormContent:\n        '¡Felicitaciones! Se ha agregado un nuevo insumo correctamente',\n      isFormModalOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 1,\n    };\n  }\n\n  if (action.type === 'SUCCESSFUL_UPDATE') {\n    return {\n      ...state,\n      modalUpdateContent: 'Inventario añadido exitosamente',\n      isModalUpdateOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 1,\n    };\n  }\n\n  if (action.type === 'EXISTING_CODE') {\n    return {\n      ...state,\n      modalFormContent:\n        'Este codigo ya existe en el inventario. Por favor dirigirse a la sección Añadir a Insumo registrado',\n      isFormModalOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'SUCCESSFUL_ADDING') {\n    return {\n      ...state,\n      modalFormContent: 'Insumo añadido correctamente',\n      isModalOpen: false,\n      isFormModalOpen: true,\n    };\n  }\n\n  if (action.type === 'WRONG_INPUT') {\n    return {\n      ...state,\n      modalUpdateContent:\n        'OJO: Por favor ingrese correctamente todos los campos',\n      isModalUpdateOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      modalUpdateContent: 'Error: Este código no existe',\n      isModalUpdateOpen: true,\n      isModalOpen: false,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\n    return {\n      ...state,\n      isOpenNoSupplies: true,\n      modalContent: action.payload,\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isModalOpen: false,\n      isOpenNoSupplies: false,\n      imgCheckNumber: 0,\n    };\n  }\n  return {\n    ...state,\n    isModalOpen: false,\n    isFormModalOpen: false,\n    isModalUpdateOpen: false,\n    isOpenNoSupplies: false,\n    isModalSuppliesOpen: false\n  };\n};\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport \"./style/Warehouse.css\";\nimport ModalInvetoryWareHouse from \"../components/warehouse/ModalInventoryWareHouse\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport ModalinsufficientSupplies from \"../components/warehouse/ModalinsufficientSupplies\";\nimport ModalDecisionSupplies from \"../components/warehouse/ModalDecisionSupplies\";\nimport { reducer } from \"../components/warehouse/ReducerWarehouse\";\nimport FilterDropdown from \"../components/FilterDropdown\";\n\nconst defaultState: any = {\n  isModalOpen: false,\n  isFormModalOpen: false,\n  isModalUpdateOpen: false,\n  isOpenNoSupplies: false,\n  modalContent: [],\n  modalFormContent: \"\",\n  modalUpdateContent: \"\",\n  checkNumber: 0,\n  imgCheckNumber: 0,\n};\n\nfunction WareHouse() {\n  const [code, setCode] = useState<string>(\"\");\n  const [color, setColor] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [img, setImg] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [queryData, setQueryData] = useState<any>([]);\n  const [updateCode, setUpdateCode] = useState<string>(\"\");\n  const [updateAmount, setUpdateAmount] = useState<string>(\"\");\n  const [dressMakingReq, setDressMakingReq] = useState<any>([]);\n  const [suppliesData, setSuppliesData] = useState<any>([]);\n  const [reRenderUpdate, setReRenderUpdate] = useState<boolean>(false);\n  const [infoRequest, setInfoRequest] = useState({});\n  const [isOpenDecision, setIsOpenDecision] = useState<boolean>(false);\n  const [valueCode, setValueCode] = useState<any>(null);\n  const [valueSupplieDropdown, setValueSupplieDropdown] = useState<any>(null)\n  const [toggleState, setToggleState] = useState(1);\n  const [switchUseEffect, setSwitchUseEffect] = useState<boolean>(false);\n  const saveClothAPIURL: string = baseURL + \"api/savecloth\";\n  const invetoryBodegaAPIURL: string = baseURL + \"api/invetorywarehouse\";\n  const invetoryWareHouseAPIURL: string = baseURL + \"api/invetorywarehouse\";\n  const updateInventoryWareHouseURL: string =\n    baseURL + \"api/updatewarehouseinventory\";\n  const getDressMakingRequest: string = baseURL + \"api/dressmakingrequest\";\n  const dbSuppliesURL: string = baseURL + \"api/suppliesrequest\";\n  const dbSaveDecision: string = baseURL + \"api/savewarehousedecision\";\n  const suppliesDataDropdown = [\n    {\n      id: \"1\",\n      value: \"Tela\",\n    },\n    {\n      id: \"2\",\n      value: \"Insumo\",\n    },\n  ];\n\n  useEffect(() => {\n    Axios.get(invetoryWareHouseAPIURL).then((response: AxiosResponse) => {\n      setQueryData(response.data);\n      console.log(response.data);\n      // triggerListeners(setType, setUpdateCode);\n    });\n\n    Axios.get(getDressMakingRequest).then((response: AxiosResponse) => {\n      setDressMakingReq(response.data);\n    });\n\n    Axios.get(invetoryBodegaAPIURL)\n      .then((response: AxiosResponse) => {\n        setSuppliesData(response.data);\n      })\n      .catch((error) => {\n        if (error) throw error;\n      });\n  }, [switchUseEffect]);\n\n  interface ICloth {\n    code: string;\n    color: string;\n    amount: string;\n    description: string;\n    img: string;\n    type: string;\n  }\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    let enableAmount = false;\n    let supplieSelected = \"\";\n    let isCodeExist = 0;\n\n    if (valueSupplieDropdown === null) {\n      supplieSelected = \"\";\n    } else if (typeof valueSupplieDropdown === \"object\") {\n      supplieSelected = valueSupplieDropdown.value.toString();\n    } else if (typeof valueSupplieDropdown === \"string\") {\n      supplieSelected = valueSupplieDropdown;\n    }\n\n    const newCloth: ICloth = {\n      code,\n      color,\n      amount,\n      description,\n      img,\n      type: supplieSelected,\n    };\n\n    if (type == \"Tela\") {\n      enableAmount = parseFloat(amount) > 0;\n    } else {\n      enableAmount = Number.isInteger(parseInt(amount)) && parseInt(amount) > 0;\n    }\n    let enableItems =\n      code !== \"\" &&\n      color !== \"\" &&\n      description !== \"\" &&\n      img !== \"\" &&\n      supplieSelected !== \"\";\n    if (enableAmount && enableItems) {\n      let codigoInput = document.getElementById(\"codigo\") as HTMLInputElement;\n      let colorInput = document.getElementById(\"color\") as HTMLInputElement;\n      let amountInput = document.getElementById(\"amount\") as HTMLInputElement;\n      let descripcionInput = document.getElementById(\n        \"descripcion\"\n      ) as HTMLInputElement;\n      let imgInput = document.getElementById(\"url-img\") as HTMLInputElement;\n      let selectedOption: any = document.querySelector(\n        \".selected-option-bodega\"\n      );\n      Axios.post(saveClothAPIURL, {\n        newCloth,\n      })\n        .then((response: AxiosResponse) => {\n          if (response.data == \"SUCCESSFUL_ADDING\") {\n            dispatch({ type: \"SUCCESSFUL_FORM\" });\n            codigoInput.value = \"\";\n            colorInput.value = \"\";\n            amountInput.value = \"\";\n            descripcionInput.value = \"\";\n            imgInput.value = \"\";\n            setValueSupplieDropdown(null);\n            Axios.get(invetoryWareHouseAPIURL).then(\n              (response: AxiosResponse) => {\n                setQueryData(response.data);\n              }\n            );\n            setSwitchUseEffect(!switchUseEffect);\n          }\n          if (response.data == \"EXISTING_CODE\") {\n            dispatch({ type: \"EXISTING_CODE\" });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  // UPDATE INVENTORY\n  const handleUpdateInventory = () => {\n    let codeSelected = \"\";\n    let isCodeExist = 0;\n    let inputUpdateAmount = document.getElementById(\n      \"amount-update-inventory\"\n    ) as HTMLInputElement;\n\n    if (valueCode === null) {\n      codeSelected = \"\";\n    } else if (typeof valueCode === \"object\") {\n      codeSelected = valueCode.codigo.toString();\n    } else if (typeof valueCode === \"string\") {\n      codeSelected = valueCode;\n    }\n\n    queryData.map((val: any) => {\n      if (val.codigo === codeSelected) {\n        isCodeExist += 1;\n        return isCodeExist;\n      } else {\n        return isCodeExist;\n      }\n    });\n\n    let enableAmount =\n      Number.isInteger(parseInt(updateAmount)) && parseInt(updateAmount) > 0;\n      console.log(enableAmount);\n    let enableCode = codeSelected !== \"\";\n\n    if (enableAmount && enableCode) {\n      if (isCodeExist === 1) {\n        let payloadUpdate = {\n          code: codeSelected,\n          amount: updateAmount,\n        };\n        setValueCode(null);\n        inputUpdateAmount.value = \"\";\n        setUpdateAmount(\"0\");\n        Axios.post(updateInventoryWareHouseURL, payloadUpdate).then(\n          (response: any) => {\n            if (response.data == \"SUCCESSFUL_UPDATE\") {\n              dispatch({ type: \"SUCCESSFUL_UPDATE\" });\n              setSwitchUseEffect(!switchUseEffect);\n            }\n          }\n        );\n      } else {\n        dispatch({ type: \"CODE_DOES_NOT_EXIST\" });\n      }\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const handlerApprove = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSuppliesURL, {\n      actualAmount: dressMakingReq[index].cantidad,\n      referenceSelection: dressMakingReq[index].referencia,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_REQUEST\") {\n        Axios.post(dbSaveDecision, {\n          ...dressMakingReq[index],\n          idDecision: 1,\n        }).then((response: AxiosResponse): void => {});\n        let filterResult = dressMakingReq.filter(\n          (item: any) => item.id != dressMakingReq[index].id\n        );\n        setDressMakingReq(filterResult);\n      }\n    });\n  };\n\n  const handlerRefuse = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSaveDecision, {\n      ...dressMakingReq[index],\n      idDecision: 0,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_SAVING\") {\n        let filterResult = dressMakingReq.filter(\n          (item: any) => item.id != dressMakingReq[index].id\n        );\n        setDressMakingReq(filterResult);\n      } else {\n      }\n    });\n  };\n\n  const handlerDecision = (index: any) => {\n    setInfoRequest({\n      index,\n      amount: dressMakingReq[index].cantidad,\n      reference: dressMakingReq[index].referencia,\n    });\n    Axios.post(dbSuppliesURL, {\n      actualAmount: dressMakingReq[index].cantidad,\n      referenceSelection: dressMakingReq[index].referencia,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_REQUEST\") {\n        setIsOpenDecision(true);\n      } else {\n        dispatch({ type: \"INSUFFICIENT_SUPPLIES\", payload: response.data });\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenDecision(false);\n    dispatch({ tpye: \"CLOSE_MODAL\" });\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-warehouse\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-warehouse\">\n      <div className=\"navbar-warehouse\">\n        <h2 className=\"navbar-warehouse__h2\">Bodega Insumos</h2>\n        <div className=\"navbar-warehouse-otpions\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a href=\"#new-supplies-section\" onClick={handleNavbarClick}>\n              Registrar nuevos insumos\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#inventory-warehouse-modal-section\"\n              onClick={handleNavbarClick}\n            >\n              Inventario\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a href=\"#update-section\" onClick={handleNavbarClick}>\n              Actualizar insumos existentes\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 4\n                ? \"tabs-warehouse active-tabs-warehouse\"\n                : \"tabs-warehouse\"\n            }\n            onClick={() => toggleTab(4)}\n          >\n            <a href=\"#request-section\" onClick={handleNavbarClick}>\n              Peticiones\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-warehouse\" id=\"scroll-warehouse\">\n        <div className=\"body-warehouse-information\" id=\"new-supplies-section\">\n          <div className=\"warehouse-form-container\">\n            <form className=\"warehouse-form\">\n              <h2>Registrar nuevos insumos</h2>\n              <div className=\"border-div\"></div>\n              <input\n                type=\"text\"\n                id=\"codigo\"\n                placeholder=\"Código\"\n                onChange={(e: any) => setCode(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                id=\"color\"\n                placeholder=\"Color\"\n                onChange={(e: any) => setColor(e.target.value)}\n              />\n              <input\n                type=\"number\"\n                id=\"amount\"\n                placeholder=\"Metros/Cantidad\"\n                onChange={(e: any) => setAmount(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                id=\"descripcion\"\n                placeholder=\"Descripción\"\n                className=\"descriptionInput\"\n                onChange={(e: any) => setDescription(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                id=\"url-img\"\n                placeholder=\"URL de la imágen\"\n                onChange={(e: any) => setImg(e.target.value)}\n              />\n              <div className=\"filterDropdownSupplieWarehouse\">\n                <FilterDropdown\n                  options={suppliesDataDropdown}\n                  id=\"id\"\n                  label=\"value\"\n                  prompt=\"Seleccionar tela o insumo\"\n                  value={valueSupplieDropdown}\n                  onChange={(val: any) => setValueSupplieDropdown(val)}\n                />\n              </div>\n              <button className=\"btn\" onClick={handleSubmit}>\n                Enviar\n              </button>\n            </form>\n          </div>\n          <div className=\"information-add-supplies-container\">\n            <h2 className=\"information-add-supplies-container__h2\">\n              Registrar nuevos insumos\n            </h2>\n            <p className=\"information-add-supplies-container__p\">\n              ¿Has recibido stock de insumos nuevos? En este apartado puedes\n              agregar estos insumos nuevos al inventario. Sólo digita el código\n              con el cual identificarás el insumo, el color, metros o cantidad\n              dependiendo si es tela o otro elemento (botones, correderas, etc),\n              una descripción, el URL de la imágen y seleccina si es tela o\n              insumo (si es un botón, corredera, etc). Por último, presiona el\n              botón de enviar y listo :)\n            </p>\n          </div>\n        </div>\n\n        <div\n          className=\"inventory-warehouse-modal-section\"\n          id=\"inventory-warehouse-modal-section\"\n        >\n          <h3>Inventario de los insumos</h3>\n          <p>\n            En este apartado se despliega el inventario de los insumos (telas,\n            botones, correderas, etcétera).\n          </p>\n          <ModalInvetoryWareHouse\n            modalContent={suppliesData}\n            closeModal={closeModal}\n          />\n        </div>\n\n        <div className=\"update-container\" id=\"update-section\">\n          <div className=\"update-container-card\">\n            <div className=\"update-container__h2\">\n              Actualizar insumos registrados\n            </div>\n            <div className=\"update-container-form\">\n              <div className=\"filterDropdownUpdateWarehouse\">\n                <FilterDropdown\n                  options={queryData}\n                  id=\"codigo\"\n                  label=\"codigo\"\n                  prompt=\"Seleccionar código\"\n                  value={valueCode}\n                  onChange={(val: any) => setValueCode(val)}\n                />\n              </div>\n              <input\n                type=\"number\"\n                id=\"amount-update-inventory\"\n                placeholder=\"Cantidad\"\n                className=\"amount-update-inventory\"\n                onChange={(e: any) => setUpdateAmount(e.target.value)}\n              />\n              <button className=\"btn\" onClick={handleUpdateInventory}>\n                {\" \"}\n                Actualizar\n              </button>\n            </div>\n          </div>\n\n          <div className=\"information-update-container\">\n            <h2 className=\"information-update-container__h2\">\n              Actualizar cantidad a un insumo registrado\n            </h2>\n            <p className=\"information-update-container__p\">\n              ¿Has recibido más stock de insumos ya registrados en tu\n              inventario? En este apartado puedes actualizar estos insumos\n              existentes. Solo escoge el codigo, digita la cantidad y presiona\n              el botón actualizar. Así de sencillo :)\n            </p>\n          </div>\n        </div>\n\n        <div className=\"warehouseReqSection\" id=\"request-section\">\n          <h3>Peticiones</h3>\n          <p>\n            En este apartado se muestran las peticiones realizadas por taller\n            confección. Recuerda presionar el botón 'Tomar decisión' para\n            aceptar o rechazar las peticiones.\n          </p>\n          {dressMakingReq.length == 0 && (\n            <>\n              <div className=\"no-data-image-warehouse-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-warehouse-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-warehouse-paragraph\">\n                Aún no hay peticiones\n              </p>\n            </>\n          )}\n          {dressMakingReq.length !== 0 && (\n            <div className=\"dressmakingReqContainer\">\n              {dressMakingReq.map((req: any, index: any) => {\n                return (\n                  <div key={index} className=\"requestWarehouseContainer\">\n                    <h4 className=\"requestWarehouseContainer__h4\">\n                      Petición de taller confección\n                    </h4>\n                    <div className=\"requestWarehouseContainer__reference\">\n                      Referencia: {req.referencia}\n                    </div>\n                    <div className=\"requestWarehouseContainer__reference\">\n                      Cantidad: {req.cantidad}\n                    </div>\n                    <div className=\"requestWarehouseDecisionBTNContainer\">\n                      <button\n                        className=\"btn\"\n                        onClick={() => {\n                          handlerDecision(index);\n                        }}\n                      >\n                        Tomar decisión\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <ModalinsufficientSupplies\n          isOpen={state.isOpenNoSupplies}\n          closeModal={closeModal}\n          arrayNoSupplies={state.modalContent}\n          infoRequest={infoRequest}\n          handlerReject={handlerRefuse}\n        />\n        <ModalDecisionSupplies\n          isOpen={isOpenDecision}\n          closeModal={closeModal}\n          infoRequest={infoRequest}\n          handlerReject={handlerRefuse}\n          handlerAccept={handlerApprove}\n        />\n        <Modal isOpen={state.isFormModalOpen} closeModal={closeModal}>\n          <h1 className=\"modalWarehouseh1\">{state.modalFormContent}</h1>\n          {state.imgCheckNumber === 1 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={completeImage}\n              alt=\"modalImg\"\n            />\n          )}\n          {state.imgCheckNumber === 2 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={errorImage}\n              alt=\"modalImg\"\n            />\n          )}\n        </Modal>\n        <Modal isOpen={state.isModalUpdateOpen} closeModal={closeModal}>\n          <h1 className=\"modalWarehouseh1\">{state.modalUpdateContent}</h1>\n          {state.imgCheckNumber === 1 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={completeImage}\n              alt=\"modalImg\"\n            />\n          )}\n          {state.imgCheckNumber === 2 && (\n            <img\n              className=\"modalWarehouseImg\"\n              src={errorImage}\n              alt=\"modalImg\"\n            />\n          )}\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nconst triggerListeners = (setType: any, setUpdateCode: any) => {\n  var selectedOption: any = document.querySelector(\".selected-option-bodega\");\n  var options: any = document.querySelectorAll(\".option-bodega\");\n\n  selectedOption.addEventListener(\"click\", () => {\n    selectedOption.parentElement.classList.toggle(\"active-bodega\");\n  });\n\n  options.forEach((option: any) => {\n    option.addEventListener(\"click\", () => {\n      setTimeout(() => {\n        selectedOption.innerHTML = option.innerHTML;\n        // SET CURRENT REFERENCE VALUE\n        setType(option.innerHTML);\n      }, 300);\n\n      selectedOption.parentElement.classList.remove(\"active-bodega\");\n    });\n  });\n};\n\nexport default withRouter(WareHouse);\n","export const reducer = (state: any, action: any) => {\n  if (action.type === 'INSUFFICIENT_SUPPLIES') {\n    const warningMissingSupplies = action.payload;\n    return {\n      ...state,\n      modalContent: warningMissingSupplies,\n      isModalOpen: true,\n      checkNumber: 0,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'SUCCESSFUL_REQUEST') {\n    return {\n      ...state,\n      modalContent: ['La referencia se ha guardado correctamente'],\n      isModalOpen: true,\n      checkNumber: 1,\n      imgCheckNumber: 1,\n    };\n  }\n  if (action.type === 'FAILED_REQUEST') {\n    return {\n      ...state,\n      modalContent: ['La petición no ha tenido exito'],\n      isModalOpen: true,\n      checkNumber: 2,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'INVALID_REFERENCE') {\n    return {\n      ...state,\n      modalContent: ['Ya existe la referencia que desea ingresar'],\n      isModalOpen: true,\n      checkNumber: 3,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === 'WRONG_INPUT') {\n    return {\n      ...state,\n      modalContent: ['Ingrese correctamente los campos'],\n      isModalOpen: true,\n      checkNumber: 4,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      isModalOpen: true,\n      modalContent: ['El codigo talla no existe'],\n      checkNumber: 5,\n      imgCheckNumber: 2,\n    };\n  }\n\n  if (action.type === 'SUCCESSFUL_SAMPLE_INVENTORY') {\n    const sampleInventory = action.payload;\n    return {\n      ...state,\n      isInventoryModalOpen: true,\n      modalInventoryContent: sampleInventory,\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isModalOpen: false,\n      isInventoryModalOpen: false,\n      imgCheckNumber: 0,\n    };\n  }\n\n  return {\n    ...state,\n    isModalOpen: false,\n    isInventoryModalOpen: false,\n    imgCheckNumber: 0,\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/ModalInformationDesign.css';\n\nconst informationModalID: any = document.getElementById('informationModal');\n\nconst ModalInformationDesign = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n  if (!props.isOpen) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <div className=\"ModalInfoComponent\">\n      <div className=\"ModalInfoComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalInfoComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>Referencia: {props.reference}</h4>\n        <p>Estos son los insumos que consume la referencia {props.reference}</p>\n        <div className=\"ModalInfoComponent__titleInformation\">\n          <div>Insumo</div>\n          <div>Imagen</div>\n        </div>\n        <div className=\"scroll-design-information-modal\">\n          {props.referenceArray.map((props: any) => {\n            return (\n              <div className=\"items_container-design\" key={props.codigo}>\n                <div className=\"items-information-design\">\n                  <div className=\"item-information-design__ref\">\n                    Referencia: {props.codigo}\n                  </div>\n                  <div className=\"item-information-design__amount\">\n                    Consumo: {props.consumptionAmount}\n                  </div>\n                  <div className=\"item-information-design__description\">\n                    Descripción: {props.descripcion}\n                  </div>\n                  <div className=\"item-information-design__color\">\n                    Color: {props.color}\n                  </div>\n                </div>\n                <div className=\"item-information-design\">\n                  <img\n                    className=\"item-information-image\"\n                    src={props.nombre_imagen}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>,\n    informationModalID\n  );\n};\n\nexport default ModalInformationDesign;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { baseURL } from \"../app/baseURL\";\n\nimport notFoundImage from \"../../assets/Not Found.svg\";\nimport ModalInformationDesign from \"./ModalInformationDesign\";\nimport \"./style/ModalDesignInventory.css\";\n\nconst ModalDesignInventory = ({ modalContent, closeModal }: any) => {\n  useEffect(() => {\n    setTimeout(() => {\n      closeModal();\n    }, 40000);\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [referenceNumber, setReferenceNumber] = useState<string>(\"\");\n  const [referenceArray, setReferenceArray] = useState([]);\n  const getreferenceconsumptionURL = baseURL + \"api/getreferenceconsumption\";\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  const handlerSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  const handlerInfoModal = (payload: any) => {\n    setIsModalOpen(true);\n    setReferenceNumber(payload);\n    const referenceSelection = payload;\n    Axios.post(getreferenceconsumptionURL, { referenceSelection })\n      .then((response) => {\n        setReferenceArray(response.data);\n      })\n  };\n\n  const closeModalInfo = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"container_table-design\">\n      <div className=\"table_title-design\">Información</div>\n      <div className=\"search-design-container\">\n        <i className=\"gg-search\"></i>\n        <input\n          type=\"search\"\n          placeholder=\"Buscar...\"\n          className=\"search-filter-design\"\n          onChange={(e: any) => handlerSearch(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"sample-image-container\">\n        <div className=\"table_header-design-sample\">Muestra</div>\n        <div className=\"table_header-design-img\">Imagen</div>\n      </div>\n      <div className=\"scroll-modal-design\">\n        {modalContent\n          .filter((val: any) => {\n            iterator += 1;\n            if (searchTerm === \"\") {\n              return val;\n            } else if (\n              val.referencia\n                .toString()\n                .slice(0, searchTerm.length)\n                .includes(searchTerm)\n            ) {\n              enableEmpty = false;\n              return val;\n            } else if (iterator == modalContent.length && enableEmpty == true) {\n              showEmptySearch = true;\n            }\n          })\n          .map((props: any) => {\n            return (\n              <div className=\"items_container-design\" key={props.referencia}>\n                <div className=\"items-information-container\">\n                  <div className=\"items-information-ref\">\n                    Referencia: {props.referencia}\n                  </div>\n                  <div className=\"items-information-size\">\n                    Talla: {props.talla}\n                  </div>\n                  <div className=\"items-information-description\">\n                    Descripción: {props.descripcion}\n                  </div>\n                  <div className=\"items-information-color\">\n                    Color: {props.color}\n                  </div>\n                  <div className=\"items-information-valuePerUnit\">\n                    Valor de la unidad: {props.valor_unidad}\n                  </div>\n                  <button\n                    className=\"btn\"\n                    id=\"handleInfoModal\"\n                    onClick={() => handlerInfoModal(props.referencia)}\n                  >\n                    Información de consumo\n                  </button>\n                </div>\n                <div className=\"table_item-design\">\n                  <img className=\"table_img-design\" src={props.nombre_imagen} />\n                </div>\n              </div>\n            );\n          })}\n        {showEmptySearch && (\n          <img className=\"notfoundImg\" src={notFoundImage} alt=\"Not Found\" />\n        )}\n      </div>\n      <ModalInformationDesign\n        isOpen={isModalOpen}\n        closeModal={closeModalInfo}\n        reference={referenceNumber}\n        referenceArray={referenceArray}\n      />\n    </div>\n  );\n};\n\nexport default ModalDesignInventory;\n","import React from 'react';\n\nimport './style/ModalDesign.css';\n\nconst ModalDesign = ({modalContent, closeModal}: any) => {\n  setTimeout(() => {\n    closeModal();\n  }, 5000);\n  return (\n    <div className=\"ModalDesignContainer\">\n      <h4>{modalContent}</h4>\n    </div>\n  );\n};\n\nexport default ModalDesign;\n","import React, {useEffect, useState, useReducer} from 'react';\nimport ReactDOM from 'react-dom';\nimport Axios from 'axios';\n\nimport './style/ModalDesignAddSupplies.css';\nimport {baseURL} from '../app/baseURL';\nimport ModalDesign from './ModalDesign';\nimport ModalDesignInventory from './ModalDesignInventory';\nimport FilterDropdown from '../FilterDropdown';\nimport {type} from 'node:os';\n\nconst addSuppliesID: any = document.getElementById('addSupplies');\n\nconst reducer = (state: any, action: any) => {\n  if (action.type === 'WRONG_INFORMATION') {\n    return {\n      ...state,\n      isOpen: true,\n      modalContent: 'Por favor digite bien todos los campos',\n    };\n  }\n\n  if (action.type === 'CODE_DOES_NOT_EXIST') {\n    return {\n      ...state,\n      isOpen: true,\n      modalContent: 'Esté código no existe. Por favor digitar otro',\n    };\n  }\n\n  if (action.type === 'CODE_EXIST') {\n    return {\n      ...state,\n      isOpen: true,\n      modalContent: 'Error: Este código ya está agregado',\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {\n      ...state,\n      isOpen: false,\n    };\n  }\n\n  return {\n    ...state,\n    isOpen: false,\n  };\n};\n\ninterface IWareHouseSupplies {\n  codigo: number;\n  color: string;\n  metros: number;\n  cantidad: number;\n  descripcion: string;\n  nombre_imagen: string;\n  timestamp: string;\n}\n\ninterface ISupplyInformation {\n  supplyCode: string;\n  supplyAmount: string;\n}\n\ninterface IDefaultState {\n  isModalOpen: boolean;\n  modalContent: string;\n}\n\nconst defaultState: IDefaultState = {\n  isModalOpen: false,\n  modalContent: '',\n};\n\nconst ModalDesignAddSupplies = (props: any) => {\n  const [valueSelect, setValueSelect] = useState<any>(null);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [dBWareHouseSupplies, setdBWareHouseSupplies] = useState<\n    IWareHouseSupplies[]\n  >([]);\n  const [addedInformation, setAddedInformation] = useState<\n    ISupplyInformation[]\n  >([]);\n  const dbWareHouseCodesURL: string = baseURL + 'api/warehousecodes';\n  const [inputAmount, setInputAmount] = useState<string>('');\n  const [selectedOption, setSelectedOption] = useState<any>(\n    'Seleccionar insumo'\n  );\n  let optionSelectCode: any = [];\n  let valueSelectComp: any = '';\n  let inputSelectIterator = 0;\n  let inputSelectAddedInfo = 0;\n\n  useEffect(() => {\n    Axios.get(dbWareHouseCodesURL).then((response: any) => {\n      setdBWareHouseSupplies(response.data);\n      if (props.isOpen) {\n      }\n    });\n  }, [props.isOpen]);\n\n  const handlerAddSupplies = () => {\n    var amountHTML: any = document.querySelector('.amountSuppliesInput');\n\n    //SELECT COMPROBATION\n    if (valueSelect === null) {\n      valueSelectComp = {\n        codigo: '',\n      };\n    } else if (typeof valueSelect === 'object') {\n      valueSelectComp = valueSelect.codigo.toString();\n    } else if (typeof valueSelect === 'string') {\n      valueSelectComp = valueSelect;\n    }\n\n    dBWareHouseSupplies.map((val: any) => {\n      if (val.codigo === valueSelectComp) {\n        inputSelectIterator += 1;\n        return inputSelectIterator;\n      } else {\n        return inputSelectIterator;\n      }\n    });\n\n    addedInformation.map((val: any) => {\n      if (val.supplyCode === valueSelectComp) {\n        inputSelectAddedInfo += 1;\n        return inputSelectAddedInfo;\n      } else {\n        return inputSelectAddedInfo;\n      }\n    });\n\n    let enableSelector = valueSelectComp !== '' || valueSelectComp !== null;\n    let enableAmount =\n      Number.isInteger(parseInt(amountHTML.value)) &&\n      parseInt(amountHTML.value) > 0;\n    if (enableSelector && enableAmount) {\n      if (inputSelectIterator === 1) {\n        if (inputSelectAddedInfo === 0) {\n          let informationObject: ISupplyInformation = {\n            supplyCode: valueSelectComp,\n            supplyAmount: inputAmount,\n          };\n          setAddedInformation([...addedInformation, informationObject]);\n\n          // SET EMPTY VALUES\n          amountHTML.value = null;\n          setValueSelect(null);\n        } else {\n          dispatch({type: 'CODE_EXIST'});\n        }\n      } else {\n        dispatch({type: 'CODE_DOES_NOT_EXIST'});\n      }\n    } else {\n      dispatch({type: 'WRONG_INFORMATION'});\n    }\n  };\n\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const removeItem = (code: any) => {\n    let newAddedInformation = addedInformation.filter(\n      (item) => item.supplyCode !== code\n    );\n    setAddedInformation(newAddedInformation);\n  };\n\n  const closeModal = () => {\n    dispatch({type: 'CLOSE_MODAL'});\n  };\n\n  if (!props.isOpen) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <div className=\"ModalAddSuppliesComponent\">\n      <div className=\"ModalAddSuppliesComponent__container\">\n        <button\n          onClick={handleClose}\n          className=\"ModalAddSuppliesComponent__close-button\"\n        >\n          X\n        </button>\n        <h4>Añadir telas o insumos</h4>\n        <p className=\"ModalAddSuppliesComponent__p\">\n          Aquí puedes añadir las telas y/o insumos que consume esta referencia.\n        </p>\n        <div className=\"addSuppliesZone\">\n          <div style={{width: 250}}>\n            <FilterDropdown\n              options={dBWareHouseSupplies}\n              id=\"codigo\"\n              label=\"codigo\"\n              prompt={'Seleccionar insumo'}\n              value={valueSelect}\n              onChange={(val: any) => setValueSelect(val)}\n            />\n          </div>\n          <input\n            type=\"number\"\n            className=\"amountSuppliesInput\"\n            placeholder=\"Digite la cantidad\"\n            autoComplete=\"off\"\n            onChange={(e) => setInputAmount(e.target.value)}\n          />\n          <button className=\"btn\" onClick={handlerAddSupplies}>\n            Añadir\n          </button>\n        </div>\n        {state.isOpen && (\n          <ModalDesign\n            modalContent={state.modalContent}\n            closeModal={closeModal}\n          />\n        )}\n        <div className=\"added-container-supplies\">\n          {addedInformation.map((item) => {\n            return (\n              <div key={item.supplyCode} className=\"supplie-add\">\n                <h2>Item agregado: </h2>\n                Codigo: {item.supplyCode} - Cantidad: {item.supplyAmount}\n                <button\n                  className=\"removeItemAddSupplies\"\n                  onClick={() => removeItem(item.supplyCode)}\n                >\n                  X\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"buttonAddSuppliesContainer\">\n          <button\n            className=\"buttonAddSuppliesContainer__ready\"\n            onClick={() => {\n              props.suppliesFromDesign(addedInformation);\n              props.closeModal();\n            }}\n          >\n            Listo\n          </button>\n          <button\n            className=\"buttonAddSuppliesContainer__cancel\"\n            onClick={handleClose}\n          >\n            Cancelar\n          </button>\n        </div>\n      </div>\n    </div>,\n    addSuppliesID\n  );\n};\n\nexport default ModalDesignAddSupplies;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { reducer } from \"../components/design/ReducerDesign\";\nimport \"./style/Design.css\";\nimport ModalDesignInventory from \"../components/design/ModalDesignInventory\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport ModalAddSupplies from \"../components/design/ModalDesignAddSupplies\";\nimport FilterDropdown from \"../components/FilterDropdown\";\n\ninterface ISupplyInformation {\n  supplyCode: string;\n  supplyAmount: string;\n}\n\ninterface IWareHouseSupplies {\n  codigo: number;\n  color: string;\n  metros: number;\n  cantidad: number;\n  descripcion: string;\n  nombre_imagen: string;\n  timestamp: string;\n}\n\nconst defaultState: any = {\n  modalContent: [],\n  isModalOpen: false,\n  isInventoryModalOpen: false,\n  modalInventoryContent: [],\n  checkNumber: 0,\n  imgCheckNumber: 0,\n};\n\nconst Design = () => {\n  const dbWareHouseCodesURL: string = baseURL + \"api/warehousecodes\";\n  const dbSaveNewReference: string = baseURL + \"api/savenewreference\";\n  const productionAPIURL: string = baseURL + \"api/production\";\n  const [switchReRender, setSwitchReRender] = useState<boolean>(false);\n  const [addReference, setAddReference] = useState<string>(\"\");\n  const [addDescription, setAddDescription] = useState<string>(\"\");\n  const [addColor, setAddColor] = useState<string>(\"\");\n  const [addImageName, setAddImageName] = useState<string>(\"\");\n  const [addValuePerUnit, setAddValuePerUnit] = useState<string>(\"\");\n  const [valueSizeSelect, setValueSizeSelect] = useState<any>(null);\n  const sizesArray: any = [\n    { codigo: \"1\", label: \"1\" },\n    { codigo: \"2\", label: \"2\" },\n    { codigo: \"3\", label: \"3\" },\n    { codigo: \"4\", label: \"4\" },\n  ];\n  let addSize: any = \"\";\n  const [addedInformationFromModal, setAddedInformationFromModal] =\n    useState<any>([]);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const [modalAddSupplies, setModalAddSupplies] = useState<boolean>(false);\n  const [toggleState, setToggleState] = useState(1);\n\n  useEffect(() => {\n    Axios.get(dbWareHouseCodesURL).then((response: AxiosResponse) => {});\n    Axios.get(productionAPIURL)\n      .then((response: any) => {\n        dispatch({\n          type: \"SUCCESSFUL_SAMPLE_INVENTORY\",\n          payload: response.data,\n        });\n      })\n      .catch((error) => {});\n  }, [switchReRender]);\n\n  const handlerAddSupplies = () => {\n    setModalAddSupplies(true);\n  };\n\n  const handlerSaveNewReference = () => {\n    let selectedOptionSize: any = document.querySelector(\n      \".selected-option-size\"\n    );\n    let isCodeExist = 0;\n\n    if (valueSizeSelect === null) {\n      addSize = \"\";\n    } else if (typeof valueSizeSelect === \"object\") {\n      addSize = valueSizeSelect.codigo.toString();\n    } else if (typeof valueSizeSelect === \"string\") {\n      addSize = valueSizeSelect;\n    }\n\n    sizesArray.map((val: any) => {\n      if (val.codigo === addSize) {\n        isCodeExist += 1;\n        return isCodeExist;\n      } else {\n        return isCodeExist;\n      }\n    });\n\n    const requestPayload = {\n      addReference: addReference,\n      addSize: addSize,\n      addDescription: addDescription,\n      addColor: addColor,\n      addImageName: addImageName,\n      valuePerUnit: addValuePerUnit,\n      addedInformationFromModal,\n    };\n\n    let enable =\n      addReference != \"\" &&\n      addSize != \"\" &&\n      addDescription != \"\" &&\n      addColor != \"\" &&\n      addImageName != \"\" &&\n      addValuePerUnit != \"\" &&\n      addedInformationFromModal.length != 0;\n    if (enable) {\n      if (isCodeExist === 1) {\n        Axios.post(dbSaveNewReference, requestPayload).then(\n          (response: AxiosResponse): void => {\n            if (response.data === \"SUCCESSFUL_REQUEST\") {\n              setEmptyValues();\n              dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n              setSwitchReRender(!switchReRender);\n            }\n            if (response.data === \"FAILED_REQUEST\") {\n              dispatch({ type: \"FAILED_REQUEST\" });\n            }\n            if (response.data === \"INVALID_REFERENCE\") {\n              dispatch({ type: \"INVALID_REFERENCE\" });\n            }\n          }\n        );\n      } else {\n        dispatch({ type: \"CODE_DOES_NOT_EXIST\" });\n      }\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({ tpye: \"CLOSE_MODAL\" });\n  };\n\n  const setEmptyValues = () => {\n    let addReferenceOption: any = document.querySelector(\n      \".add-reference-input\"\n    );\n    let addDescriptionOption: any = document.querySelector(\n      \".add-description-input\"\n    );\n    let addColorOption: any = document.querySelector(\".add-color-input\");\n    let addImageNameOption: any = document.querySelector(\n      \".add-imagename-input\"\n    );\n\n    let addValuePerUnit: any = document.getElementById(\"value-per-unit-input\");\n\n    addReferenceOption.value = \"\";\n    setValueSizeSelect(null);\n    addDescriptionOption.value = \"\";\n    addColorOption.value = \"\";\n    addImageNameOption.value = \"\";\n    addValuePerUnit.value= \"\";\n    setAddedInformationFromModal([]);\n    setAddReference(\"\");\n    setAddDescription(\"\");\n    setAddColor(\"\");\n    setAddImageName(\"\");\n    setAddValuePerUnit(\"\");\n  };\n\n  const handleInventory = () => {\n    Axios.get(productionAPIURL)\n      .then((response: any) => {\n        dispatch({\n          type: \"SUCCESSFUL_SAMPLE_INVENTORY\",\n          payload: response.data,\n        });\n      })\n      .catch((error) => {});\n  };\n\n  const closeModalAddSupplies = () => {\n    setModalAddSupplies(false);\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-design-section\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-design\">\n      <div className=\"navbar-design\">\n        <h2 className=\"navbar-design__h2\">Taller diseño</h2>\n        <div className=\"navbar-design-options\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-design active-tabs-design\"\n                : \"tabs-design\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a\n              href=\"#add-reference-design-container\"\n              onClick={handleNavbarClick}\n            >\n              Agregar una nueva muestra\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-design active-tabs-design\"\n                : \"tabs-design\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#inventory-design-modal-section\"\n              onClick={handleNavbarClick}\n            >\n              Inventario de las muestras\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-design-section\" id=\"scroll-design-section\">\n        <div\n          className=\"add-reference-design-container\"\n          id=\"add-reference-design-container\"\n        >\n          <form className=\"design-form\">\n            <h2>Agregar muestra</h2>\n            <div className=\"border-design-div\"></div>\n            <p className=\"design-form__information\">\n              En este formulario puedes asociar insumos a una nueva muestra.\n              Digita la referencia, selecciona la talla, agrega una descripcion,\n              digita el color y la URL de la imágen. Luego, presiona el botón\n              'Añadir/Eliminar Insumos' para agregar o eliminar los insumos que\n              consume esta nueva muestra. Por ultimo, presiona el botón de\n              'Guardar'.\n            </p>\n            <input\n              className=\"add-reference-input\"\n              type=\"number\"\n              placeholder=\"Referencia\"\n              onChange={(e) => setAddReference(e.target.value)}\n            />\n            <div className=\"dropdownDesign\">\n              <FilterDropdown\n                options={sizesArray}\n                id=\"codigo\"\n                label=\"codigo\"\n                prompt=\"Seleccionar el codigo de talla\"\n                value={valueSizeSelect}\n                onChange={(val: any) => setValueSizeSelect(val)}\n              />\n            </div>\n            <input\n              className=\"add-description-input\"\n              type=\"text\"\n              placeholder=\"Descripción\"\n              onChange={(e) => setAddDescription(e.target.value)}\n            />\n            <input\n              className=\"add-color-input\"\n              type=\"text\"\n              placeholder=\"Color\"\n              onChange={(e) => setAddColor(e.target.value)}\n            />\n            <input\n              className=\"add-imagename-input\"\n              type=\"text\"\n              placeholder=\"URL de la imágen\"\n              onChange={(e) => setAddImageName(e.target.value)}\n            />\n            <input\n              className=\"value-per-unit-input\"\n              id=\"value-per-unit-input\"\n              type=\"number\"\n              placeholder=\"Valor de la unidad\"\n              onChange={(e) => setAddValuePerUnit(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              className=\"btn\"\n              id=\"insumoBTN\"\n              onClick={handlerAddSupplies}\n            >\n              Añadir/Eliminar Insumos\n            </button>\n            {addedInformationFromModal.length !== 0 && (\n              <button\n                type=\"button\"\n                className=\"btn\"\n                id=\"saveBTN\"\n                onClick={handlerSaveNewReference}\n              >\n                Guardar\n              </button>\n            )}\n          </form>\n          <div className=\"supplies-added-design\">\n            <h3>Insumos agregados</h3>\n            {addedInformationFromModal.length == 0 && (\n              <>\n                <div className=\"no-data-image-container\">\n                  <img\n                    src={noDataImage}\n                    alt=\"no-data\"\n                    className=\"no-data-image-container__img\"\n                  />\n                </div>\n                <p className=\"no-data-paragraph\">\n                  Aún no se han añadido insumos\n                </p>\n              </>\n            )}\n            {addedInformationFromModal.map((item: any) => {\n              return (\n                <div key={item.supplyCode} className=\"insumo-add\">\n                  <h2>Item agregado: </h2>\n                  Codigo: {item.supplyCode} - Cantidad: {item.supplyAmount}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div\n          className=\"inventory-design-modal-section\"\n          id=\"inventory-design-modal-section\"\n        >\n          <h3>Inventario de las muestras</h3>\n          <p>\n            En este apartado se despliega el inventario de las muestras. Si\n            quieres saber que telas e insumos consume una muestra en especifico,\n            presiona el botón 'Información de consumo'.\n          </p>\n          <ModalDesignInventory\n            closeModal={closeModal}\n            modalContent={state.modalInventoryContent}\n          />\n        </div>\n      </div>\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n        {state.imgCheckNumber === 1 && (\n          <img\n            className=\"modalWarehouseImg\"\n            src={completeImage}\n            alt=\"modalImg\"\n          />\n        )}\n        {state.imgCheckNumber === 2 && (\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\n        )}\n      </Modal>\n      <ModalAddSupplies\n        isOpen={modalAddSupplies}\n        // isOpen={true}\n        closeModal={closeModalAddSupplies}\n        suppliesFromDesign={(msg: any) => setAddedInformationFromModal(msg)}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(Design);\n","interface IState {\n  isModalOpen: boolean;\n  modalContent: string;\n  imgCheckNumber: number;\n}\n\ninterface IActions {\n  type: string;\n}\n\nexport const reducer = (state: IState, action: IActions) => {\n  if (action.type === 'ERROR_REGISTER') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: no ha digitado todos los campos',\n    };\n  }\n\n  if (action.type === 'ERROR_ROL') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: No ha escogido un ROL',\n    };\n  }\n\n  if (action.type === 'INVALID PASSWORD') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: Digite una contraseña mayor o igual a 8 caracteres',\n    };\n  }\n\n  if (action.type === 'PASSWORDS_DO_NOT_MATCH') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: las contraseñas NO coinciden',\n    };\n  }\n\n  if (action.type === 'USERNAME_EXIST') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 2,\n      modalContent: 'Error: el usuario ya existe',\n    };\n  }\n\n  if (action.type === 'SUCCESFUL_POST') {\n    return {\n      ...state,\n      isModalOpen: true,\n      imgCheckNumber: 1,\n      modalContent: '¡Genial! ¡Se ha registrado correctamente!',\n    };\n  }\n\n  if (action.type === 'CLOSE_MODAL') {\n    return {...state, isModalOpen: false};\n  }\n\n  return {...state, isModalOpen: false, modalContent: ''};\n};\n","import React, {useState, useReducer} from 'react';\nimport Axios from 'axios';\n\n//CSS:\nimport './style/Register.css';\n\n//MyModuls:\nimport {baseURL} from '../components/app/baseURL';\nimport Modal from '../components/Modal';\nimport completeImage from '../assets/complete.svg';\nimport errorImage from '../assets/error.svg';\n\n//Assets:\nimport registerImg from '../assets/register.svg';\n\n//Reducer:\n\nimport {reducer} from '../components/register/ReducerRegister';\n\ninterface IDefaultState {\n  isModalOpen: boolean;\n  modalContent: string;\n  imgCheckNumber: number;\n}\n\ninterface IUser {\n  username: string;\n  password: string;\n  idRol: string;\n}\n\nconst defaultState: IDefaultState = {\n  isModalOpen: false,\n  modalContent: '',\n  imgCheckNumber: 0,\n};\n\nconst Register = () => {\n  const [username, setUsername] = useState<string>('');\n  const [passwordForm, setPasswordForm] = useState<string>('');\n  const [validatePasswordForm, setValidatePasswordForm] = useState<string>('');\n  const [idRol, setIdRol] = useState<string>('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const postRegisterURL: string = baseURL + 'api/register';\n\n  //DOM:\n  const usernameInput = document.getElementById('username') as HTMLInputElement;\n  const passwordInput = document.getElementById('password') as HTMLInputElement;\n  const validatePasswordInput = document.getElementById(\n    'validPassword'\n  ) as HTMLInputElement;\n  const idRolInput = document.getElementById('idRol') as HTMLSelectElement;\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    //VALIDATION THE DATA OF THE FORM:\n    if (username && passwordForm && validatePasswordForm && idRol) {\n      if (idRol !== '0') {\n        if (passwordForm.length >= 7) {\n          if (passwordForm === validatePasswordForm) {\n            const newUser: IUser = {username, password: passwordForm, idRol};\n            Axios.post(postRegisterURL, {\n              user: newUser,\n            })\n              .then((response) => {\n                const validationUsername: string = response.data;\n                //VALIDATION IF THE USER EXIST OR NOT:\n                if (validationUsername === '1') {\n                  //THE USERNAME EXIST\n                  dispatch({type: 'USERNAME_EXIST'});\n                } else if (validationUsername === '2') {\n                  //THE USERNAME DOESN'T EXIST\n                  setUsername('');\n                  setPasswordForm('');\n                  setValidatePasswordForm('');\n                  setIdRol('');\n                  usernameInput.value = '';\n                  passwordInput.value = '';\n                  validatePasswordInput.value = '';\n                  idRolInput.value = '0';\n                  dispatch({type: 'SUCCESFUL_POST'});\n                }\n              })\n          } else {\n            dispatch({type: 'PASSWORDS_DO_NOT_MATCH'});\n          }\n        } else {\n          dispatch({type: 'INVALID PASSWORD'});\n        }\n      } else {\n        dispatch({type: 'ERROR_ROL'});\n      }\n    } else {\n      dispatch({type: 'ERROR_REGISTER'});\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({type: 'CLOSE_MODAL'});\n  };\n\n  return (\n    <div className=\"general-register-container\">\n      <form className=\"register-form\">\n        <h2>Registrar usuario</h2>\n        <div className=\"border-div\"></div>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Usuario\"\n          autoComplete=\"off\"\n          id=\"username\"\n          onChange={(e: any) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Contraseña\"\n          autoComplete=\"off\"\n          id=\"password\"\n          onChange={(e: any) => setPasswordForm(e.target.value)}\n        />\n        <p className=\"passwordInfo\">\n          Ingrese una contraseña de al menos 8 caracteres\n        </p>\n        <input\n          type=\"password\"\n          name=\"validPassword\"\n          id=\"validPassword\"\n          placeholder=\"Contraseña nuevamente\"\n          autoComplete=\"off\"\n          onChange={(e: any) => setValidatePasswordForm(e.target.value)}\n        />\n        <select id=\"idRol\" onChange={(e: any) => setIdRol(e.target.value)}>\n          <option value=\"0\">Seleccionar rol</option>\n          <option value=\"1\">Administrador</option>\n          <option value=\"2\">Diseñador</option>\n          <option value=\"3\">Encargado Bodega</option>\n          <option value=\"4\">Cortador</option>\n          <option value=\"5\">Vendedor</option>\n        </select>\n        <button onClick={handleSubmit} className=\"btn\">\n          Registrarse\n        </button>\n        {state.isModalOpen && (\n          <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n            <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n            {state.imgCheckNumber === 1 && (\n              <img\n                className=\"modalWarehouseImg\"\n                src={completeImage}\n                alt=\"modalImg\"\n              />\n            )}\n            {state.imgCheckNumber === 2 && (\n              <img\n                className=\"modalWarehouseImg\"\n                src={errorImage}\n                alt=\"modalImg\"\n              />\n            )}\n          </Modal>\n        )}\n      </form>\n      <div className=\"img-register-container\">\n        <img src={registerImg} alt=\"register\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Axios from 'axios';\nimport {baseURL} from '../components/app/baseURL';\n\nconst Logout = () => {\n  const logoutAPIURL: string = baseURL + 'api/logout';\n\n  useEffect(() => {\n    Axios.post(logoutAPIURL)\n      .then(() => {\n        window.location.href = '/login';\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return <>{/* <h1>Loading...</h1> */}</>;\n};\n\nexport default withRouter(Logout);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./style/ModalWarehouseProductsReq.css\";\nimport errorIMG from \"../../assets/error.svg\";\n\nconst IDWarehouseProductsReq: any = document.getElementById(\n  \"warehouseProductsReq\"\n);\n\nconst ModalWarehouseProductsReq = (props: any) => {\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const handlerReject = () => {\n    props.handlerRefuse(props.index);\n    props.closeModal();\n  };\n\n  const handlerPartialDelivery = () => {\n    props.handlerPartialDelivery(props.index);\n    props.closeModal();\n  };\n\n  const handlerApprove = () => {\n    props.handlerAccept(props.index);\n    props.closeModal();\n  };\n\n  if (!props.isOpen) return null;\n  if (props.checkReqNumber === 1) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalWarehouseProductsComponent\">\n        <div className=\"ModalWarehouseProductsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalWarehouseProductsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\n            Lotes necesarios para cumplir con el pedido\n          </h2>\n          <p>First in, first out (FIFO)</p>\n          {props.infoReq.map((info: any) => {\n            return (\n              <div className=\"successModalCard\">\n                <h4 className=\"successModalCard__h4\">\n                  Información del producto\n                </h4>\n                <div className=\"successModalCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"successModalCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"successModalCard__order\">\n                  # de orden: {info.numero_de_orden}\n                </div>\n                <div className=\"successModalCard__amount\">\n                  Cantidad: {info.cantidad}\n                </div>\n                <div className=\"successModalCard__date\">\n                  Fecha: {info.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonssuccessModalContiner\">\n            <button\n              className=\"btn buttonsSuccessModalContiner__approve\"\n              onClick={handlerApprove}\n            >\n              Aceptar\n            </button>\n            <button\n              className=\"btn buttonsSuccessModalContiner__reject\"\n              onClick={handlerReject}\n            >\n              Rechazar\n            </button>\n          </div>\n        </div>\n      </div>,\n      IDWarehouseProductsReq\n    );\n  } else if (props.checkReqNumber === 2) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalWarehouseProductsComponent\">\n        <div className=\"ModalWarehouseProductsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalWarehouseProductsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\n            Cantidad insuficiente\n          </h2>\n          <p>\n            No se puede aceptar esta petición debido a que no hay cantidad\n            suficiente del siguiente producto.\n          </p>\n          {props.infoReq.map((info: any) => {\n            return (\n              <div className=\"successModalCard\">\n                <h4 className=\"successModalCard__h4\">\n                  Información del producto\n                </h4>\n                <div className=\"successModalCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"successModalCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"successModalCard__order\">\n                  # de orden: {info.numero_de_orden}\n                </div>\n                <div className=\"successModalCard__amount\">\n                  Cantidad: {info.cantidad}\n                </div>\n                <div className=\"successModalCard__date\">\n                  Fecha: {info.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonRejectContainer\">\n            <button\n              className=\"btn buttonRejectContainer__Reject\"\n              onClick={handlerPartialDelivery}\n            >\n              PET PARCIAL\n            </button>\n            <button\n              className=\"btn buttonRejectContainer__Reject\"\n              onClick={handlerReject}\n            >\n              Rechazar petición\n            </button>\n          </div>\n        </div>\n      </div>,\n      IDWarehouseProductsReq\n    );\n  } else {\n    return ReactDOM.createPortal(\n      <div className=\"ModalWarehouseProductsComponent\">\n        <div className=\"ModalWarehouseProductsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalWarehouseProductsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalWarehouseProductsComponent__h2\">\n            Aviso: No hay existencias.\n          </h2>\n          <div className=\"imgErrorWarehouseProductContainer\">\n            <img\n              src={errorIMG}\n              alt=\"error image\"\n              className=\"imgErrorWarehouseProductContainer__img\"\n            />\n          </div>\n          <div className=\"buttonssuccessModalContiner\">\n            <button\n              className=\"btn buttonsSuccessModalContiner__reject\"\n              onClick={handlerReject}\n            >\n              Rechazar Petición\n            </button>\n          </div>\n        </div>\n      </div>,\n      IDWarehouseProductsReq\n    );\n  }\n};\n\nexport default ModalWarehouseProductsReq;\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\n// REDUCER\nimport { reducer } from \"../components/dressmaking/ReducerDressMaking\";\n// import './style/DressMaking.css';\n// import '../components/dressmaking/style/buttonStyle.css';\nimport { baseURL } from \"../components/app/baseURL\";\nimport notFoundImage from \"../assets/Not Found.svg\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport { StringLiteralLike, updateSourceFile } from \"typescript\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport \"./style/WareHouseProducts.css\";\nimport ModalWarehouseProductsReq from \"../components/warehouseProducts/ModalWarehouseProductsReq\";\n\nconst WareHouseProducts = () => {\n  //INTERFACES\n  interface IWareHouseProducts {\n    numero_lote: string;\n    referencia: string;\n    numero_de_orden: string;\n    cantidad: string;\n    timestamp: string;\n    restante?: string;\n    faltante?: string;\n  }\n\n  interface IShopRequests {\n    numero_de_orden: number;\n    referencia: number;\n    cantidad: number;\n    idTienda: number;\n    timestamp: string;\n    nombre_tienda: string;\n    direccion: string;\n  }\n\n  // STATES STATEMENTS\n  const [wareHouseProducts, setWareHouseProducts] = useState<\n    IWareHouseProducts[]\n  >([]);\n  const [shopRequestInfo, setShopRequestInfo] = useState<any>([]);\n  const [actualShopRequests, setActualShopRequest] = useState<IShopRequests[]>(\n    []\n  );\n  const [reference, setReference] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [isOpenModalReq, setIsOpenModalReq] = useState<boolean>(false);\n  const [checkReqNumber, setCheckReqNumber] = useState<number>(0);\n  const [indexModal, setIndexModal] = useState<number>(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [toggleState, setToggleState] = useState(1);\n\n  const dbWareHouseProducts: string = baseURL + \"api/getwarehouseproducts\";\n  const dbShopsRequestProducts: string = baseURL + \"api/shoprequestproducts\";\n  const dbAcceptShopRequest: string = baseURL + \"api/acceptshoprequest\";\n  const dbActualShopsRequests: string = baseURL + \"api/getactualshoprequests\";\n  const dbSaveDecision: string = baseURL + \"api/savewarehouseproductsdecision\";\n  const dbPartialDelivery: string = baseURL + \"api/updatepartialdelivery\";\n\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  useEffect(() => {\n    Axios.get(dbWareHouseProducts).then((response: AxiosResponse) => {\n      setWareHouseProducts(response.data);\n    });\n\n    Axios.get(dbActualShopsRequests).then((response: AxiosResponse) => {\n      setActualShopRequest(response.data);\n    });\n  }, []);\n\n  const handlerShowInfo = (index: number) => {\n    Axios.post(dbShopsRequestProducts, {\n      reference: actualShopRequests[index].referencia,\n      amount: actualShopRequests[index].cantidad,\n    }).then((response: AxiosResponse) => {\n      if (response.data[response.data.length - 1].faltante) {\n        setShopRequestInfo(response.data);\n        setCheckReqNumber(2);\n        setIndexModal(index);\n        setIsOpenModalReq(true);\n      } else if (response.data === \"NO EXISTE\") {\n        setCheckReqNumber(3);\n        setIndexModal(index);\n        setIsOpenModalReq(true);\n      } else {\n        setShopRequestInfo(response.data);\n        setCheckReqNumber(1);\n        setIndexModal(index);\n        setIsOpenModalReq(true);\n      }\n    });\n  };\n\n  const handlerApprove = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSaveDecision, {\n      ...actualShopRequests[index],\n      neededStock: shopRequestInfo,\n      idDecision: 1,\n    }).then((response: AxiosResponse): void => {\n    });\n    let filterResult = actualShopRequests.filter(\n      (item: IShopRequests) =>\n        item.numero_de_orden != actualShopRequests[index].numero_de_orden\n    );\n    setActualShopRequest(filterResult);\n  };\n\n  const handlerRefuse = (payload: any) => {\n    let index = payload;\n    Axios.post(dbSaveDecision, {\n      ...actualShopRequests[index],\n      idDecision: 0,\n    }).then((response: AxiosResponse): void => {\n      if (response.data === \"SUCCESSFUL_SAVING\") {\n        let filterResult = actualShopRequests.filter(\n          (item: IShopRequests) =>\n            item.numero_de_orden !== actualShopRequests[index].numero_de_orden\n        );\n        setActualShopRequest(filterResult);\n      } \n    });\n\n  };\n\n  const handlerPartialDelivery = (index: number) => {\n    Axios.post(dbPartialDelivery, {\n      ...actualShopRequests[index],\n      neededStock: shopRequestInfo,\n      idDecision: 1,\n    }).then((response: AxiosResponse) => {\n    });\n  };\n\n  const closeModal = () => {\n    setIsOpenModalReq(false);\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\n      \"scroll-warehouseproducts\"\n    ) as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  const handlerSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  return (\n    <div className=\"general-container-warehouseproducts\">\n      <div className=\"navbar-warehouseproducts\">\n        <h2 className=\"navbar-warehouseproducts__h2\">Bodega Productos</h2>\n        <div className=\"navbar-warehouseproducts-otpions\">\n          <div\n            className={\n              toggleState === 1\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\n                : \"tabs-warehouseproducts\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a\n              href=\"#products-warehouseproducts-section\"\n              onClick={handleNavbarClick}\n            >\n              Productos terminados\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"tabs-warehouseproducts active-tabs-warehouseproducts\"\n                : \"tabs-warehouseproducts\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#shops-request-warehouseproducts-section\"\n              onClick={handleNavbarClick}\n            >\n              Peticiones\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"scroll-warehouseproducts\" id=\"scroll-warehouseproducts\">\n        <div\n          className=\"products-warehouseproducts-section\"\n          id=\"products-warehouseproducts-section\"\n        >\n          <h3 className=\"products-finished-warehouseproducts-section__h3\">\n            Productos terminados\n          </h3>\n          <p className=\"products-finished-warehouseproducts-section__p\">\n            En este apartado se muestra el inventario de los productos\n            terminados listos para ser enviado a las tiendas.\n          </p>\n          <div className=\"container_table-warehouseproducts\">\n            <div className=\"table_title-warehouseproducts \">Información</div>\n            <div className=\"search-warehouseproducts-container\">\n              <i className=\"gg-search\"></i>\n              <input\n                type=\"search\"\n                placeholder=\"Buscar por referencia...\"\n                className=\"search-filter-warehouseproducts\"\n                onChange={(e: any) => handlerSearch(e.target.value)}\n              ></input>\n            </div>\n            <div className=\"sample-image-warehouseproducts-container\">\n              <div className=\"table_header-warehouseproducts-sample\">\n                Producto\n              </div>\n              <div className=\"table_header-warehouseproducts-img\">Imagen</div>\n            </div>\n            <div className=\"scroll-modal-warehouseproducts\">\n              {wareHouseProducts\n                .filter((val: any) => {\n                  iterator += 1;\n                  if (searchTerm === \"\") {\n                    return val;\n                  } else if (\n                    val.referencia\n                      .toString()\n                      .slice(0, searchTerm.length)\n                      .includes(searchTerm)\n                  ) {\n                    enableEmpty = false;\n                    return val;\n                  } else if (iterator == wareHouseProducts.length && enableEmpty == true) {\n                    showEmptySearch = true;\n                  }\n                })\n                .map((props: any) => {\n                  return (\n                    <div\n                      className=\"items_container-warehouseproducts\"\n                      key={props.referencia}\n                    >\n                      <div className=\"items-information-wproducts-container\">\n                        <div className=\"items-information-wp-lot\">\n                          Numero de lote: {props.numero_lote}\n                        </div>\n                        <div className=\"items-information-wp-ref\">\n                          Referencia: {props.referencia}\n                        </div>\n                        <div className=\"items-information-wp-order\">\n                          Numero de orden: {props.numero_de_orden}\n                        </div>\n                        <div className=\"items-information-amount\">\n                          Cantidad: {props.cantidad}\n                        </div>\n                        <div className=\"items-information-timestamp\">\n                          Fecha:{\" \"}\n                          {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                        </div>\n                      </div>\n                      <div className=\"table_item-warehouseproduct\">\n                        <img\n                          className=\"table_img-warehouseproduct\"\n                          src={props.nombre_imagen}\n                        />\n                      </div>\n                    </div>\n                  );\n                })}\n              {showEmptySearch && (\n                <img\n                  className=\"notfoundImg-warehouseproducts\"\n                  src={notFoundImage}\n                  alt=\"Not Found\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"shops-request-warehouseproducts-section\"\n          id=\"shops-request-warehouseproducts-section\"\n        >\n          <h3 className=\"shops-request-warehouseproducts-section__h3\">\n            Peticiones\n          </h3>\n          <p className=\"shops-request-warehouseproducts-section__p\">\n            En este apartado se encuentran la peticiones realizadas por las\n            tiendas que necesitan stock.\n          </p>\n          {actualShopRequests.length == 0 && (\n            <>\n              <div className=\"no-data-image-warehouseproducts-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-warehouseproducts-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-warehouseproducts-paragraph\">\n                Aún no hay peticiones\n              </p>\n            </>\n          )}\n          {actualShopRequests.length !== 0 && (\n            <div className=\"shopsRequestContainer\">\n              {actualShopRequests.map((shop, index) => {\n                return (\n                  <div className=\"shopRequestCard\">\n                    <h4 className=\"shopRequestCard__h4\">\n                      Información de la petición\n                    </h4>\n                    <div className=\"shopRequestCard__order\">\n                      # de orden: {shop.numero_de_orden}\n                    </div>\n                    <div className=\"shopRequestCard__reference\">\n                      Referencia: {shop.referencia}\n                    </div>\n                    <div className=\"shopRequestCard__amount\">\n                      Cantidad: {shop.cantidad}\n                    </div>\n                    <div className=\"shopRequestCard__shop\">\n                      Tienda: {shop.nombre_tienda}\n                    </div>\n                    <div className=\"shopRequestCard_date\">\n                      Fecha: {shop.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <div className=\"shopRequestCard__address\">\n                      Dirección: {shop.direccion ? shop.direccion : \"0\"}\n                    </div>\n                    <button\n                      className=\"btn shopRequestCard__deploy\"\n                      key={index}\n                      data-index={index}\n                      onClick={() => handlerShowInfo(index)}\n                    >\n                      Desplegar requerimientos\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n      <ModalWarehouseProductsReq\n        isOpen={isOpenModalReq}\n        closeModal={closeModal}\n        infoReq={shopRequestInfo}\n        checkReqNumber={checkReqNumber}\n        handlerRefuse={handlerRefuse}\n        handlerAccept={handlerApprove}\n        handlerPartialDelivery={handlerPartialDelivery}\n        index={indexModal}\n      />\n    </div>\n  );\n};\n\nexport default WareHouseProducts;\n","import React, { useState } from \"react\";\n\nimport notFoundImage from \"../../assets/Not Found.svg\";\nimport \"./style/InfoShopsInventory.css\";\n\nconst InfoShopsInventory = (props: any) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  let iterator = 0;\n  let enableEmpty = true;\n  let showEmptySearch = false;\n\n  const handleSearch = (e: any) => {\n    setSearchTerm(e);\n    iterator = 0;\n    enableEmpty = true;\n    showEmptySearch = false;\n  };\n\n  const handlerReceived = (index: number) => {\n    props.receivedFunction(index);\n  };\n\n  if (props.checkNumber === 1) {\n    return (\n      <div className=\"container_table-shops\">\n        <div className=\"table_title-shops\">Información</div>\n        <div className=\"search-shops-container\">\n          <i className=\"gg-search\"></i>\n          <input\n            type=\"search\"\n            placeholder=\"Buscar por referencia...\"\n            className=\"search-filter-shops\"\n            onChange={(e: any) => handleSearch(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"sample-image-shops-container\">\n          <div className=\"table_header-shops-sample\">Producto</div>\n          <div className=\"table_header-shops-img\">Imagen</div>\n        </div>\n        <div className=\"scroll-modal-shops\">\n          {props.arrayInformation\n            .filter((val: any) => {\n              iterator += 1;\n              if (searchTerm === \"\") {\n                return val;\n              } else if (\n                val.referencia\n                  .toString()\n                  .slice(0, searchTerm.length)\n                  .includes(searchTerm)\n              ) {\n                enableEmpty = false;\n                return val;\n              } else if (\n                iterator == props.arrayInformation.length &&\n                enableEmpty == true\n              ) {\n                showEmptySearch = true;\n              }\n            })\n            .map((props: any, index: any) => {\n              return (\n                <div className=\"items_container-shops\" key={index}>\n                  <div className=\"items-information-shops-container\">\n                    <div className=\"items-information-shops__lot\">\n                      Numero de lote: {props.numero_lote}\n                    </div>\n                    <div className=\"items-information-shops__ref\">\n                      Referencia: {props.referencia}\n                    </div>\n                    <div className=\"items-information-shops__order\">\n                      Numero de orden: {props.numero_de_orden}\n                    </div>\n                    <div className=\"items-information-shops__shop\">\n                      Tienda destino: {props.nombre_tienda}\n                    </div>\n                    <div className=\"items-information-shops__amount\">\n                      Cantidad: {props.cantidad}\n                    </div>\n                    <div className=\"items-information-shops__timestamp\">\n                      Fecha: {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <div className=\"items-information-shops-button-container\">\n                      <button\n                        className=\"btn items-information-shops__button\"\n                        onClick={() => handlerReceived(index)}\n                      >\n                        Confirmar Recibido\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"table_item-shops\">\n                    <img\n                      className=\"table_img-shops\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          {showEmptySearch && (\n            <img\n              className=\"notfoundImg-shops\"\n              src={notFoundImage}\n              alt=\"Not Found\"\n            />\n          )}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container_table-shops\">\n        <div className=\"table_title-shops\">Información</div>\n        <div className=\"search-shops-container\">\n          <i className=\"gg-search\"></i>\n          <input\n            type=\"search\"\n            placeholder=\"Buscar por referencia...\"\n            className=\"search-filter-shops\"\n            onChange={(e: any) => handleSearch(e.target.value)}\n          ></input>\n        </div>\n        <div className=\"sample-image-shops-container\">\n          <div className=\"table_header-shops-sample\">Producto</div>\n          <div className=\"table_header-shops-img\">Imagen</div>\n        </div>\n        <div className=\"scroll-modal-shops\">\n          {props.arrayInformation\n            .filter((val: any) => {\n              iterator += 1;\n              if (searchTerm === \"\") {\n                return val;\n              } else if (\n                val.referencia\n                  .toString()\n                  .slice(0, searchTerm.length)\n                  .includes(searchTerm)\n              ) {\n                enableEmpty = false;\n                return val;\n              } else if (\n                iterator == props.arrayInformation.length &&\n                enableEmpty == true\n              ) {\n                showEmptySearch = true;\n              }\n            })\n            .map((props: any, index: any) => {\n              return (\n                <div className=\"items_container-shops\" key={index}>\n                  <div className=\"items-information-shops-container\">\n                    <div className=\"items-information-shops__lot\">\n                      Numero de lote: {props.numero_lote}\n                    </div>\n                    <div className=\"items-information-shops__ref\">\n                      Referencia: {props.referencia}\n                    </div>\n                    <div className=\"items-information-shops__order\">\n                      Numero de orden: {props.numero_de_orden}\n                    </div>\n                    <div className=\"items-information-shops__shop\">\n                      Tienda: {props.nombre_tienda}\n                    </div>\n                    <div className=\"items-information-shops__amount\">\n                      Cantidad: {props.cantidad}\n                    </div>\n                    <div className=\"items-information-shops__timestamp\">\n                      Fecha: {props.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                  </div>\n                  <div className=\"table_item-shops\">\n                    <img\n                      className=\"table_img-shops\"\n                      src={props.nombre_imagen}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          {showEmptySearch && (\n            <img\n              className=\"notfoundImg-shops\"\n              src={notFoundImage}\n              alt=\"Not Found\"\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default InfoShopsInventory;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Axios from \"axios\";\n\nimport \"./style/ModalShopsReq.css\";\nimport errorIMG from \"../../assets/error.svg\";\nimport { baseURL } from \"../app/baseURL\";\n\nconst modalShopsReqId: any = document.getElementById(\"ModalShopsReq\");\n\nconst ModalShopsReq = (props: any) => {\n  const url = baseURL + \"api/modalrequiredstock\";\n  const requiredStock = props.requiredStock;\n  const [requiredStockOrdered, setRequiredStockOrdered] = useState<any>([]);\n\n  const handleClose = () => {\n    props.closeModal();\n  };\n\n  const handleDecision = (decisionNumber: number) => {\n    props.handleDecision(decisionNumber);\n    props.closeModal();\n  };\n\n  useEffect(() => {\n    if (props.checkReqNumber !== 3) {\n      Axios.post(url, requiredStock).then((response: any) => {\n        setRequiredStockOrdered(response.data);\n      });\n    }\n  }, []);\n\n  if (!props.isOpen) return null;\n\n  if (props.checkReqNumber === 1) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalShopsComponent\">\n        <div className=\"ModalShopsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalShopsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalShopsComponent__h2\">\n            Lotes necesarios para cumplir con el pedido\n          </h2>\n          <p>First in, first out (FIFO)</p>\n          {requiredStockOrdered.map((info: any) => {\n            return (\n              <div className=\"ModalShopsCard\">\n                <h4 className=\"ModalShopsCard__h4\">Información del producto</h4>\n                <div className=\"ModalShopsCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"ModalShopsCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"ModalShopsCard__amount\">\n                  Cantidad: {info.cantidadTotal}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonsModalShopsContainer\">\n            <button\n              className=\"btn buttonsModalShopsContainer__approve\"\n              onClick={() => handleDecision(1)}\n            >\n              Aceptar\n            </button>\n            <button\n              className=\"btn buttonsModalShopsContainer__reject\"\n              onClick={() => handleDecision(0)}\n            >\n              Rechazar\n            </button>\n          </div>\n        </div>\n      </div>,\n      modalShopsReqId\n    );\n  } else if (props.checkReqNumber === 2) {\n    return ReactDOM.createPortal(\n      <div className=\"ModalShopsComponent\">\n        <div className=\"ModalShopsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalShopsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalShopsComponent__h2\">\n            ATENCIÓN: No hay el stock exacto\n          </h2>\n          <p>\n            Para cumplir con este pedido faltarían {props.stockMissingAmount}{\" \"}\n            productos. Si así lo deseas pueden pedir la cantidad disponible:{\" \"}\n            {props.stockAvailableAmount} productos.\n          </p>\n          {requiredStockOrdered.map((info: any) => {\n            return (\n              <div className=\"ModalShopsCard\">\n                <h4 className=\"ModalShopsCard__h4\">Información del producto</h4>\n                <div className=\"ModalShopsCard__lot\">\n                  Numero lote: {info.numero_lote}\n                </div>\n                <div className=\"ModalShopsCard__reference\">\n                  Referencia: {info.referencia}\n                </div>\n                <div className=\"ModalShopsCard__amount\">\n                  Cantidad: {info.cantidadTotal}\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"buttonsModalShopsContainer\">\n            <button\n              className=\"btn buttonsModalShopsContainer__approve\"\n              onClick={() => handleDecision(2)}\n            >\n              Aceptar\n            </button>\n            <button\n              className=\"btn buttonsModalShopsContainer__reject\"\n              onClick={() => handleDecision(0)}\n            >\n              Rechazar\n            </button>\n          </div>\n        </div>\n      </div>,\n      modalShopsReqId\n    );\n  } else {\n    return ReactDOM.createPortal(\n      <div className=\"ModalShopsComponent\">\n        <div className=\"ModalShopsComponent__container\">\n          <button\n            onClick={handleClose}\n            className=\"ModalShopsComponent__close-button\"\n          >\n            X\n          </button>\n          <h2 className=\"ModalShopsComponent__h2\">\n            No hay existencias de esta referencia en esta tienda\n          </h2>\n          <div className=\"imgErrorShopsContainer\">\n            <img\n              src={errorIMG}\n              alt=\"error image\"\n              className=\"imgErrorShopsContainer__img\"\n            />\n          </div>\n          <div className=\"buttonsRejectShopsModalContainer\">\n            <button\n              className=\"btn buttonsRejectShopsModalContainer__reject\"\n              onClick={() => handleDecision(0)}\n            >\n              Rechazar Petición\n            </button>\n          </div>\n        </div>\n      </div>,\n      modalShopsReqId\n    );\n  }\n};\n\nexport default ModalShopsReq;\n","import React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport SuccessfulModalDressMaking from \"../components/dressmaking/SuccessfulModalDressMaking\";\n// REDUCER\nimport \"./style/Shops.css\";\nimport { baseURL } from \"../components/app/baseURL\";\nimport FilterDropdown from \"../components/FilterDropdown\";\nimport Modal from \"../components/Modal\";\nimport completeImage from \"../assets/complete.svg\";\nimport errorImage from \"../assets/error.svg\";\nimport noDataImage from \"../assets/no-data.svg\";\nimport InfoShopsInventory from \"../components/shops/InfoShopsInventory\";\nimport ModalShopsReq from \"../components/shops/ModalShopsReq\";\nimport { StringLiteralLike, updateSourceFile } from \"typescript\";\n\nconst reducer = (state: any, action: any) => {\n  if (action.type === \"SUCCESSFUL_REQUEST\") {\n    return {\n      ...state,\n      modalContent: \"Petición realizada\",\n      imgCheckNumber: 1,\n      isModalOpen: true,\n    };\n  }\n  if (action.type === \"WRONG_INPUT\") {\n    return {\n      ...state,\n      modalContent: \"Error: Digite los campos bien\",\n      isModalOpen: true,\n      imgCheckNumber: 2,\n    };\n  }\n  if (action.type === \"CLOSE_MODAL\") {\n    return {\n      ...state,\n      isModalOpen: false,\n      imgCheckNumber: 0,\n      modalContent: \"\",\n    };\n  }\n  return {\n    ...state,\n    isModalOpen: false,\n    modalContent: \"\",\n    imgCheckNumber: 0,\n  };\n};\n\nconst defaultState: any = {\n  isModalOpen: false,\n  modalContent: \"\",\n  imgCheckNumber: 0,\n};\n\nconst Shops = () => {\n  interface IReference {\n    referencia: number;\n    id_talla: number;\n    descripcion: string;\n    color: string;\n    nombre_imagen: string;\n    codigoycantidad: string;\n  }\n  interface IShops {\n    idTienda: number;\n    nombre_tienda: string;\n    direccion: string;\n  }\n\n  const [references, setReferences] = useState<IReference[]>([]);\n  const [shops, setShops] = useState<IShops[]>([]);\n  const [shopsOrigin, setShopsOrigin] = useState<IShops[]>([]);\n  const [shopsDestination, setShopsDestination] = useState<IShops[]>([]);\n  const [valueReferenceSelect, setValueReferenceSelect] = useState<any>(null);\n  const [valueShopSelect, setValueShopSelect] = useState<any>(null);\n  const [amount, setAmount] = useState<string>(\"\");\n  const [selectedReference, setSelectedReference] = useState<string>(\"\");\n  const [selectedShop, setSelectedShop] = useState<string>(\"\");\n  const [approvedRequests, setApprovedRequests] = useState<any>([]);\n  const [numberInput, setNumberInput] = useState<string>(\"\");\n  const [infoDeliveryState, setInfoDeliveryState] = useState<any>([]);\n  const [infoActualInventory, setInfoActualInventory] = useState<any>([]);\n  const [requiredStock, setRequiredStock] = useState<any>([]);\n  const [infoRequestsBetweenShops, setInfoRequestsBetweenShops] = useState<any>(\n    []\n  );\n  const [isShopOriginSelected, setIsShopOriginSelected] =\n    useState<boolean>(false);\n  const [checkReqNumber, setCheckReqNumber] = useState<number>(0);\n  const [indexModal, setIndexModal] = useState<number>(0);\n  const [isOpenModalReq, setIsOpenModalReq] = useState<boolean>(false);\n  const [stockMissingAmount, setStockMissingAmount] = useState<number>(0);\n  const [stockAvailableAmount, setStockAvailableAmount] = useState<number>(0);\n  const [auxiliar, setAuxiliar] = useState<any>([]);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const refInputBetweenShops: any = useRef(null);\n  const refInputReqToWarehouseProducts: any = useRef(null);\n  const [switchUseEffect, setSwitchUseEffect] = useState<boolean>(false);\n\n  // REQUEST BETWEEN SHOPS useStates\n  const [value_reference_request, set_value_reference_request] =\n    useState<any>(null);\n  const [amount_request, set_amount_request] = useState<string>(\"\");\n  const [value_origin_shop, set_value_origin_shop] = useState<any>(null);\n  const [value_destination_shop, set_value_destination_shop] =\n    useState<any>(null);\n  const [toggleState, setToggleState] = useState(1);\n  // DATABASE URLS\n  const dbReferencesURL: string = baseURL + \"api/references\";\n  const dbShopsInfoURL: string = baseURL + \"api/shopsinformation\";\n  const dbProductsRequestURL: string =\n    baseURL + \"api/shopwarehouseproductsrequest\";\n  const dbDeliveryState: string = baseURL + \"api/deliverystate\";\n  const dbActualInventory: string = baseURL + \"api/getactualinventory\";\n  const dbActualRequestsBetweenShops: string =\n    baseURL + \"api/getactualrequestbetweenshops\";\n  const dbUpdateReceivedState: string = baseURL + \"api/updatereceivedstate\";\n  const dbRequestBetweenShops: string = baseURL + \"api/requestsbetweenshops\";\n  const dbDecisionBetweenShops: string = baseURL + \"api/decisionbetweenshops\";\n  const dbSaveNewShopRequest: string = baseURL + \"api/save_newshop_request\";\n\n  useEffect(() => {\n    Axios.get(dbReferencesURL).then((response: AxiosResponse) => {\n      setReferences(response.data);\n    });\n\n    Axios.get(dbShopsInfoURL).then((response: AxiosResponse) => {\n      setShops(response.data);\n      setShopsOrigin(response.data);\n      setShopsDestination(response.data);\n    });\n\n    Axios.get(dbActualInventory).then((response: AxiosResponse) => {\n      setInfoActualInventory(response.data);\n    });\n\n    Axios.get(dbDeliveryState).then((response: AxiosResponse) => {\n      setInfoDeliveryState(response.data);\n    });\n\n    Axios.get(dbActualRequestsBetweenShops).then((response: AxiosResponse) => {\n      setInfoRequestsBetweenShops(response.data);\n    });\n\n    const triggerListeners = (\n      class1: string,\n      class2: string,\n      setNumber: number\n    ) => {\n      var selectedOption: any = document.querySelector(class1);\n      var options: any = document.querySelectorAll(class2);\n\n      selectedOption.addEventListener(\"click\", () => {\n        selectedOption.parentElement.classList.toggle(\"active\");\n      });\n\n      options.forEach((option: any) => {\n        option.addEventListener(\"click\", () => {\n          setTimeout(() => {\n            selectedOption.innerHTML = option.innerHTML;\n            // SET CURRENT REFERENCE VALUE\n            // 0 ==> Reference\n            if (setNumber === 0) {\n              setSelectedReference(option.innerHTML);\n              // 1 ==> Shop id\n            } else if (setNumber === 1) {\n              setSelectedShop(option.getAttribute(\"data-id\"));\n            }\n          }, 300);\n\n          selectedOption.parentElement.classList.remove(\"active\");\n        });\n      });\n    };\n  }, [switchUseEffect]);\n\n  // GENERAL DATABASE CHECK\n  const check_existing_value = async (check_case: number, payload: string) => {\n    try {\n      const response = await Axios.post(baseURL + \"api/check_existing_value\", {\n        check_case,\n        payload,\n      });\n      return response.data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // CHECK THE TYPE DUE TO THE SEARCH DROPDOWN\n  const check_type_case = (case_parameter: any, case_attribute: string) => {\n    let result = \"\";\n    if (typeof case_parameter === \"object\" && case_parameter !== null) {\n      result = case_parameter[case_attribute].toString();\n      return result;\n    } else if (typeof case_parameter === \"string\" && case_parameter !== null) {\n      result = case_parameter;\n      return result;\n    }\n    return result;\n  };\n\n  const productsRequest = async () => {\n    let valueReferenceSelected: string = check_type_case(\n      valueReferenceSelect,\n      \"referencia\"\n    );\n    let valueShopSelected: string = check_type_case(\n      valueShopSelect,\n      \"idTienda\"\n    );\n    let isReferenceExist: boolean = false;\n    let isShopExist: boolean = false;\n\n    const correctAmount = parseFloat(amount);\n\n    // CHECK IN DATABASE ==> return boolean\n    isReferenceExist = await check_existing_value(0, valueReferenceSelected); // O: referencia\n    isShopExist = await check_existing_value(1, valueShopSelected); // 1: idTienda\n\n    let enableInput = valueShopSelected !== \"\";\n    let enableInput2 = valueReferenceSelected !== \"\";\n    if (\n      Number.isInteger(correctAmount) &&\n      correctAmount > 0 &&\n      enableInput &&\n      enableInput2 &&\n      isShopExist &&\n      isReferenceExist\n    ) {\n      Axios.post(dbProductsRequestURL, {\n        actualAmount: amount,\n        referenceSelection: valueReferenceSelected,\n        idShop: valueShopSelected,\n      }).then((response: AxiosResponse): void => {\n        dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n        setValueReferenceSelect(null);\n        setValueShopSelect(null);\n        refInputReqToWarehouseProducts.current.value = \"\";\n      });\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const closeModal = () => {\n    setIsOpenModalReq(false);\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  const handlerReceived = (index: number) => {\n    Axios.post(dbUpdateReceivedState, infoDeliveryState[index]).then(\n      (response: AxiosResponse) => {\n        setInfoDeliveryState(response.data[0]);\n        setInfoActualInventory(response.data[1]);\n      }\n    );\n    setSwitchUseEffect(!switchUseEffect);\n  };\n\n  const query_post = async (url: string, payload: any) => {\n    try {\n      const response: AxiosResponse = await Axios.post(url, payload);\n      return response.data;\n    } catch (err) {\n      console.error(\"There is an error\", err);\n      return;\n    }\n  };\n\n  const request_betweenshops_handler = async () => {\n    let valueReferenceSelected: string = check_type_case(\n      value_reference_request,\n      \"referencia\"\n    );\n    let valueOriginShopSelected: string = check_type_case(\n      value_origin_shop,\n      \"idTienda\"\n    );\n    let valueDestinationShopSelected: string = check_type_case(\n      value_destination_shop,\n      \"idTienda\"\n    );\n    let isReferenceExist: boolean = false;\n    let isOShopExist: boolean = false; //Origin\n    let isDShopExist: boolean = false; //Destination\n    const correctAmount = parseFloat(amount_request);\n\n    // CHECK IN DATABASE ==> return boolean\n    isReferenceExist = await check_existing_value(0, valueReferenceSelected); // O: referencia\n    isOShopExist = await check_existing_value(1, valueOriginShopSelected); // 1: idTienda\n    isDShopExist = await check_existing_value(1, valueDestinationShopSelected); // 1: idTienda\n\n    let enableInput = valueReferenceSelected !== \"\" && isReferenceExist;\n    let enableInput2 = valueOriginShopSelected !== \"\" && isOShopExist;\n    let enableInput3 = valueDestinationShopSelected !== \"\" && isDShopExist;\n\n    if (\n      Number.isInteger(correctAmount) &&\n      correctAmount > 0 &&\n      enableInput &&\n      enableInput2 &&\n      enableInput3\n    ) {\n      const data = {\n        cantidad: amount_request,\n        referencia: valueReferenceSelected,\n        tienda_origen: valueOriginShopSelected,\n        tienda_destino: valueDestinationShopSelected,\n      };\n      const response: AxiosResponse[] = await query_post(\n        dbSaveNewShopRequest,\n        data\n      );\n      set_value_reference_request(null);\n      refInputBetweenShops.current.value = \"\";\n      set_value_origin_shop(null);\n      set_value_destination_shop(null);\n      setIsShopOriginSelected(false);\n      setSwitchUseEffect(!switchUseEffect);\n      dispatch({ type: \"SUCCESSFUL_REQUEST\" });\n    } else {\n      dispatch({ type: \"WRONG_INPUT\" });\n    }\n  };\n\n  const handler_required_stock = async (index: number) => {\n    const actualTarget = infoRequestsBetweenShops[index];\n    const response: AxiosResponse[] = await query_post(dbRequestBetweenShops, {\n      ...infoRequestsBetweenShops[index],\n    });\n    setAuxiliar([\n      actualTarget.cantidad,\n      actualTarget.tienda_destino,\n      actualTarget.numero_peticion,\n    ]);\n    setIndexModal(index);\n    if (response[0] !== undefined) {\n      const required_stock_size: number = response.length;\n      const amount_number: number = parseInt(actualTarget.cantidad);\n      if (required_stock_size < amount_number) {\n        setCheckReqNumber(2);\n        setStockMissingAmount(amount_number - required_stock_size);\n        setStockAvailableAmount(required_stock_size);\n        setRequiredStock(response);\n        setIsOpenModalReq(true);\n      } else {\n        setCheckReqNumber(1);\n        setRequiredStock(response);\n        setIsOpenModalReq(true);\n      }\n    } else {\n      setCheckReqNumber(3);\n      setIsOpenModalReq(true);\n    }\n  };\n\n  const handler_final_decision = async (id_decision: number) => {\n    if (id_decision === 1) {\n      // ACCEPT\n      const response_decision_state: AxiosResponse | undefined =\n        await query_post(dbDecisionBetweenShops, {\n          numeros_de_entrada: requiredStock,\n          data: {\n            tienda_destino: auxiliar[1],\n            numero_peticion: auxiliar[2],\n            id_decision,\n          },\n        });\n      setSwitchUseEffect(!switchUseEffect);\n    } else if (id_decision === 0) {\n      // REFUSE\n      const response_decision_state: AxiosResponse | undefined =\n        await query_post(dbDecisionBetweenShops, {\n          data: { numero_peticion: auxiliar[2], id_decision },\n        });\n      setSwitchUseEffect(!switchUseEffect);\n    } else if (id_decision === 2) {\n      // PARTIAL\n      const response_decision_state: AxiosResponse | undefined =\n        await query_post(dbDecisionBetweenShops, {\n          numeros_de_entrada: requiredStock,\n          data: {\n            tienda_destino: auxiliar[1],\n            numero_peticion: auxiliar[2],\n            id_decision,\n            envio_real: stockAvailableAmount,\n          },\n        });\n      setSwitchUseEffect(!switchUseEffect);\n    }\n  };\n\n  const handleDropdownChange = (val: any) => {\n    const nameShopSelected = JSON.stringify(val.nombre_tienda).replace(\n      /['\"]+/g,\n      \"\"\n    );\n    Axios.get(dbShopsInfoURL).then((response: AxiosResponse) => {\n      const shopsNames = response.data;\n      const shopsNamesFiltered = shopsNames.filter(\n        (shop: any) => shop.nombre_tienda !== nameShopSelected\n      );\n      setShopsDestination(shopsNamesFiltered);\n      set_value_destination_shop(null);\n      setIsShopOriginSelected(true);\n    });\n  };\n\n  const handleNavbarClick = (e: any) => {\n    e.preventDefault();\n    const target = e.target.getAttribute(\"href\");\n    const location = document.querySelector(target).offsetTop;\n    const scrollDiv = document.getElementById(\"scroll-shops\") as HTMLDivElement;\n\n    scrollDiv.scrollTo(0, location - 55);\n  };\n\n  const toggleTab = (index: number) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"general-container-shops\">\n      <div className=\"navbar-shops\">\n        <h2 className=\"navbar-shops__h2\">Tiendas</h2>\n        <div className=\"navbar-shops-otpions\">\n          <div\n            className={\n              toggleState === 1 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            <a href=\"#shops-request-wp\" onClick={handleNavbarClick}>\n              Peticion a bodega productos\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 2 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            <a\n              href=\"#products-process-shops-section\"\n              onClick={handleNavbarClick}\n            >\n              Inventario tiendas\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 3 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            <a href=\"#products-send-shops-section\" onClick={handleNavbarClick}>\n              Productos enviados\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 4 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(4)}\n          >\n            <a href=\"#reqs-between-shops-section\" onClick={handleNavbarClick}>\n              Petición entre tiendas\n            </a>\n          </div>\n          <div\n            className={\n              toggleState === 5 ? \"tabs-shops active-tabs-shops\" : \"tabs-shops\"\n            }\n            onClick={() => toggleTab(5)}\n          >\n            <a\n              href=\"#active-req-between-shops-section\"\n              onClick={handleNavbarClick}\n            >\n              Peticiones activas entre tiendas\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"scroll-shops-section\" id=\"scroll-shops\">\n        <div className=\"shops-request-wp\" id=\"shops-request-wp\">\n          <div className=\"makeReqShopsContainer\">\n            <h4>Enviar peticiones a Bodega Producto</h4>\n            <div className=\"makeReqShopsContainer__dropdownReference\">\n              <FilterDropdown\n                options={references}\n                id=\"referencia\"\n                label=\"referencia\"\n                prompt=\"Seleccionar referencia\"\n                value={valueReferenceSelect}\n                onChange={(val: any) => setValueReferenceSelect(val)}\n              />\n            </div>\n            <input\n              ref={refInputReqToWarehouseProducts}\n              id=\"makeReqShopsContainer__actualAmount\"\n              name=\"actualAmount\"\n              className=\"makeReqShopsContainer__actualAmount\"\n              placeholder=\"Digite la cantidad\"\n              type=\"number\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                setAmount(e.target.value);\n              }}\n            />\n            <div className=\"makeReqShopsContainer__dropdownShop\">\n              <FilterDropdown\n                options={shops}\n                id=\"idTienda\"\n                label=\"nombre_tienda\"\n                prompt=\"Seleccionar tienda\"\n                value={valueShopSelect}\n                onChange={(val: any) => setValueShopSelect(val)}\n              />\n            </div>\n            <button\n              className=\"btn makeReqButtonContainer\"\n              type=\"button\"\n              onClick={productsRequest}\n            >\n              Enviar\n            </button>\n          </div>\n\n          <div className=\"information-shop-request-wp-container\">\n            <h2 className=\"information-shop-request-wp-container__h2\">\n              Enviar petición a Bodega Productos\n            </h2>\n            <p className=\"information-shop-request-wp-container__p\">\n              ¿Necesitas stock en alguna tienda? Entonces envía una petición a\n              Bodega Productos para enviar productos a una tienda en concreto.\n              Solo escoge la referencia del producto que necesitas, digita\n              cuantos deseas, selecciona la tienda de destino y preciona el\n              botón de enviar. Así de sencillo :)\n            </p>\n          </div>\n        </div>\n\n        <div\n          className=\"products-process-shops-section\"\n          id=\"products-process-shops-section\"\n        >\n          <h3 className=\"products-process-shops-section__h3\">\n            Inventario tiendas\n          </h3>\n          <p className=\"products-process-shops-section__p\">\n            En este apartado se encuentra el inventario de todas las tiendas.\n          </p>\n          <InfoShopsInventory\n            arrayInformation={infoActualInventory}\n            checkNumber={0}\n          />\n        </div>\n\n        <div\n          className=\"products-send-shops-section\"\n          id=\"products-send-shops-section\"\n        >\n          <h3 className=\"products-send-shops-section__h3\">\n            Productos en envio\n          </h3>\n          <p className=\"products-send-shops-section__p\">\n            Aquí se encuentran los productos que están en camino hacia una o\n            varias tiendas. Por favor, informe que ya ha llegado el pedido\n            presionando el botón 'Confirmar recibido'.\n          </p>\n          <InfoShopsInventory\n            arrayInformation={infoDeliveryState}\n            checkNumber={1}\n            receivedFunction={handlerReceived}\n          />\n        </div>\n\n        <div\n          className=\"reqs-between-shops-section\"\n          id=\"reqs-between-shops-section\"\n        >\n          <div className=\"reqs-between-shops\">\n            <h4>Enviar petición entre tiendas</h4>\n            <div className=\"reqs-between-shops__dropdownReference\">\n              <FilterDropdown\n                options={references}\n                id=\"referencia\"\n                label=\"referencia\"\n                prompt=\"Seleccionar referencia\"\n                value={value_reference_request}\n                onChange={(val: any) => set_value_reference_request(val)}\n              />\n            </div>\n            <input\n              ref={refInputBetweenShops}\n              id=\"reqs-between-shops__actualAmount\"\n              name=\"actualAmount\"\n              className=\"reqs-between-shops__actualAmount\"\n              placeholder=\"Digite la cantidad\"\n              type=\"number\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                set_amount_request(e.target.value);\n              }}\n            />\n            <div className=\"reqs-between-shops__dropdownShop\">\n              <FilterDropdown\n                options={shopsOrigin}\n                id=\"idTienda\"\n                label=\"nombre_tienda\"\n                prompt=\"Seleccionar la tienda origen\"\n                value={value_origin_shop}\n                onChange={(val: any) => {\n                  set_value_origin_shop(val);\n                  handleDropdownChange(val);\n                }}\n              />\n            </div>\n            <div className=\"reqs-between-shops__dropdownShop\">\n              {isShopOriginSelected ? (\n                <FilterDropdown\n                  options={shopsDestination}\n                  id=\"idTienda\"\n                  label=\"nombre_tienda\"\n                  prompt=\"Seleccionar la tienda de destino\"\n                  value={value_destination_shop}\n                  onChange={(val: any) => set_value_destination_shop(val)}\n                />\n              ) : null}\n            </div>\n            <div className=\"reqs-between-shops-buttonContainer\">\n              <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={request_betweenshops_handler}\n              >\n                Enviar\n              </button>\n            </div>\n          </div>\n\n          <div className=\"information-between-shops-container\">\n            <h2 className=\"information-between-shops-container__h2\">\n              Enviar petición entre tiendas\n            </h2>\n            <p className=\"information-between-shops-container__p\">\n              ¿Necesitas urgente un producto que solicita un cliente y está en\n              otra tienda? Entonces envía una petición entre tiendas. Solo\n              escoge la referencia del producto que necesitas, digita la\n              cantidad que requieres, escoge la tienda donde se encuentra el\n              producto, luego escoge la tienda de destino y presiona el botón\n              enviar. Así de fácil :)\n            </p>\n          </div>\n        </div>\n\n        <div\n          className=\"active-req-between-shops-section\"\n          id=\"active-req-between-shops-section\"\n        >\n          <h3 className=\"active-req-between-shops-section__h3\">\n            Peticiones activas entre tiendas\n          </h3>\n          <p className=\"active-req-between-shops-section__p\">\n            En este apartado se encuentran la peticiones de las tiendas que han\n            solicitado productos de otras tiendas.\n          </p>\n          {infoRequestsBetweenShops.length == 0 && (\n            <>\n              <div className=\"no-data-image-shops-container\">\n                <img\n                  src={noDataImage}\n                  alt=\"no-data\"\n                  className=\"no-data-image-shops-container__img\"\n                />\n              </div>\n              <p className=\"no-data-image-shops-paragraph\">\n                Aún no hay peticiones\n              </p>\n            </>\n          )}\n          {infoRequestsBetweenShops.length !== 0 && (\n            <div className=\"activeRequestBetweenShopsContainer\">\n              {infoRequestsBetweenShops.map((shop: any, index: any) => {\n                return (\n                  <div className=\"activeRequestBetweenShopsCard\">\n                    <h4 className=\"activeRequestBetweenShopsCard__h4\">\n                      Información de la petición\n                    </h4>\n                    <div className=\"activeRequestBetweenShopsCard__order\">\n                      # de petición: {shop.numero_peticion}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__reference\">\n                      Referencia: {shop.referencia}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__amount\">\n                      Cantidad: {shop.cantidad}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__shop\">\n                      Tienda Origen: {shop.tienda_origen_nombre}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__shop\">\n                      Tienda Destino: {shop.tienda_destino_nombre}\n                    </div>\n                    <div className=\"activeRequestBetweenShopsCard__date\">\n                      Fecha: {shop.timestamp.replace(\"T\", \" \").slice(0, 16)}\n                    </div>\n                    <button\n                      className=\"btn activeRequestBetweenShopsCard__deploy\"\n                      key={index}\n                      data-index={index}\n                      onClick={() => handler_required_stock(index)}\n                    >\n                      Desplegar requerimientos\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <Modal isOpen={state.isModalOpen} closeModal={closeModal}>\n        <h1 className=\"modalWarehouseh1\">{state.modalContent}</h1>\n        {state.imgCheckNumber === 1 && (\n          <img\n            className=\"modalWarehouseImg\"\n            src={completeImage}\n            alt=\"modalImg\"\n          />\n        )}\n        {state.imgCheckNumber === 2 && (\n          <img className=\"modalWarehouseImg\" src={errorImage} alt=\"modalImg\" />\n        )}\n      </Modal>\n      {isOpenModalReq && (\n        <ModalShopsReq\n          isOpen={true}\n          closeModal={closeModal}\n          checkReqNumber={checkReqNumber}\n          indexReq={indexModal}\n          handleDecision={handler_final_decision}\n          stockMissingAmount={stockMissingAmount}\n          stockAvailableAmount={stockAvailableAmount}\n          requiredStock={requiredStock}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Shops;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nfunction LoginRedirect({\n  isAuth: isAuth,\n  component: Component,\n  enable: enable,\n  ...rest\n}: any) {\n  return (\n    <div>\n      <Route\n        {...rest}\n        render={(props: any) => {\n          if (!isAuth) {\n            return <Component />;\n          } else {\n            return (\n              <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            );\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LoginRedirect;\n","import React from 'react';\n\nconst Error = () => {\n\n  return (<>\n\n    <h1>Error</h1>\n\n  </>);\n};\n\n export default Error;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nfunction ProtectedRoute({isAuth: isAuth, component: Component, ...rest}: any) {\n  return (\n    <div>\n      <Route\n        {...rest}\n        render={(props: any) => {\n          if (isAuth) {\n            return <Component />;\n          } else {\n            return (\n              <Redirect\n                to={{pathname: '/login', state: {from: props.location}}}\n              />\n            );\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport DressMaking from '../pages/DressMaking';\nimport WareHouse from '../pages/WareHouse';\nimport Diseño from '../pages/Design';\nimport Register from '../pages/Register';\nimport Error from '../pages/Error';\nimport Logout from '../pages/Logout';\nimport WareHouseProducts from '../pages/WareHouseProducts';\nimport Shops from '../pages/Shops';\n\nimport ProtectedRoute from './app/ProtectedRoute';\n\nconst Routes = ({rol, isAuth, enableRoutes}: any) => {\n  if (enableRoutes) {\n    return (\n      <div>\n        <Switch>\n          {rol.idRol === 1 && (\n            <ProtectedRoute\n              exact\n              path=\"/register\"\n              component={Register}\n              isAuth={isAuth}\n            />\n          )}\n          <ProtectedRoute exact path=\"/\" component={Home} isAuth={isAuth} />\n          <Route exact path=\"/dressmaking\" component={DressMaking} />\n          <ProtectedRoute\n            path=\"/warehouse\"\n            component={WareHouse}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/diseño\"\n            component={Diseño}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/logout\"\n            component={Logout}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/warehouseproducts\"\n            component={WareHouseProducts}\n            isAuth={isAuth}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/shops\"\n            component={Shops}\n            isAuth={isAuth}\n          />\n          <Route path=\"*\" component={Error} />\n        </Switch>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default Routes;\n","import React, {useState, useEffect, useContext} from 'react';\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\nimport Axios from 'axios';\nimport {myContext} from './components/Context';\n\n//PAGES:\nimport Login from './pages/Login';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport DressMaking from './pages/DressMaking';\nimport WareHouse from './pages/WareHouse';\nimport Diseño from './pages/Design';\nimport Register from './pages/Register';\nimport Error from './pages/Error';\nimport Logout from './pages/Logout';\nimport WareHouseProducts from './pages/WareHouseProducts';\nimport Shops from './pages/Shops';\n\n//PERSONAL MODULES:\nimport LoginRedirect from './components/login/LoginRedirect';\nimport Routes from './components/RoutesComponent';\nimport {baseURL} from './components/app/baseURL';\nimport ProtectedRoute from './components/app/ProtectedRoute';\n\nAxios.defaults.withCredentials = true;\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState<Boolean>(false);\n  const [enable, setEnable] = useState<Boolean>(false);\n  const [enableRoutes, setEnableRoutes] = useState<Boolean>(false);\n  const isAuthAPIURL: string = baseURL + 'api/isAuth';\n  const ctx = useContext(myContext);\n  let rol = {\n    idRol: 0,\n  };\n\n  if (ctx) {\n    rol = {\n      idRol: ctx.idRol,\n    };\n  }\n\n  useEffect(() => {\n    Axios.get(isAuthAPIURL)\n      .then((response) => {\n        const userInfo: any = response.data;\n        if (userInfo) {\n          setIsAuth(true);\n          setEnable(true);\n        } else {\n          setIsAuth(false);\n          setEnable(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [isAuth]);\n\n  useEffect(() => {}, [enableRoutes]);\n\n  const switchActive = () => {\n    setEnableRoutes(true);\n  };\n\n  if (enable) {\n    return (\n      <Router>\n        <div className=\"maxDiv-Control-App\">\n          <Navbar switchActive={switchActive} />\n          <div className=\"maxDiv-Control-App__Routes\">\n            <Routes rol={rol} isAuth={isAuth} enableRoutes={enableRoutes} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n  return (\n    <Router>\n      <switch>\n        <LoginRedirect\n          path=\"/login\"\n          component={Login}\n          isAuth={isAuth}\n          enable={enable}\n        />\n        <ProtectedRoute exact path=\"/\" component={Home} isAuth={isAuth} />\n        <ProtectedRoute exact path=\"/dressmaking\" component={DressMaking} />\n        <ProtectedRoute\n          path=\"/warehouse\"\n          component={WareHouse}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/diseño\"\n          component={Diseño}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/logout\"\n          component={Logout}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/warehouseproducts\"\n          component={WareHouseProducts}\n          isAuth={isAuth}\n        />\n        <ProtectedRoute exact path=\"/shops\" component={Shops} isAuth={isAuth} />\n        <ProtectedRoute\n          exact\n          path=\"/register\"\n          component={Register}\n          isAuth={isAuth}\n        />\n      </switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Context from './components/Context';\n\nReactDOM.render(\n  <Context>\n    <App />\n  </Context>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Not Found.78ed35cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Loading.0d06e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Securelogin.647d91f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/shop.723592c7.png\";","module.exports = __webpack_public_path__ + \"static/media/notify.0ada35db.svg\";","module.exports = __webpack_public_path__ + \"static/media/register.68e633cb.svg\";"],"sourceRoot":""}